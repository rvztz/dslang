Grammar:

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID add_pid SCOLON programdv
Rule 2     programdv -> empty
Rule 3     programdv -> main programdv
Rule 4     programdv -> function programdv
Rule 5     programdv -> vars programdv
Rule 6     main -> MAIN LPAREN RPAREN LCURL maindv
Rule 7     maindv -> RCURL
Rule 8     maindv -> statement maindv
Rule 9     maindv -> vars maindv
Rule 10    vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype
Rule 11    vtype -> TSTR
Rule 12    vtype -> TFLT
Rule 13    vtype -> TINT
Rule 14    vtype -> TBOOL
Rule 15    listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv
Rule 16    listids -> ID store_varid listdv
Rule 17    dimlist -> empty
Rule 18    dimlist -> LBRCKT CTEINT RBRCKT append_dim dimlist
Rule 19    listdv -> empty
Rule 20    listdv -> COMMA listids
Rule 21    function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
Rule 22    typefunc -> VOID
Rule 23    typefunc -> vtype
Rule 24    funcparams -> empty
Rule 25    funcparams -> params
Rule 26    params -> vtype ID save_param paramsdv
Rule 27    paramsdv -> empty
Rule 28    paramsdv -> COMMA params
Rule 29    funcstat -> RCURL
Rule 30    funcstat -> statement funcstat
Rule 31    funcstat -> vars funcstat
Rule 32    funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
Rule 33    funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
Rule 34    fcallparams -> ID ASGN expr add_params fcalltermdv
Rule 35    fcalltermdv -> empty
Rule 36    fcalltermdv -> COMMA fcallparams
Rule 37    statement -> rreturn
Rule 38    statement -> wwhile
Rule 39    statement -> cond
Rule 40    statement -> pprint
Rule 41    statement -> read
Rule 42    statement -> funccall
Rule 43    statement -> shrtassgn
Rule 44    statement -> assign
Rule 45    statement -> expr
Rule 46    expr -> bexp check_expr_st
Rule 47    expr -> bexp OR add_oper expr check_expr_st
Rule 48    expr -> bexp AND add_oper expr check_expr_st
Rule 49    bexp -> asexp check_bexp_st
Rule 50    bexp -> asexp GTEQ add_oper bexp check_bexp_st
Rule 51    bexp -> asexp LTEQ add_oper bexp check_bexp_st
Rule 52    bexp -> asexp NOTEQ add_oper bexp check_bexp_st
Rule 53    bexp -> asexp EQ add_oper bexp check_bexp_st
Rule 54    bexp -> asexp GT add_oper bexp check_bexp_st
Rule 55    bexp -> asexp LT add_oper bexp check_bexp_st
Rule 56    asexp -> emdexp check_asexp_st
Rule 57    asexp -> emdexp SUB add_oper asexp check_asexp_st  [precedence=left, level=1]
Rule 58    asexp -> emdexp ADD add_oper asexp check_asexp_st  [precedence=left, level=1]
Rule 59    emdexp -> pexp check_emdexp_st
Rule 60    emdexp -> pexp DIV add_oper emdexp check_emdexp_st  [precedence=left, level=2]
Rule 61    emdexp -> pexp MULT add_oper emdexp check_emdexp_st  [precedence=left, level=2]
Rule 62    emdexp -> pexp EXP add_oper emdexp check_emdexp_st
Rule 63    pexp -> valcall
Rule 64    pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
Rule 65    assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON
Rule 66    assign -> ID ASGN expr gen_assign SCOLON
Rule 67    shrtassgn -> ID SHRT expr gen_shrt_assign
Rule 68    read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
Rule 69    read -> READ LPAREN ID RPAREN gen_read SCOLON
Rule 70    pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
Rule 71    printlist -> printerm printlistdv
Rule 72    printlistdv -> empty
Rule 73    printlistdv -> COMMA printerm
Rule 74    printerm -> CTESTR push_printct
Rule 75    printerm -> varidx add_vidx push_printidl
Rule 76    printerm -> ID push_printid
Rule 77    cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
Rule 78    cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
Rule 79    condv -> RBRCKT
Rule 80    condv -> statement condv
Rule 81    wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
Rule 82    whiledv -> RBRCKT
Rule 83    whiledv -> statement whiledv
Rule 84    rreturn -> RETURN expr SCOLON check_return
Rule 85    valcall -> funccall get_funcv
Rule 86    valcall -> varidx add_vidx
Rule 87    valcall -> varid add_vid
Rule 88    valcall -> const save_const
Rule 89    const -> CTESTR
Rule 90    const -> CTEINT
Rule 91    const -> CTEFLT
Rule 92    const -> FALSE
Rule 93    const -> TRUE
Rule 94    varid -> ID
Rule 95    varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
Rule 96    arrindex -> empty
Rule 97    arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex
Rule 98    empty -> <empty>
Rule 99    add_pid -> <empty>
Rule 100   add_cvtype -> <empty>
Rule 101   reset_vtype -> <empty>
Rule 102   store_varid -> <empty>
Rule 103   store_arrid -> <empty>
Rule 104   append_dim -> <empty>
Rule 105   def_dims -> <empty>
Rule 106   save_const -> <empty>
Rule 107   add_vid -> <empty>
Rule 108   validate_arr -> <empty>
Rule 109   gen_vdim -> <empty>
Rule 110   add_vidx -> <empty>
Rule 111   add_oper -> <empty>
Rule 112   check_expr_st -> <empty>
Rule 113   check_bexp_st -> <empty>
Rule 114   check_asexp_st -> <empty>
Rule 115   check_emdexp_st -> <empty>
Rule 116   push_oper_ctx -> <empty>
Rule 117   pop_oper_ctx -> <empty>
Rule 118   gen_assign -> <empty>
Rule 119   gen_idx_assign -> <empty>
Rule 120   gen_shrt_assign -> <empty>
Rule 121   gen_read -> <empty>
Rule 122   gen_idxread -> <empty>
Rule 123   push_printid -> <empty>
Rule 124   push_printidl -> <empty>
Rule 125   push_printct -> <empty>
Rule 126   gen_print_quads -> <empty>
Rule 127   gen_cond_quad -> <empty>
Rule 128   add_jquad -> <empty>
Rule 129   gen_egoto -> <empty>
Rule 130   add_wpquad -> <empty>
Rule 131   gen_wquad -> <empty>
Rule 132   add_wquad -> <empty>
Rule 133   save_func -> <empty>
Rule 134   save_param -> <empty>
Rule 135   add_fqid -> <empty>
Rule 136   check_return -> <empty>
Rule 137   remove_fscope -> <empty>
Rule 138   validate_fid -> <empty>
Rule 139   add_params -> <empty>
Rule 140   add_curr_pquad -> <empty>
Rule 141   get_funcv -> <empty>

Unused terminals:

    FOR
    TO
    PLOT
    DFRAME

Terminals, with rules where they appear:

ADD                  : 58
AND                  : 48
ASGN                 : 34 65 66
COLON                : 10
COMMA                : 20 28 36 73
CTEFLT               : 91
CTEINT               : 15 18 90
CTESTR               : 74 89
DFRAME               : 
DIV                  : 60
DO                   : 81
ELSE                 : 77
EQ                   : 53
EXP                  : 62
FALSE                : 92
FOR                  : 
FUNCTION             : 21
GT                   : 54
GTEQ                 : 50
ID                   : 1 15 16 21 26 32 33 34 66 67 69 76 94 95
IF                   : 77 78
LBRCKT               : 15 18 77 77 78 81 95 97
LCURL                : 6 21
LPAREN               : 6 21 32 33 64 68 69 70 77 78 81
LT                   : 55
LTEQ                 : 51
MAIN                 : 6
MULT                 : 61
NOTEQ                : 52
OR                   : 47
PLOT                 : 
PRINT                : 70
PROGRAM              : 1
RBRCKT               : 15 18 79 82 95 97
RCURL                : 7 29
READ                 : 68 69
RETURN               : 84
RPAREN               : 6 21 32 33 64 68 69 70 77 78 81
SCOLON               : 1 10 32 33 65 66 68 69 70 84
SHRT                 : 67
SUB                  : 57
TBOOL                : 14
TFLT                 : 12
TINT                 : 13
TO                   : 
TRUE                 : 93
TSTR                 : 11
VAR                  : 10
VOID                 : 22
WHILE                : 81
error                : 

Nonterminals, with rules where they appear:

add_curr_pquad       : 32 33
add_cvtype           : 10
add_fqid             : 21
add_jquad            : 77 78
add_oper             : 47 48 50 51 52 53 54 55 57 58 60 61 62
add_params           : 34
add_pid              : 1
add_vid              : 87
add_vidx             : 65 68 75 86
add_wpquad           : 81
add_wquad            : 81
append_dim           : 18
arrindex             : 95 97
asexp                : 49 50 51 52 53 54 55 57 58
assign               : 44
bexp                 : 46 47 48 50 51 52 53 54 55
check_asexp_st       : 56 57 58
check_bexp_st        : 49 50 51 52 53 54 55
check_emdexp_st      : 59 60 61 62
check_expr_st        : 46 47 48
check_return         : 84
cond                 : 39
condv                : 77 77 78 80
const                : 88
def_dims             : 15
dimlist              : 15 18
emdexp               : 56 57 58 60 61 62
empty                : 2 17 19 24 27 35 72 96
expr                 : 34 45 47 48 64 65 66 67 77 78 81 84 95 97
fcallparams          : 33 36
fcalltermdv          : 34
funccall             : 42 85
funcparams           : 21
funcstat             : 21 30 31
function             : 4
gen_assign           : 66
gen_cond_quad        : 77 78
gen_egoto            : 77
gen_idx_assign       : 65
gen_idxread          : 68
gen_print_quads      : 70
gen_read             : 69
gen_shrt_assign      : 67
gen_vdim             : 95 97
gen_wquad            : 81
get_funcv            : 85
listdv               : 15 16
listids              : 10 20
main                 : 3
maindv               : 6 8 9
params               : 25 28
paramsdv             : 26
pexp                 : 59 60 61 62
pop_oper_ctx         : 64
pprint               : 40
printerm             : 71 73
printlist            : 70
printlistdv          : 71
program              : 0
programdv            : 1 3 4 5
push_oper_ctx        : 64
push_printct         : 74
push_printid         : 76
push_printidl        : 75
read                 : 41
remove_fscope        : 21
reset_vtype          : 10
rreturn              : 37
save_const           : 88
save_func            : 21
save_param           : 26
shrtassgn            : 43
statement            : 8 30 80 83
store_arrid          : 15
store_varid          : 16
typefunc             : 21
valcall              : 63
validate_arr         : 95
validate_fid         : 32 33
varid                : 87
varidx               : 65 68 75 86
vars                 : 5 9 31
vtype                : 10 23 26
whiledv              : 81 83
wwhile               : 38


state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID add_pid SCOLON programdv
    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .


state 2

    (1) program -> PROGRAM . ID add_pid SCOLON programdv
    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . add_pid SCOLON programdv
    (99) add_pid -> .
    SCOLON          reduce using rule 99 (add_pid -> .)

    add_pid                        shift and go to state 4

state 4

    (1) program -> PROGRAM ID add_pid . SCOLON programdv
    SCOLON          shift and go to state 5


state 5

    (1) program -> PROGRAM ID add_pid SCOLON . programdv
    (2) programdv -> . empty
    (3) programdv -> . main programdv
    (4) programdv -> . function programdv
    (5) programdv -> . vars programdv
    (98) empty -> .
    (6) main -> . MAIN LPAREN RPAREN LCURL maindv
    (21) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    $end            reduce using rule 98 (empty -> .)
    MAIN            shift and go to state 11
    FUNCTION        shift and go to state 12
    VAR             shift and go to state 13

    programdv                      shift and go to state 6
    empty                          shift and go to state 7
    main                           shift and go to state 8
    function                       shift and go to state 9
    vars                           shift and go to state 10

state 6

    (1) program -> PROGRAM ID add_pid SCOLON programdv .
    $end            reduce using rule 1 (program -> PROGRAM ID add_pid SCOLON programdv .)


state 7

    (2) programdv -> empty .
    $end            reduce using rule 2 (programdv -> empty .)


state 8

    (3) programdv -> main . programdv
    (2) programdv -> . empty
    (3) programdv -> . main programdv
    (4) programdv -> . function programdv
    (5) programdv -> . vars programdv
    (98) empty -> .
    (6) main -> . MAIN LPAREN RPAREN LCURL maindv
    (21) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    $end            reduce using rule 98 (empty -> .)
    MAIN            shift and go to state 11
    FUNCTION        shift and go to state 12
    VAR             shift and go to state 13

    main                           shift and go to state 8
    programdv                      shift and go to state 14
    empty                          shift and go to state 7
    function                       shift and go to state 9
    vars                           shift and go to state 10

state 9

    (4) programdv -> function . programdv
    (2) programdv -> . empty
    (3) programdv -> . main programdv
    (4) programdv -> . function programdv
    (5) programdv -> . vars programdv
    (98) empty -> .
    (6) main -> . MAIN LPAREN RPAREN LCURL maindv
    (21) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    $end            reduce using rule 98 (empty -> .)
    MAIN            shift and go to state 11
    FUNCTION        shift and go to state 12
    VAR             shift and go to state 13

    function                       shift and go to state 9
    programdv                      shift and go to state 15
    empty                          shift and go to state 7
    main                           shift and go to state 8
    vars                           shift and go to state 10

state 10

    (5) programdv -> vars . programdv
    (2) programdv -> . empty
    (3) programdv -> . main programdv
    (4) programdv -> . function programdv
    (5) programdv -> . vars programdv
    (98) empty -> .
    (6) main -> . MAIN LPAREN RPAREN LCURL maindv
    (21) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    $end            reduce using rule 98 (empty -> .)
    MAIN            shift and go to state 11
    FUNCTION        shift and go to state 12
    VAR             shift and go to state 13

    vars                           shift and go to state 10
    programdv                      shift and go to state 16
    empty                          shift and go to state 7
    main                           shift and go to state 8
    function                       shift and go to state 9

state 11

    (6) main -> MAIN . LPAREN RPAREN LCURL maindv
    LPAREN          shift and go to state 17


state 12

    (21) function -> FUNCTION . typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (22) typefunc -> . VOID
    (23) typefunc -> . vtype
    (11) vtype -> . TSTR
    (12) vtype -> . TFLT
    (13) vtype -> . TINT
    (14) vtype -> . TBOOL
    VOID            shift and go to state 19
    TSTR            shift and go to state 21
    TFLT            shift and go to state 22
    TINT            shift and go to state 23
    TBOOL           shift and go to state 24

    typefunc                       shift and go to state 18
    vtype                          shift and go to state 20

state 13

    (10) vars -> VAR . vtype add_cvtype COLON listids SCOLON reset_vtype
    (11) vtype -> . TSTR
    (12) vtype -> . TFLT
    (13) vtype -> . TINT
    (14) vtype -> . TBOOL
    TSTR            shift and go to state 21
    TFLT            shift and go to state 22
    TINT            shift and go to state 23
    TBOOL           shift and go to state 24

    vtype                          shift and go to state 25

state 14

    (3) programdv -> main programdv .
    $end            reduce using rule 3 (programdv -> main programdv .)


state 15

    (4) programdv -> function programdv .
    $end            reduce using rule 4 (programdv -> function programdv .)


state 16

    (5) programdv -> vars programdv .
    $end            reduce using rule 5 (programdv -> vars programdv .)


state 17

    (6) main -> MAIN LPAREN . RPAREN LCURL maindv
    RPAREN          shift and go to state 26


state 18

    (21) function -> FUNCTION typefunc . ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    ID              shift and go to state 27


state 19

    (22) typefunc -> VOID .
    ID              reduce using rule 22 (typefunc -> VOID .)


state 20

    (23) typefunc -> vtype .
    ID              reduce using rule 23 (typefunc -> vtype .)


state 21

    (11) vtype -> TSTR .
    ID              reduce using rule 11 (vtype -> TSTR .)
    COLON           reduce using rule 11 (vtype -> TSTR .)


state 22

    (12) vtype -> TFLT .
    ID              reduce using rule 12 (vtype -> TFLT .)
    COLON           reduce using rule 12 (vtype -> TFLT .)


state 23

    (13) vtype -> TINT .
    ID              reduce using rule 13 (vtype -> TINT .)
    COLON           reduce using rule 13 (vtype -> TINT .)


state 24

    (14) vtype -> TBOOL .
    ID              reduce using rule 14 (vtype -> TBOOL .)
    COLON           reduce using rule 14 (vtype -> TBOOL .)


state 25

    (10) vars -> VAR vtype . add_cvtype COLON listids SCOLON reset_vtype
    (100) add_cvtype -> .
    COLON           reduce using rule 100 (add_cvtype -> .)

    add_cvtype                     shift and go to state 28

state 26

    (6) main -> MAIN LPAREN RPAREN . LCURL maindv
    LCURL           shift and go to state 29


state 27

    (21) function -> FUNCTION typefunc ID . save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (133) save_func -> .
    LPAREN          reduce using rule 133 (save_func -> .)

    save_func                      shift and go to state 30

state 28

    (10) vars -> VAR vtype add_cvtype . COLON listids SCOLON reset_vtype
    COLON           shift and go to state 31


state 29

    (6) main -> MAIN LPAREN RPAREN LCURL . maindv
    (7) maindv -> . RCURL
    (8) maindv -> . statement maindv
    (9) maindv -> . vars maindv
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RCURL           shift and go to state 34
    VAR             shift and go to state 13
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    maindv                         shift and go to state 33
    statement                      shift and go to state 35
    vars                           shift and go to state 36
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    expr                           shift and go to state 45
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 30

    (21) function -> FUNCTION typefunc ID save_func . LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    LPAREN          shift and go to state 65


state 31

    (10) vars -> VAR vtype add_cvtype COLON . listids SCOLON reset_vtype
    (15) listids -> . ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv
    (16) listids -> . ID store_varid listdv
    ID              shift and go to state 67

    listids                        shift and go to state 66

state 32

    (64) pexp -> LPAREN . push_oper_ctx expr RPAREN pop_oper_ctx
    (116) push_oper_ctx -> .
    LPAREN          reduce using rule 116 (push_oper_ctx -> .)
    ID              reduce using rule 116 (push_oper_ctx -> .)
    CTESTR          reduce using rule 116 (push_oper_ctx -> .)
    CTEINT          reduce using rule 116 (push_oper_ctx -> .)
    CTEFLT          reduce using rule 116 (push_oper_ctx -> .)
    FALSE           reduce using rule 116 (push_oper_ctx -> .)
    TRUE            reduce using rule 116 (push_oper_ctx -> .)

    push_oper_ctx                  shift and go to state 68

state 33

    (6) main -> MAIN LPAREN RPAREN LCURL maindv .
    MAIN            reduce using rule 6 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    FUNCTION        reduce using rule 6 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    VAR             reduce using rule 6 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    $end            reduce using rule 6 (main -> MAIN LPAREN RPAREN LCURL maindv .)


state 34

    (7) maindv -> RCURL .
    MAIN            reduce using rule 7 (maindv -> RCURL .)
    FUNCTION        reduce using rule 7 (maindv -> RCURL .)
    VAR             reduce using rule 7 (maindv -> RCURL .)
    $end            reduce using rule 7 (maindv -> RCURL .)


state 35

    (8) maindv -> statement . maindv
    (7) maindv -> . RCURL
    (8) maindv -> . statement maindv
    (9) maindv -> . vars maindv
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RCURL           shift and go to state 34
    VAR             shift and go to state 13
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    statement                      shift and go to state 35
    maindv                         shift and go to state 69
    vars                           shift and go to state 36
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    expr                           shift and go to state 45
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 36

    (9) maindv -> vars . maindv
    (7) maindv -> . RCURL
    (8) maindv -> . statement maindv
    (9) maindv -> . vars maindv
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RCURL           shift and go to state 34
    VAR             shift and go to state 13
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    vars                           shift and go to state 36
    maindv                         shift and go to state 70
    statement                      shift and go to state 35
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    expr                           shift and go to state 45
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 37

    (37) statement -> rreturn .
    RCURL           reduce using rule 37 (statement -> rreturn .)
    VAR             reduce using rule 37 (statement -> rreturn .)
    RETURN          reduce using rule 37 (statement -> rreturn .)
    WHILE           reduce using rule 37 (statement -> rreturn .)
    IF              reduce using rule 37 (statement -> rreturn .)
    PRINT           reduce using rule 37 (statement -> rreturn .)
    READ            reduce using rule 37 (statement -> rreturn .)
    ID              reduce using rule 37 (statement -> rreturn .)
    LPAREN          reduce using rule 37 (statement -> rreturn .)
    CTESTR          reduce using rule 37 (statement -> rreturn .)
    CTEINT          reduce using rule 37 (statement -> rreturn .)
    CTEFLT          reduce using rule 37 (statement -> rreturn .)
    FALSE           reduce using rule 37 (statement -> rreturn .)
    TRUE            reduce using rule 37 (statement -> rreturn .)
    RBRCKT          reduce using rule 37 (statement -> rreturn .)


state 38

    (38) statement -> wwhile .
    RCURL           reduce using rule 38 (statement -> wwhile .)
    VAR             reduce using rule 38 (statement -> wwhile .)
    RETURN          reduce using rule 38 (statement -> wwhile .)
    WHILE           reduce using rule 38 (statement -> wwhile .)
    IF              reduce using rule 38 (statement -> wwhile .)
    PRINT           reduce using rule 38 (statement -> wwhile .)
    READ            reduce using rule 38 (statement -> wwhile .)
    ID              reduce using rule 38 (statement -> wwhile .)
    LPAREN          reduce using rule 38 (statement -> wwhile .)
    CTESTR          reduce using rule 38 (statement -> wwhile .)
    CTEINT          reduce using rule 38 (statement -> wwhile .)
    CTEFLT          reduce using rule 38 (statement -> wwhile .)
    FALSE           reduce using rule 38 (statement -> wwhile .)
    TRUE            reduce using rule 38 (statement -> wwhile .)
    RBRCKT          reduce using rule 38 (statement -> wwhile .)


state 39

    (39) statement -> cond .
    RCURL           reduce using rule 39 (statement -> cond .)
    VAR             reduce using rule 39 (statement -> cond .)
    RETURN          reduce using rule 39 (statement -> cond .)
    WHILE           reduce using rule 39 (statement -> cond .)
    IF              reduce using rule 39 (statement -> cond .)
    PRINT           reduce using rule 39 (statement -> cond .)
    READ            reduce using rule 39 (statement -> cond .)
    ID              reduce using rule 39 (statement -> cond .)
    LPAREN          reduce using rule 39 (statement -> cond .)
    CTESTR          reduce using rule 39 (statement -> cond .)
    CTEINT          reduce using rule 39 (statement -> cond .)
    CTEFLT          reduce using rule 39 (statement -> cond .)
    FALSE           reduce using rule 39 (statement -> cond .)
    TRUE            reduce using rule 39 (statement -> cond .)
    RBRCKT          reduce using rule 39 (statement -> cond .)


state 40

    (40) statement -> pprint .
    RCURL           reduce using rule 40 (statement -> pprint .)
    VAR             reduce using rule 40 (statement -> pprint .)
    RETURN          reduce using rule 40 (statement -> pprint .)
    WHILE           reduce using rule 40 (statement -> pprint .)
    IF              reduce using rule 40 (statement -> pprint .)
    PRINT           reduce using rule 40 (statement -> pprint .)
    READ            reduce using rule 40 (statement -> pprint .)
    ID              reduce using rule 40 (statement -> pprint .)
    LPAREN          reduce using rule 40 (statement -> pprint .)
    CTESTR          reduce using rule 40 (statement -> pprint .)
    CTEINT          reduce using rule 40 (statement -> pprint .)
    CTEFLT          reduce using rule 40 (statement -> pprint .)
    FALSE           reduce using rule 40 (statement -> pprint .)
    TRUE            reduce using rule 40 (statement -> pprint .)
    RBRCKT          reduce using rule 40 (statement -> pprint .)


state 41

    (41) statement -> read .
    RCURL           reduce using rule 41 (statement -> read .)
    VAR             reduce using rule 41 (statement -> read .)
    RETURN          reduce using rule 41 (statement -> read .)
    WHILE           reduce using rule 41 (statement -> read .)
    IF              reduce using rule 41 (statement -> read .)
    PRINT           reduce using rule 41 (statement -> read .)
    READ            reduce using rule 41 (statement -> read .)
    ID              reduce using rule 41 (statement -> read .)
    LPAREN          reduce using rule 41 (statement -> read .)
    CTESTR          reduce using rule 41 (statement -> read .)
    CTEINT          reduce using rule 41 (statement -> read .)
    CTEFLT          reduce using rule 41 (statement -> read .)
    FALSE           reduce using rule 41 (statement -> read .)
    TRUE            reduce using rule 41 (statement -> read .)
    RBRCKT          reduce using rule 41 (statement -> read .)


state 42

    (42) statement -> funccall .
    (85) valcall -> funccall . get_funcv
    (141) get_funcv -> .
  ! reduce/reduce conflict for RCURL resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for VAR resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for RETURN resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for WHILE resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for IF resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for PRINT resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for READ resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for ID resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for LPAREN resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for CTESTR resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for CTEINT resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for CTEFLT resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for FALSE resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for TRUE resolved using rule 42 (statement -> funccall .)
  ! reduce/reduce conflict for RBRCKT resolved using rule 42 (statement -> funccall .)
    RCURL           reduce using rule 42 (statement -> funccall .)
    VAR             reduce using rule 42 (statement -> funccall .)
    RETURN          reduce using rule 42 (statement -> funccall .)
    WHILE           reduce using rule 42 (statement -> funccall .)
    IF              reduce using rule 42 (statement -> funccall .)
    PRINT           reduce using rule 42 (statement -> funccall .)
    READ            reduce using rule 42 (statement -> funccall .)
    ID              reduce using rule 42 (statement -> funccall .)
    LPAREN          reduce using rule 42 (statement -> funccall .)
    CTESTR          reduce using rule 42 (statement -> funccall .)
    CTEINT          reduce using rule 42 (statement -> funccall .)
    CTEFLT          reduce using rule 42 (statement -> funccall .)
    FALSE           reduce using rule 42 (statement -> funccall .)
    TRUE            reduce using rule 42 (statement -> funccall .)
    RBRCKT          reduce using rule 42 (statement -> funccall .)
    DIV             reduce using rule 141 (get_funcv -> .)
    MULT            reduce using rule 141 (get_funcv -> .)
    EXP             reduce using rule 141 (get_funcv -> .)
    SUB             reduce using rule 141 (get_funcv -> .)
    ADD             reduce using rule 141 (get_funcv -> .)
    GTEQ            reduce using rule 141 (get_funcv -> .)
    LTEQ            reduce using rule 141 (get_funcv -> .)
    NOTEQ           reduce using rule 141 (get_funcv -> .)
    EQ              reduce using rule 141 (get_funcv -> .)
    GT              reduce using rule 141 (get_funcv -> .)
    LT              reduce using rule 141 (get_funcv -> .)
    OR              reduce using rule 141 (get_funcv -> .)
    AND             reduce using rule 141 (get_funcv -> .)

    get_funcv                      shift and go to state 71

state 43

    (43) statement -> shrtassgn .
    RCURL           reduce using rule 43 (statement -> shrtassgn .)
    VAR             reduce using rule 43 (statement -> shrtassgn .)
    RETURN          reduce using rule 43 (statement -> shrtassgn .)
    WHILE           reduce using rule 43 (statement -> shrtassgn .)
    IF              reduce using rule 43 (statement -> shrtassgn .)
    PRINT           reduce using rule 43 (statement -> shrtassgn .)
    READ            reduce using rule 43 (statement -> shrtassgn .)
    ID              reduce using rule 43 (statement -> shrtassgn .)
    LPAREN          reduce using rule 43 (statement -> shrtassgn .)
    CTESTR          reduce using rule 43 (statement -> shrtassgn .)
    CTEINT          reduce using rule 43 (statement -> shrtassgn .)
    CTEFLT          reduce using rule 43 (statement -> shrtassgn .)
    FALSE           reduce using rule 43 (statement -> shrtassgn .)
    TRUE            reduce using rule 43 (statement -> shrtassgn .)
    RBRCKT          reduce using rule 43 (statement -> shrtassgn .)


state 44

    (44) statement -> assign .
    RCURL           reduce using rule 44 (statement -> assign .)
    VAR             reduce using rule 44 (statement -> assign .)
    RETURN          reduce using rule 44 (statement -> assign .)
    WHILE           reduce using rule 44 (statement -> assign .)
    IF              reduce using rule 44 (statement -> assign .)
    PRINT           reduce using rule 44 (statement -> assign .)
    READ            reduce using rule 44 (statement -> assign .)
    ID              reduce using rule 44 (statement -> assign .)
    LPAREN          reduce using rule 44 (statement -> assign .)
    CTESTR          reduce using rule 44 (statement -> assign .)
    CTEINT          reduce using rule 44 (statement -> assign .)
    CTEFLT          reduce using rule 44 (statement -> assign .)
    FALSE           reduce using rule 44 (statement -> assign .)
    TRUE            reduce using rule 44 (statement -> assign .)
    RBRCKT          reduce using rule 44 (statement -> assign .)


state 45

    (45) statement -> expr .
    RCURL           reduce using rule 45 (statement -> expr .)
    VAR             reduce using rule 45 (statement -> expr .)
    RETURN          reduce using rule 45 (statement -> expr .)
    WHILE           reduce using rule 45 (statement -> expr .)
    IF              reduce using rule 45 (statement -> expr .)
    PRINT           reduce using rule 45 (statement -> expr .)
    READ            reduce using rule 45 (statement -> expr .)
    ID              reduce using rule 45 (statement -> expr .)
    LPAREN          reduce using rule 45 (statement -> expr .)
    CTESTR          reduce using rule 45 (statement -> expr .)
    CTEINT          reduce using rule 45 (statement -> expr .)
    CTEFLT          reduce using rule 45 (statement -> expr .)
    FALSE           reduce using rule 45 (statement -> expr .)
    TRUE            reduce using rule 45 (statement -> expr .)
    RBRCKT          reduce using rule 45 (statement -> expr .)


state 46

    (84) rreturn -> RETURN . expr SCOLON check_return
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 72
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 47

    (81) wwhile -> WHILE . add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (130) add_wpquad -> .
    LPAREN          reduce using rule 130 (add_wpquad -> .)

    add_wpquad                     shift and go to state 76

state 48

    (77) cond -> IF . LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> IF . LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    LPAREN          shift and go to state 77


state 49

    (70) pprint -> PRINT . LPAREN printlist RPAREN SCOLON gen_print_quads
    LPAREN          shift and go to state 78


state 50

    (68) read -> READ . LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> READ . LPAREN ID RPAREN gen_read SCOLON
    LPAREN          shift and go to state 79


state 51

    (65) assign -> varidx . add_vidx ASGN expr gen_idx_assign SCOLON
    (86) valcall -> varidx . add_vidx
    (110) add_vidx -> .
    ASGN            reduce using rule 110 (add_vidx -> .)
    DIV             reduce using rule 110 (add_vidx -> .)
    MULT            reduce using rule 110 (add_vidx -> .)
    EXP             reduce using rule 110 (add_vidx -> .)
    SUB             reduce using rule 110 (add_vidx -> .)
    ADD             reduce using rule 110 (add_vidx -> .)
    GTEQ            reduce using rule 110 (add_vidx -> .)
    LTEQ            reduce using rule 110 (add_vidx -> .)
    NOTEQ           reduce using rule 110 (add_vidx -> .)
    EQ              reduce using rule 110 (add_vidx -> .)
    GT              reduce using rule 110 (add_vidx -> .)
    LT              reduce using rule 110 (add_vidx -> .)
    OR              reduce using rule 110 (add_vidx -> .)
    AND             reduce using rule 110 (add_vidx -> .)
    RCURL           reduce using rule 110 (add_vidx -> .)
    VAR             reduce using rule 110 (add_vidx -> .)
    RETURN          reduce using rule 110 (add_vidx -> .)
    WHILE           reduce using rule 110 (add_vidx -> .)
    IF              reduce using rule 110 (add_vidx -> .)
    PRINT           reduce using rule 110 (add_vidx -> .)
    READ            reduce using rule 110 (add_vidx -> .)
    ID              reduce using rule 110 (add_vidx -> .)
    LPAREN          reduce using rule 110 (add_vidx -> .)
    CTESTR          reduce using rule 110 (add_vidx -> .)
    CTEINT          reduce using rule 110 (add_vidx -> .)
    CTEFLT          reduce using rule 110 (add_vidx -> .)
    FALSE           reduce using rule 110 (add_vidx -> .)
    TRUE            reduce using rule 110 (add_vidx -> .)
    RBRCKT          reduce using rule 110 (add_vidx -> .)

    add_vidx                       shift and go to state 80

state 52

    (32) funccall -> ID . validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> ID . validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> ID . SHRT expr gen_shrt_assign
    (66) assign -> ID . ASGN expr gen_assign SCOLON
    (95) varidx -> ID . LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> ID .
    (138) validate_fid -> .
  ! reduce/reduce conflict for LPAREN resolved using rule 94 (varid -> ID .)
    SHRT            shift and go to state 82
    ASGN            shift and go to state 83
    LBRCKT          shift and go to state 84
    DIV             reduce using rule 94 (varid -> ID .)
    MULT            reduce using rule 94 (varid -> ID .)
    EXP             reduce using rule 94 (varid -> ID .)
    SUB             reduce using rule 94 (varid -> ID .)
    ADD             reduce using rule 94 (varid -> ID .)
    GTEQ            reduce using rule 94 (varid -> ID .)
    LTEQ            reduce using rule 94 (varid -> ID .)
    NOTEQ           reduce using rule 94 (varid -> ID .)
    EQ              reduce using rule 94 (varid -> ID .)
    GT              reduce using rule 94 (varid -> ID .)
    LT              reduce using rule 94 (varid -> ID .)
    OR              reduce using rule 94 (varid -> ID .)
    AND             reduce using rule 94 (varid -> ID .)
    RCURL           reduce using rule 94 (varid -> ID .)
    VAR             reduce using rule 94 (varid -> ID .)
    RETURN          reduce using rule 94 (varid -> ID .)
    WHILE           reduce using rule 94 (varid -> ID .)
    IF              reduce using rule 94 (varid -> ID .)
    PRINT           reduce using rule 94 (varid -> ID .)
    READ            reduce using rule 94 (varid -> ID .)
    ID              reduce using rule 94 (varid -> ID .)
    LPAREN          reduce using rule 94 (varid -> ID .)
    CTESTR          reduce using rule 94 (varid -> ID .)
    CTEINT          reduce using rule 94 (varid -> ID .)
    CTEFLT          reduce using rule 94 (varid -> ID .)
    FALSE           reduce using rule 94 (varid -> ID .)
    TRUE            reduce using rule 94 (varid -> ID .)
    RBRCKT          reduce using rule 94 (varid -> ID .)

    validate_fid                   shift and go to state 81

state 53

    (46) expr -> bexp . check_expr_st
    (47) expr -> bexp . OR add_oper expr check_expr_st
    (48) expr -> bexp . AND add_oper expr check_expr_st
    (112) check_expr_st -> .
    OR              shift and go to state 86
    AND             shift and go to state 87
    RCURL           reduce using rule 112 (check_expr_st -> .)
    VAR             reduce using rule 112 (check_expr_st -> .)
    RETURN          reduce using rule 112 (check_expr_st -> .)
    WHILE           reduce using rule 112 (check_expr_st -> .)
    IF              reduce using rule 112 (check_expr_st -> .)
    PRINT           reduce using rule 112 (check_expr_st -> .)
    READ            reduce using rule 112 (check_expr_st -> .)
    ID              reduce using rule 112 (check_expr_st -> .)
    LPAREN          reduce using rule 112 (check_expr_st -> .)
    CTESTR          reduce using rule 112 (check_expr_st -> .)
    CTEINT          reduce using rule 112 (check_expr_st -> .)
    CTEFLT          reduce using rule 112 (check_expr_st -> .)
    FALSE           reduce using rule 112 (check_expr_st -> .)
    TRUE            reduce using rule 112 (check_expr_st -> .)
    SCOLON          reduce using rule 112 (check_expr_st -> .)
    RPAREN          reduce using rule 112 (check_expr_st -> .)
    RBRCKT          reduce using rule 112 (check_expr_st -> .)
    COMMA           reduce using rule 112 (check_expr_st -> .)

    check_expr_st                  shift and go to state 85

state 54

    (49) bexp -> asexp . check_bexp_st
    (50) bexp -> asexp . GTEQ add_oper bexp check_bexp_st
    (51) bexp -> asexp . LTEQ add_oper bexp check_bexp_st
    (52) bexp -> asexp . NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> asexp . EQ add_oper bexp check_bexp_st
    (54) bexp -> asexp . GT add_oper bexp check_bexp_st
    (55) bexp -> asexp . LT add_oper bexp check_bexp_st
    (113) check_bexp_st -> .
    GTEQ            shift and go to state 89
    LTEQ            shift and go to state 90
    NOTEQ           shift and go to state 91
    EQ              shift and go to state 92
    GT              shift and go to state 93
    LT              shift and go to state 94
    OR              reduce using rule 113 (check_bexp_st -> .)
    AND             reduce using rule 113 (check_bexp_st -> .)
    RCURL           reduce using rule 113 (check_bexp_st -> .)
    VAR             reduce using rule 113 (check_bexp_st -> .)
    RETURN          reduce using rule 113 (check_bexp_st -> .)
    WHILE           reduce using rule 113 (check_bexp_st -> .)
    IF              reduce using rule 113 (check_bexp_st -> .)
    PRINT           reduce using rule 113 (check_bexp_st -> .)
    READ            reduce using rule 113 (check_bexp_st -> .)
    ID              reduce using rule 113 (check_bexp_st -> .)
    LPAREN          reduce using rule 113 (check_bexp_st -> .)
    CTESTR          reduce using rule 113 (check_bexp_st -> .)
    CTEINT          reduce using rule 113 (check_bexp_st -> .)
    CTEFLT          reduce using rule 113 (check_bexp_st -> .)
    FALSE           reduce using rule 113 (check_bexp_st -> .)
    TRUE            reduce using rule 113 (check_bexp_st -> .)
    SCOLON          reduce using rule 113 (check_bexp_st -> .)
    RPAREN          reduce using rule 113 (check_bexp_st -> .)
    RBRCKT          reduce using rule 113 (check_bexp_st -> .)
    COMMA           reduce using rule 113 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 88

state 55

    (56) asexp -> emdexp . check_asexp_st
    (57) asexp -> emdexp . SUB add_oper asexp check_asexp_st
    (58) asexp -> emdexp . ADD add_oper asexp check_asexp_st
    (114) check_asexp_st -> .
    SUB             shift and go to state 96
    ADD             shift and go to state 97
    GTEQ            reduce using rule 114 (check_asexp_st -> .)
    LTEQ            reduce using rule 114 (check_asexp_st -> .)
    NOTEQ           reduce using rule 114 (check_asexp_st -> .)
    EQ              reduce using rule 114 (check_asexp_st -> .)
    GT              reduce using rule 114 (check_asexp_st -> .)
    LT              reduce using rule 114 (check_asexp_st -> .)
    OR              reduce using rule 114 (check_asexp_st -> .)
    AND             reduce using rule 114 (check_asexp_st -> .)
    RCURL           reduce using rule 114 (check_asexp_st -> .)
    VAR             reduce using rule 114 (check_asexp_st -> .)
    RETURN          reduce using rule 114 (check_asexp_st -> .)
    WHILE           reduce using rule 114 (check_asexp_st -> .)
    IF              reduce using rule 114 (check_asexp_st -> .)
    PRINT           reduce using rule 114 (check_asexp_st -> .)
    READ            reduce using rule 114 (check_asexp_st -> .)
    ID              reduce using rule 114 (check_asexp_st -> .)
    LPAREN          reduce using rule 114 (check_asexp_st -> .)
    CTESTR          reduce using rule 114 (check_asexp_st -> .)
    CTEINT          reduce using rule 114 (check_asexp_st -> .)
    CTEFLT          reduce using rule 114 (check_asexp_st -> .)
    FALSE           reduce using rule 114 (check_asexp_st -> .)
    TRUE            reduce using rule 114 (check_asexp_st -> .)
    SCOLON          reduce using rule 114 (check_asexp_st -> .)
    RPAREN          reduce using rule 114 (check_asexp_st -> .)
    RBRCKT          reduce using rule 114 (check_asexp_st -> .)
    COMMA           reduce using rule 114 (check_asexp_st -> .)

    check_asexp_st                 shift and go to state 95

state 56

    (59) emdexp -> pexp . check_emdexp_st
    (60) emdexp -> pexp . DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> pexp . MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> pexp . EXP add_oper emdexp check_emdexp_st
    (115) check_emdexp_st -> .
    DIV             shift and go to state 99
    MULT            shift and go to state 100
    EXP             shift and go to state 101
    SUB             reduce using rule 115 (check_emdexp_st -> .)
    ADD             reduce using rule 115 (check_emdexp_st -> .)
    GTEQ            reduce using rule 115 (check_emdexp_st -> .)
    LTEQ            reduce using rule 115 (check_emdexp_st -> .)
    NOTEQ           reduce using rule 115 (check_emdexp_st -> .)
    EQ              reduce using rule 115 (check_emdexp_st -> .)
    GT              reduce using rule 115 (check_emdexp_st -> .)
    LT              reduce using rule 115 (check_emdexp_st -> .)
    OR              reduce using rule 115 (check_emdexp_st -> .)
    AND             reduce using rule 115 (check_emdexp_st -> .)
    RCURL           reduce using rule 115 (check_emdexp_st -> .)
    VAR             reduce using rule 115 (check_emdexp_st -> .)
    RETURN          reduce using rule 115 (check_emdexp_st -> .)
    WHILE           reduce using rule 115 (check_emdexp_st -> .)
    IF              reduce using rule 115 (check_emdexp_st -> .)
    PRINT           reduce using rule 115 (check_emdexp_st -> .)
    READ            reduce using rule 115 (check_emdexp_st -> .)
    ID              reduce using rule 115 (check_emdexp_st -> .)
    LPAREN          reduce using rule 115 (check_emdexp_st -> .)
    CTESTR          reduce using rule 115 (check_emdexp_st -> .)
    CTEINT          reduce using rule 115 (check_emdexp_st -> .)
    CTEFLT          reduce using rule 115 (check_emdexp_st -> .)
    FALSE           reduce using rule 115 (check_emdexp_st -> .)
    TRUE            reduce using rule 115 (check_emdexp_st -> .)
    SCOLON          reduce using rule 115 (check_emdexp_st -> .)
    RPAREN          reduce using rule 115 (check_emdexp_st -> .)
    RBRCKT          reduce using rule 115 (check_emdexp_st -> .)
    COMMA           reduce using rule 115 (check_emdexp_st -> .)

    check_emdexp_st                shift and go to state 98

state 57

    (63) pexp -> valcall .
    DIV             reduce using rule 63 (pexp -> valcall .)
    MULT            reduce using rule 63 (pexp -> valcall .)
    EXP             reduce using rule 63 (pexp -> valcall .)
    SUB             reduce using rule 63 (pexp -> valcall .)
    ADD             reduce using rule 63 (pexp -> valcall .)
    GTEQ            reduce using rule 63 (pexp -> valcall .)
    LTEQ            reduce using rule 63 (pexp -> valcall .)
    NOTEQ           reduce using rule 63 (pexp -> valcall .)
    EQ              reduce using rule 63 (pexp -> valcall .)
    GT              reduce using rule 63 (pexp -> valcall .)
    LT              reduce using rule 63 (pexp -> valcall .)
    OR              reduce using rule 63 (pexp -> valcall .)
    AND             reduce using rule 63 (pexp -> valcall .)
    RCURL           reduce using rule 63 (pexp -> valcall .)
    VAR             reduce using rule 63 (pexp -> valcall .)
    RETURN          reduce using rule 63 (pexp -> valcall .)
    WHILE           reduce using rule 63 (pexp -> valcall .)
    IF              reduce using rule 63 (pexp -> valcall .)
    PRINT           reduce using rule 63 (pexp -> valcall .)
    READ            reduce using rule 63 (pexp -> valcall .)
    ID              reduce using rule 63 (pexp -> valcall .)
    LPAREN          reduce using rule 63 (pexp -> valcall .)
    CTESTR          reduce using rule 63 (pexp -> valcall .)
    CTEINT          reduce using rule 63 (pexp -> valcall .)
    CTEFLT          reduce using rule 63 (pexp -> valcall .)
    FALSE           reduce using rule 63 (pexp -> valcall .)
    TRUE            reduce using rule 63 (pexp -> valcall .)
    SCOLON          reduce using rule 63 (pexp -> valcall .)
    RPAREN          reduce using rule 63 (pexp -> valcall .)
    RBRCKT          reduce using rule 63 (pexp -> valcall .)
    COMMA           reduce using rule 63 (pexp -> valcall .)


state 58

    (87) valcall -> varid . add_vid
    (107) add_vid -> .
    DIV             reduce using rule 107 (add_vid -> .)
    MULT            reduce using rule 107 (add_vid -> .)
    EXP             reduce using rule 107 (add_vid -> .)
    SUB             reduce using rule 107 (add_vid -> .)
    ADD             reduce using rule 107 (add_vid -> .)
    GTEQ            reduce using rule 107 (add_vid -> .)
    LTEQ            reduce using rule 107 (add_vid -> .)
    NOTEQ           reduce using rule 107 (add_vid -> .)
    EQ              reduce using rule 107 (add_vid -> .)
    GT              reduce using rule 107 (add_vid -> .)
    LT              reduce using rule 107 (add_vid -> .)
    OR              reduce using rule 107 (add_vid -> .)
    AND             reduce using rule 107 (add_vid -> .)
    RCURL           reduce using rule 107 (add_vid -> .)
    VAR             reduce using rule 107 (add_vid -> .)
    RETURN          reduce using rule 107 (add_vid -> .)
    WHILE           reduce using rule 107 (add_vid -> .)
    IF              reduce using rule 107 (add_vid -> .)
    PRINT           reduce using rule 107 (add_vid -> .)
    READ            reduce using rule 107 (add_vid -> .)
    ID              reduce using rule 107 (add_vid -> .)
    LPAREN          reduce using rule 107 (add_vid -> .)
    CTESTR          reduce using rule 107 (add_vid -> .)
    CTEINT          reduce using rule 107 (add_vid -> .)
    CTEFLT          reduce using rule 107 (add_vid -> .)
    FALSE           reduce using rule 107 (add_vid -> .)
    TRUE            reduce using rule 107 (add_vid -> .)
    SCOLON          reduce using rule 107 (add_vid -> .)
    RPAREN          reduce using rule 107 (add_vid -> .)
    RBRCKT          reduce using rule 107 (add_vid -> .)
    COMMA           reduce using rule 107 (add_vid -> .)

    add_vid                        shift and go to state 102

state 59

    (88) valcall -> const . save_const
    (106) save_const -> .
    DIV             reduce using rule 106 (save_const -> .)
    MULT            reduce using rule 106 (save_const -> .)
    EXP             reduce using rule 106 (save_const -> .)
    SUB             reduce using rule 106 (save_const -> .)
    ADD             reduce using rule 106 (save_const -> .)
    GTEQ            reduce using rule 106 (save_const -> .)
    LTEQ            reduce using rule 106 (save_const -> .)
    NOTEQ           reduce using rule 106 (save_const -> .)
    EQ              reduce using rule 106 (save_const -> .)
    GT              reduce using rule 106 (save_const -> .)
    LT              reduce using rule 106 (save_const -> .)
    OR              reduce using rule 106 (save_const -> .)
    AND             reduce using rule 106 (save_const -> .)
    RCURL           reduce using rule 106 (save_const -> .)
    VAR             reduce using rule 106 (save_const -> .)
    RETURN          reduce using rule 106 (save_const -> .)
    WHILE           reduce using rule 106 (save_const -> .)
    IF              reduce using rule 106 (save_const -> .)
    PRINT           reduce using rule 106 (save_const -> .)
    READ            reduce using rule 106 (save_const -> .)
    ID              reduce using rule 106 (save_const -> .)
    LPAREN          reduce using rule 106 (save_const -> .)
    CTESTR          reduce using rule 106 (save_const -> .)
    CTEINT          reduce using rule 106 (save_const -> .)
    CTEFLT          reduce using rule 106 (save_const -> .)
    FALSE           reduce using rule 106 (save_const -> .)
    TRUE            reduce using rule 106 (save_const -> .)
    SCOLON          reduce using rule 106 (save_const -> .)
    RPAREN          reduce using rule 106 (save_const -> .)
    RBRCKT          reduce using rule 106 (save_const -> .)
    COMMA           reduce using rule 106 (save_const -> .)

    save_const                     shift and go to state 103

state 60

    (89) const -> CTESTR .
    DIV             reduce using rule 89 (const -> CTESTR .)
    MULT            reduce using rule 89 (const -> CTESTR .)
    EXP             reduce using rule 89 (const -> CTESTR .)
    SUB             reduce using rule 89 (const -> CTESTR .)
    ADD             reduce using rule 89 (const -> CTESTR .)
    GTEQ            reduce using rule 89 (const -> CTESTR .)
    LTEQ            reduce using rule 89 (const -> CTESTR .)
    NOTEQ           reduce using rule 89 (const -> CTESTR .)
    EQ              reduce using rule 89 (const -> CTESTR .)
    GT              reduce using rule 89 (const -> CTESTR .)
    LT              reduce using rule 89 (const -> CTESTR .)
    OR              reduce using rule 89 (const -> CTESTR .)
    AND             reduce using rule 89 (const -> CTESTR .)
    RCURL           reduce using rule 89 (const -> CTESTR .)
    VAR             reduce using rule 89 (const -> CTESTR .)
    RETURN          reduce using rule 89 (const -> CTESTR .)
    WHILE           reduce using rule 89 (const -> CTESTR .)
    IF              reduce using rule 89 (const -> CTESTR .)
    PRINT           reduce using rule 89 (const -> CTESTR .)
    READ            reduce using rule 89 (const -> CTESTR .)
    ID              reduce using rule 89 (const -> CTESTR .)
    LPAREN          reduce using rule 89 (const -> CTESTR .)
    CTESTR          reduce using rule 89 (const -> CTESTR .)
    CTEINT          reduce using rule 89 (const -> CTESTR .)
    CTEFLT          reduce using rule 89 (const -> CTESTR .)
    FALSE           reduce using rule 89 (const -> CTESTR .)
    TRUE            reduce using rule 89 (const -> CTESTR .)
    SCOLON          reduce using rule 89 (const -> CTESTR .)
    RPAREN          reduce using rule 89 (const -> CTESTR .)
    RBRCKT          reduce using rule 89 (const -> CTESTR .)
    COMMA           reduce using rule 89 (const -> CTESTR .)


state 61

    (90) const -> CTEINT .
    DIV             reduce using rule 90 (const -> CTEINT .)
    MULT            reduce using rule 90 (const -> CTEINT .)
    EXP             reduce using rule 90 (const -> CTEINT .)
    SUB             reduce using rule 90 (const -> CTEINT .)
    ADD             reduce using rule 90 (const -> CTEINT .)
    GTEQ            reduce using rule 90 (const -> CTEINT .)
    LTEQ            reduce using rule 90 (const -> CTEINT .)
    NOTEQ           reduce using rule 90 (const -> CTEINT .)
    EQ              reduce using rule 90 (const -> CTEINT .)
    GT              reduce using rule 90 (const -> CTEINT .)
    LT              reduce using rule 90 (const -> CTEINT .)
    OR              reduce using rule 90 (const -> CTEINT .)
    AND             reduce using rule 90 (const -> CTEINT .)
    RCURL           reduce using rule 90 (const -> CTEINT .)
    VAR             reduce using rule 90 (const -> CTEINT .)
    RETURN          reduce using rule 90 (const -> CTEINT .)
    WHILE           reduce using rule 90 (const -> CTEINT .)
    IF              reduce using rule 90 (const -> CTEINT .)
    PRINT           reduce using rule 90 (const -> CTEINT .)
    READ            reduce using rule 90 (const -> CTEINT .)
    ID              reduce using rule 90 (const -> CTEINT .)
    LPAREN          reduce using rule 90 (const -> CTEINT .)
    CTESTR          reduce using rule 90 (const -> CTEINT .)
    CTEINT          reduce using rule 90 (const -> CTEINT .)
    CTEFLT          reduce using rule 90 (const -> CTEINT .)
    FALSE           reduce using rule 90 (const -> CTEINT .)
    TRUE            reduce using rule 90 (const -> CTEINT .)
    SCOLON          reduce using rule 90 (const -> CTEINT .)
    RPAREN          reduce using rule 90 (const -> CTEINT .)
    RBRCKT          reduce using rule 90 (const -> CTEINT .)
    COMMA           reduce using rule 90 (const -> CTEINT .)


state 62

    (91) const -> CTEFLT .
    DIV             reduce using rule 91 (const -> CTEFLT .)
    MULT            reduce using rule 91 (const -> CTEFLT .)
    EXP             reduce using rule 91 (const -> CTEFLT .)
    SUB             reduce using rule 91 (const -> CTEFLT .)
    ADD             reduce using rule 91 (const -> CTEFLT .)
    GTEQ            reduce using rule 91 (const -> CTEFLT .)
    LTEQ            reduce using rule 91 (const -> CTEFLT .)
    NOTEQ           reduce using rule 91 (const -> CTEFLT .)
    EQ              reduce using rule 91 (const -> CTEFLT .)
    GT              reduce using rule 91 (const -> CTEFLT .)
    LT              reduce using rule 91 (const -> CTEFLT .)
    OR              reduce using rule 91 (const -> CTEFLT .)
    AND             reduce using rule 91 (const -> CTEFLT .)
    RCURL           reduce using rule 91 (const -> CTEFLT .)
    VAR             reduce using rule 91 (const -> CTEFLT .)
    RETURN          reduce using rule 91 (const -> CTEFLT .)
    WHILE           reduce using rule 91 (const -> CTEFLT .)
    IF              reduce using rule 91 (const -> CTEFLT .)
    PRINT           reduce using rule 91 (const -> CTEFLT .)
    READ            reduce using rule 91 (const -> CTEFLT .)
    ID              reduce using rule 91 (const -> CTEFLT .)
    LPAREN          reduce using rule 91 (const -> CTEFLT .)
    CTESTR          reduce using rule 91 (const -> CTEFLT .)
    CTEINT          reduce using rule 91 (const -> CTEFLT .)
    CTEFLT          reduce using rule 91 (const -> CTEFLT .)
    FALSE           reduce using rule 91 (const -> CTEFLT .)
    TRUE            reduce using rule 91 (const -> CTEFLT .)
    SCOLON          reduce using rule 91 (const -> CTEFLT .)
    RPAREN          reduce using rule 91 (const -> CTEFLT .)
    RBRCKT          reduce using rule 91 (const -> CTEFLT .)
    COMMA           reduce using rule 91 (const -> CTEFLT .)


state 63

    (92) const -> FALSE .
    DIV             reduce using rule 92 (const -> FALSE .)
    MULT            reduce using rule 92 (const -> FALSE .)
    EXP             reduce using rule 92 (const -> FALSE .)
    SUB             reduce using rule 92 (const -> FALSE .)
    ADD             reduce using rule 92 (const -> FALSE .)
    GTEQ            reduce using rule 92 (const -> FALSE .)
    LTEQ            reduce using rule 92 (const -> FALSE .)
    NOTEQ           reduce using rule 92 (const -> FALSE .)
    EQ              reduce using rule 92 (const -> FALSE .)
    GT              reduce using rule 92 (const -> FALSE .)
    LT              reduce using rule 92 (const -> FALSE .)
    OR              reduce using rule 92 (const -> FALSE .)
    AND             reduce using rule 92 (const -> FALSE .)
    RCURL           reduce using rule 92 (const -> FALSE .)
    VAR             reduce using rule 92 (const -> FALSE .)
    RETURN          reduce using rule 92 (const -> FALSE .)
    WHILE           reduce using rule 92 (const -> FALSE .)
    IF              reduce using rule 92 (const -> FALSE .)
    PRINT           reduce using rule 92 (const -> FALSE .)
    READ            reduce using rule 92 (const -> FALSE .)
    ID              reduce using rule 92 (const -> FALSE .)
    LPAREN          reduce using rule 92 (const -> FALSE .)
    CTESTR          reduce using rule 92 (const -> FALSE .)
    CTEINT          reduce using rule 92 (const -> FALSE .)
    CTEFLT          reduce using rule 92 (const -> FALSE .)
    FALSE           reduce using rule 92 (const -> FALSE .)
    TRUE            reduce using rule 92 (const -> FALSE .)
    SCOLON          reduce using rule 92 (const -> FALSE .)
    RPAREN          reduce using rule 92 (const -> FALSE .)
    RBRCKT          reduce using rule 92 (const -> FALSE .)
    COMMA           reduce using rule 92 (const -> FALSE .)


state 64

    (93) const -> TRUE .
    DIV             reduce using rule 93 (const -> TRUE .)
    MULT            reduce using rule 93 (const -> TRUE .)
    EXP             reduce using rule 93 (const -> TRUE .)
    SUB             reduce using rule 93 (const -> TRUE .)
    ADD             reduce using rule 93 (const -> TRUE .)
    GTEQ            reduce using rule 93 (const -> TRUE .)
    LTEQ            reduce using rule 93 (const -> TRUE .)
    NOTEQ           reduce using rule 93 (const -> TRUE .)
    EQ              reduce using rule 93 (const -> TRUE .)
    GT              reduce using rule 93 (const -> TRUE .)
    LT              reduce using rule 93 (const -> TRUE .)
    OR              reduce using rule 93 (const -> TRUE .)
    AND             reduce using rule 93 (const -> TRUE .)
    RCURL           reduce using rule 93 (const -> TRUE .)
    VAR             reduce using rule 93 (const -> TRUE .)
    RETURN          reduce using rule 93 (const -> TRUE .)
    WHILE           reduce using rule 93 (const -> TRUE .)
    IF              reduce using rule 93 (const -> TRUE .)
    PRINT           reduce using rule 93 (const -> TRUE .)
    READ            reduce using rule 93 (const -> TRUE .)
    ID              reduce using rule 93 (const -> TRUE .)
    LPAREN          reduce using rule 93 (const -> TRUE .)
    CTESTR          reduce using rule 93 (const -> TRUE .)
    CTEINT          reduce using rule 93 (const -> TRUE .)
    CTEFLT          reduce using rule 93 (const -> TRUE .)
    FALSE           reduce using rule 93 (const -> TRUE .)
    TRUE            reduce using rule 93 (const -> TRUE .)
    SCOLON          reduce using rule 93 (const -> TRUE .)
    RPAREN          reduce using rule 93 (const -> TRUE .)
    RBRCKT          reduce using rule 93 (const -> TRUE .)
    COMMA           reduce using rule 93 (const -> TRUE .)


state 65

    (21) function -> FUNCTION typefunc ID save_func LPAREN . funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (24) funcparams -> . empty
    (25) funcparams -> . params
    (98) empty -> .
    (26) params -> . vtype ID save_param paramsdv
    (11) vtype -> . TSTR
    (12) vtype -> . TFLT
    (13) vtype -> . TINT
    (14) vtype -> . TBOOL
    RPAREN          reduce using rule 98 (empty -> .)
    TSTR            shift and go to state 21
    TFLT            shift and go to state 22
    TINT            shift and go to state 23
    TBOOL           shift and go to state 24

    funcparams                     shift and go to state 104
    empty                          shift and go to state 105
    params                         shift and go to state 106
    vtype                          shift and go to state 107

state 66

    (10) vars -> VAR vtype add_cvtype COLON listids . SCOLON reset_vtype
    SCOLON          shift and go to state 108


state 67

    (15) listids -> ID . LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv
    (16) listids -> ID . store_varid listdv
    (102) store_varid -> .
    LBRCKT          shift and go to state 109
    COMMA           reduce using rule 102 (store_varid -> .)
    SCOLON          reduce using rule 102 (store_varid -> .)

    store_varid                    shift and go to state 110

state 68

    (64) pexp -> LPAREN push_oper_ctx . expr RPAREN pop_oper_ctx
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 111
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 69

    (8) maindv -> statement maindv .
    MAIN            reduce using rule 8 (maindv -> statement maindv .)
    FUNCTION        reduce using rule 8 (maindv -> statement maindv .)
    VAR             reduce using rule 8 (maindv -> statement maindv .)
    $end            reduce using rule 8 (maindv -> statement maindv .)


state 70

    (9) maindv -> vars maindv .
    MAIN            reduce using rule 9 (maindv -> vars maindv .)
    FUNCTION        reduce using rule 9 (maindv -> vars maindv .)
    VAR             reduce using rule 9 (maindv -> vars maindv .)
    $end            reduce using rule 9 (maindv -> vars maindv .)


state 71

    (85) valcall -> funccall get_funcv .
    DIV             reduce using rule 85 (valcall -> funccall get_funcv .)
    MULT            reduce using rule 85 (valcall -> funccall get_funcv .)
    EXP             reduce using rule 85 (valcall -> funccall get_funcv .)
    SUB             reduce using rule 85 (valcall -> funccall get_funcv .)
    ADD             reduce using rule 85 (valcall -> funccall get_funcv .)
    GTEQ            reduce using rule 85 (valcall -> funccall get_funcv .)
    LTEQ            reduce using rule 85 (valcall -> funccall get_funcv .)
    NOTEQ           reduce using rule 85 (valcall -> funccall get_funcv .)
    EQ              reduce using rule 85 (valcall -> funccall get_funcv .)
    GT              reduce using rule 85 (valcall -> funccall get_funcv .)
    LT              reduce using rule 85 (valcall -> funccall get_funcv .)
    OR              reduce using rule 85 (valcall -> funccall get_funcv .)
    AND             reduce using rule 85 (valcall -> funccall get_funcv .)
    RCURL           reduce using rule 85 (valcall -> funccall get_funcv .)
    VAR             reduce using rule 85 (valcall -> funccall get_funcv .)
    RETURN          reduce using rule 85 (valcall -> funccall get_funcv .)
    WHILE           reduce using rule 85 (valcall -> funccall get_funcv .)
    IF              reduce using rule 85 (valcall -> funccall get_funcv .)
    PRINT           reduce using rule 85 (valcall -> funccall get_funcv .)
    READ            reduce using rule 85 (valcall -> funccall get_funcv .)
    ID              reduce using rule 85 (valcall -> funccall get_funcv .)
    LPAREN          reduce using rule 85 (valcall -> funccall get_funcv .)
    CTESTR          reduce using rule 85 (valcall -> funccall get_funcv .)
    CTEINT          reduce using rule 85 (valcall -> funccall get_funcv .)
    CTEFLT          reduce using rule 85 (valcall -> funccall get_funcv .)
    FALSE           reduce using rule 85 (valcall -> funccall get_funcv .)
    TRUE            reduce using rule 85 (valcall -> funccall get_funcv .)
    SCOLON          reduce using rule 85 (valcall -> funccall get_funcv .)
    RPAREN          reduce using rule 85 (valcall -> funccall get_funcv .)
    RBRCKT          reduce using rule 85 (valcall -> funccall get_funcv .)
    COMMA           reduce using rule 85 (valcall -> funccall get_funcv .)


state 72

    (84) rreturn -> RETURN expr . SCOLON check_return
    SCOLON          shift and go to state 112


state 73

    (85) valcall -> funccall . get_funcv
    (141) get_funcv -> .
    DIV             reduce using rule 141 (get_funcv -> .)
    MULT            reduce using rule 141 (get_funcv -> .)
    EXP             reduce using rule 141 (get_funcv -> .)
    SUB             reduce using rule 141 (get_funcv -> .)
    ADD             reduce using rule 141 (get_funcv -> .)
    GTEQ            reduce using rule 141 (get_funcv -> .)
    LTEQ            reduce using rule 141 (get_funcv -> .)
    NOTEQ           reduce using rule 141 (get_funcv -> .)
    EQ              reduce using rule 141 (get_funcv -> .)
    GT              reduce using rule 141 (get_funcv -> .)
    LT              reduce using rule 141 (get_funcv -> .)
    OR              reduce using rule 141 (get_funcv -> .)
    AND             reduce using rule 141 (get_funcv -> .)
    SCOLON          reduce using rule 141 (get_funcv -> .)
    RPAREN          reduce using rule 141 (get_funcv -> .)
    RCURL           reduce using rule 141 (get_funcv -> .)
    VAR             reduce using rule 141 (get_funcv -> .)
    RETURN          reduce using rule 141 (get_funcv -> .)
    WHILE           reduce using rule 141 (get_funcv -> .)
    IF              reduce using rule 141 (get_funcv -> .)
    PRINT           reduce using rule 141 (get_funcv -> .)
    READ            reduce using rule 141 (get_funcv -> .)
    ID              reduce using rule 141 (get_funcv -> .)
    LPAREN          reduce using rule 141 (get_funcv -> .)
    CTESTR          reduce using rule 141 (get_funcv -> .)
    CTEINT          reduce using rule 141 (get_funcv -> .)
    CTEFLT          reduce using rule 141 (get_funcv -> .)
    FALSE           reduce using rule 141 (get_funcv -> .)
    TRUE            reduce using rule 141 (get_funcv -> .)
    RBRCKT          reduce using rule 141 (get_funcv -> .)
    COMMA           reduce using rule 141 (get_funcv -> .)

    get_funcv                      shift and go to state 71

state 74

    (86) valcall -> varidx . add_vidx
    (110) add_vidx -> .
    DIV             reduce using rule 110 (add_vidx -> .)
    MULT            reduce using rule 110 (add_vidx -> .)
    EXP             reduce using rule 110 (add_vidx -> .)
    SUB             reduce using rule 110 (add_vidx -> .)
    ADD             reduce using rule 110 (add_vidx -> .)
    GTEQ            reduce using rule 110 (add_vidx -> .)
    LTEQ            reduce using rule 110 (add_vidx -> .)
    NOTEQ           reduce using rule 110 (add_vidx -> .)
    EQ              reduce using rule 110 (add_vidx -> .)
    GT              reduce using rule 110 (add_vidx -> .)
    LT              reduce using rule 110 (add_vidx -> .)
    OR              reduce using rule 110 (add_vidx -> .)
    AND             reduce using rule 110 (add_vidx -> .)
    SCOLON          reduce using rule 110 (add_vidx -> .)
    RPAREN          reduce using rule 110 (add_vidx -> .)
    RCURL           reduce using rule 110 (add_vidx -> .)
    VAR             reduce using rule 110 (add_vidx -> .)
    RETURN          reduce using rule 110 (add_vidx -> .)
    WHILE           reduce using rule 110 (add_vidx -> .)
    IF              reduce using rule 110 (add_vidx -> .)
    PRINT           reduce using rule 110 (add_vidx -> .)
    READ            reduce using rule 110 (add_vidx -> .)
    ID              reduce using rule 110 (add_vidx -> .)
    LPAREN          reduce using rule 110 (add_vidx -> .)
    CTESTR          reduce using rule 110 (add_vidx -> .)
    CTEINT          reduce using rule 110 (add_vidx -> .)
    CTEFLT          reduce using rule 110 (add_vidx -> .)
    FALSE           reduce using rule 110 (add_vidx -> .)
    TRUE            reduce using rule 110 (add_vidx -> .)
    RBRCKT          reduce using rule 110 (add_vidx -> .)
    COMMA           reduce using rule 110 (add_vidx -> .)

    add_vidx                       shift and go to state 113

state 75

    (32) funccall -> ID . validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> ID . validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> ID . LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> ID .
    (138) validate_fid -> .
  ! reduce/reduce conflict for LPAREN resolved using rule 94 (varid -> ID .)
    LBRCKT          shift and go to state 84
    DIV             reduce using rule 94 (varid -> ID .)
    MULT            reduce using rule 94 (varid -> ID .)
    EXP             reduce using rule 94 (varid -> ID .)
    SUB             reduce using rule 94 (varid -> ID .)
    ADD             reduce using rule 94 (varid -> ID .)
    GTEQ            reduce using rule 94 (varid -> ID .)
    LTEQ            reduce using rule 94 (varid -> ID .)
    NOTEQ           reduce using rule 94 (varid -> ID .)
    EQ              reduce using rule 94 (varid -> ID .)
    GT              reduce using rule 94 (varid -> ID .)
    LT              reduce using rule 94 (varid -> ID .)
    OR              reduce using rule 94 (varid -> ID .)
    AND             reduce using rule 94 (varid -> ID .)
    SCOLON          reduce using rule 94 (varid -> ID .)
    RPAREN          reduce using rule 94 (varid -> ID .)
    RCURL           reduce using rule 94 (varid -> ID .)
    VAR             reduce using rule 94 (varid -> ID .)
    RETURN          reduce using rule 94 (varid -> ID .)
    WHILE           reduce using rule 94 (varid -> ID .)
    IF              reduce using rule 94 (varid -> ID .)
    PRINT           reduce using rule 94 (varid -> ID .)
    READ            reduce using rule 94 (varid -> ID .)
    ID              reduce using rule 94 (varid -> ID .)
    LPAREN          reduce using rule 94 (varid -> ID .)
    CTESTR          reduce using rule 94 (varid -> ID .)
    CTEINT          reduce using rule 94 (varid -> ID .)
    CTEFLT          reduce using rule 94 (varid -> ID .)
    FALSE           reduce using rule 94 (varid -> ID .)
    TRUE            reduce using rule 94 (varid -> ID .)
    RBRCKT          reduce using rule 94 (varid -> ID .)
    COMMA           reduce using rule 94 (varid -> ID .)

    validate_fid                   shift and go to state 81

state 76

    (81) wwhile -> WHILE add_wpquad . LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    LPAREN          shift and go to state 114


state 77

    (77) cond -> IF LPAREN . expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> IF LPAREN . expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 115
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 78

    (70) pprint -> PRINT LPAREN . printlist RPAREN SCOLON gen_print_quads
    (71) printlist -> . printerm printlistdv
    (74) printerm -> . CTESTR push_printct
    (75) printerm -> . varidx add_vidx push_printidl
    (76) printerm -> . ID push_printid
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    CTESTR          shift and go to state 118
    ID              shift and go to state 120

    printlist                      shift and go to state 116
    printerm                       shift and go to state 117
    varidx                         shift and go to state 119

state 79

    (68) read -> READ LPAREN . varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> READ LPAREN . ID RPAREN gen_read SCOLON
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    ID              shift and go to state 122

    varidx                         shift and go to state 121

state 80

    (65) assign -> varidx add_vidx . ASGN expr gen_idx_assign SCOLON
    (86) valcall -> varidx add_vidx .
    ASGN            shift and go to state 123
    DIV             reduce using rule 86 (valcall -> varidx add_vidx .)
    MULT            reduce using rule 86 (valcall -> varidx add_vidx .)
    EXP             reduce using rule 86 (valcall -> varidx add_vidx .)
    SUB             reduce using rule 86 (valcall -> varidx add_vidx .)
    ADD             reduce using rule 86 (valcall -> varidx add_vidx .)
    GTEQ            reduce using rule 86 (valcall -> varidx add_vidx .)
    LTEQ            reduce using rule 86 (valcall -> varidx add_vidx .)
    NOTEQ           reduce using rule 86 (valcall -> varidx add_vidx .)
    EQ              reduce using rule 86 (valcall -> varidx add_vidx .)
    GT              reduce using rule 86 (valcall -> varidx add_vidx .)
    LT              reduce using rule 86 (valcall -> varidx add_vidx .)
    OR              reduce using rule 86 (valcall -> varidx add_vidx .)
    AND             reduce using rule 86 (valcall -> varidx add_vidx .)
    RCURL           reduce using rule 86 (valcall -> varidx add_vidx .)
    VAR             reduce using rule 86 (valcall -> varidx add_vidx .)
    RETURN          reduce using rule 86 (valcall -> varidx add_vidx .)
    WHILE           reduce using rule 86 (valcall -> varidx add_vidx .)
    IF              reduce using rule 86 (valcall -> varidx add_vidx .)
    PRINT           reduce using rule 86 (valcall -> varidx add_vidx .)
    READ            reduce using rule 86 (valcall -> varidx add_vidx .)
    ID              reduce using rule 86 (valcall -> varidx add_vidx .)
    LPAREN          reduce using rule 86 (valcall -> varidx add_vidx .)
    CTESTR          reduce using rule 86 (valcall -> varidx add_vidx .)
    CTEINT          reduce using rule 86 (valcall -> varidx add_vidx .)
    CTEFLT          reduce using rule 86 (valcall -> varidx add_vidx .)
    FALSE           reduce using rule 86 (valcall -> varidx add_vidx .)
    TRUE            reduce using rule 86 (valcall -> varidx add_vidx .)
    RBRCKT          reduce using rule 86 (valcall -> varidx add_vidx .)


state 81

    (32) funccall -> ID validate_fid . LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> ID validate_fid . LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    LPAREN          shift and go to state 124


state 82

    (67) shrtassgn -> ID SHRT . expr gen_shrt_assign
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 125
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 83

    (66) assign -> ID ASGN . expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 126
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 84

    (95) varidx -> ID LBRCKT . validate_arr expr RBRCKT gen_vdim arrindex
    (108) validate_arr -> .
    LPAREN          reduce using rule 108 (validate_arr -> .)
    ID              reduce using rule 108 (validate_arr -> .)
    CTESTR          reduce using rule 108 (validate_arr -> .)
    CTEINT          reduce using rule 108 (validate_arr -> .)
    CTEFLT          reduce using rule 108 (validate_arr -> .)
    FALSE           reduce using rule 108 (validate_arr -> .)
    TRUE            reduce using rule 108 (validate_arr -> .)

    validate_arr                   shift and go to state 127

state 85

    (46) expr -> bexp check_expr_st .
    RCURL           reduce using rule 46 (expr -> bexp check_expr_st .)
    VAR             reduce using rule 46 (expr -> bexp check_expr_st .)
    RETURN          reduce using rule 46 (expr -> bexp check_expr_st .)
    WHILE           reduce using rule 46 (expr -> bexp check_expr_st .)
    IF              reduce using rule 46 (expr -> bexp check_expr_st .)
    PRINT           reduce using rule 46 (expr -> bexp check_expr_st .)
    READ            reduce using rule 46 (expr -> bexp check_expr_st .)
    ID              reduce using rule 46 (expr -> bexp check_expr_st .)
    LPAREN          reduce using rule 46 (expr -> bexp check_expr_st .)
    CTESTR          reduce using rule 46 (expr -> bexp check_expr_st .)
    CTEINT          reduce using rule 46 (expr -> bexp check_expr_st .)
    CTEFLT          reduce using rule 46 (expr -> bexp check_expr_st .)
    FALSE           reduce using rule 46 (expr -> bexp check_expr_st .)
    TRUE            reduce using rule 46 (expr -> bexp check_expr_st .)
    SCOLON          reduce using rule 46 (expr -> bexp check_expr_st .)
    RPAREN          reduce using rule 46 (expr -> bexp check_expr_st .)
    RBRCKT          reduce using rule 46 (expr -> bexp check_expr_st .)
    COMMA           reduce using rule 46 (expr -> bexp check_expr_st .)


state 86

    (47) expr -> bexp OR . add_oper expr check_expr_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 128

state 87

    (48) expr -> bexp AND . add_oper expr check_expr_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 129

state 88

    (49) bexp -> asexp check_bexp_st .
    OR              reduce using rule 49 (bexp -> asexp check_bexp_st .)
    AND             reduce using rule 49 (bexp -> asexp check_bexp_st .)
    RCURL           reduce using rule 49 (bexp -> asexp check_bexp_st .)
    VAR             reduce using rule 49 (bexp -> asexp check_bexp_st .)
    RETURN          reduce using rule 49 (bexp -> asexp check_bexp_st .)
    WHILE           reduce using rule 49 (bexp -> asexp check_bexp_st .)
    IF              reduce using rule 49 (bexp -> asexp check_bexp_st .)
    PRINT           reduce using rule 49 (bexp -> asexp check_bexp_st .)
    READ            reduce using rule 49 (bexp -> asexp check_bexp_st .)
    ID              reduce using rule 49 (bexp -> asexp check_bexp_st .)
    LPAREN          reduce using rule 49 (bexp -> asexp check_bexp_st .)
    CTESTR          reduce using rule 49 (bexp -> asexp check_bexp_st .)
    CTEINT          reduce using rule 49 (bexp -> asexp check_bexp_st .)
    CTEFLT          reduce using rule 49 (bexp -> asexp check_bexp_st .)
    FALSE           reduce using rule 49 (bexp -> asexp check_bexp_st .)
    TRUE            reduce using rule 49 (bexp -> asexp check_bexp_st .)
    SCOLON          reduce using rule 49 (bexp -> asexp check_bexp_st .)
    RPAREN          reduce using rule 49 (bexp -> asexp check_bexp_st .)
    RBRCKT          reduce using rule 49 (bexp -> asexp check_bexp_st .)
    COMMA           reduce using rule 49 (bexp -> asexp check_bexp_st .)


state 89

    (50) bexp -> asexp GTEQ . add_oper bexp check_bexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 130

state 90

    (51) bexp -> asexp LTEQ . add_oper bexp check_bexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 131

state 91

    (52) bexp -> asexp NOTEQ . add_oper bexp check_bexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 132

state 92

    (53) bexp -> asexp EQ . add_oper bexp check_bexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 133

state 93

    (54) bexp -> asexp GT . add_oper bexp check_bexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 134

state 94

    (55) bexp -> asexp LT . add_oper bexp check_bexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 135

state 95

    (56) asexp -> emdexp check_asexp_st .
    GTEQ            reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    LTEQ            reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    NOTEQ           reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    EQ              reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    GT              reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    LT              reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    OR              reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    AND             reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    RCURL           reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    VAR             reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    RETURN          reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    WHILE           reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    IF              reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    PRINT           reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    READ            reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    ID              reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    LPAREN          reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    CTESTR          reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    CTEINT          reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    CTEFLT          reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    FALSE           reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    TRUE            reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    SCOLON          reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    RPAREN          reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    RBRCKT          reduce using rule 56 (asexp -> emdexp check_asexp_st .)
    COMMA           reduce using rule 56 (asexp -> emdexp check_asexp_st .)


state 96

    (57) asexp -> emdexp SUB . add_oper asexp check_asexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 136

state 97

    (58) asexp -> emdexp ADD . add_oper asexp check_asexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 137

state 98

    (59) emdexp -> pexp check_emdexp_st .
    SUB             reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    ADD             reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    GTEQ            reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    LTEQ            reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    NOTEQ           reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    EQ              reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    GT              reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    LT              reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    OR              reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    AND             reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    RCURL           reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    VAR             reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    RETURN          reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    WHILE           reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    IF              reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    PRINT           reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    READ            reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    ID              reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    LPAREN          reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    CTESTR          reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    CTEINT          reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    CTEFLT          reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    FALSE           reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    TRUE            reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    SCOLON          reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    RPAREN          reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    RBRCKT          reduce using rule 59 (emdexp -> pexp check_emdexp_st .)
    COMMA           reduce using rule 59 (emdexp -> pexp check_emdexp_st .)


state 99

    (60) emdexp -> pexp DIV . add_oper emdexp check_emdexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 138

state 100

    (61) emdexp -> pexp MULT . add_oper emdexp check_emdexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 139

state 101

    (62) emdexp -> pexp EXP . add_oper emdexp check_emdexp_st
    (111) add_oper -> .
    LPAREN          reduce using rule 111 (add_oper -> .)
    ID              reduce using rule 111 (add_oper -> .)
    CTESTR          reduce using rule 111 (add_oper -> .)
    CTEINT          reduce using rule 111 (add_oper -> .)
    CTEFLT          reduce using rule 111 (add_oper -> .)
    FALSE           reduce using rule 111 (add_oper -> .)
    TRUE            reduce using rule 111 (add_oper -> .)

    add_oper                       shift and go to state 140

state 102

    (87) valcall -> varid add_vid .
    DIV             reduce using rule 87 (valcall -> varid add_vid .)
    MULT            reduce using rule 87 (valcall -> varid add_vid .)
    EXP             reduce using rule 87 (valcall -> varid add_vid .)
    SUB             reduce using rule 87 (valcall -> varid add_vid .)
    ADD             reduce using rule 87 (valcall -> varid add_vid .)
    GTEQ            reduce using rule 87 (valcall -> varid add_vid .)
    LTEQ            reduce using rule 87 (valcall -> varid add_vid .)
    NOTEQ           reduce using rule 87 (valcall -> varid add_vid .)
    EQ              reduce using rule 87 (valcall -> varid add_vid .)
    GT              reduce using rule 87 (valcall -> varid add_vid .)
    LT              reduce using rule 87 (valcall -> varid add_vid .)
    OR              reduce using rule 87 (valcall -> varid add_vid .)
    AND             reduce using rule 87 (valcall -> varid add_vid .)
    RCURL           reduce using rule 87 (valcall -> varid add_vid .)
    VAR             reduce using rule 87 (valcall -> varid add_vid .)
    RETURN          reduce using rule 87 (valcall -> varid add_vid .)
    WHILE           reduce using rule 87 (valcall -> varid add_vid .)
    IF              reduce using rule 87 (valcall -> varid add_vid .)
    PRINT           reduce using rule 87 (valcall -> varid add_vid .)
    READ            reduce using rule 87 (valcall -> varid add_vid .)
    ID              reduce using rule 87 (valcall -> varid add_vid .)
    LPAREN          reduce using rule 87 (valcall -> varid add_vid .)
    CTESTR          reduce using rule 87 (valcall -> varid add_vid .)
    CTEINT          reduce using rule 87 (valcall -> varid add_vid .)
    CTEFLT          reduce using rule 87 (valcall -> varid add_vid .)
    FALSE           reduce using rule 87 (valcall -> varid add_vid .)
    TRUE            reduce using rule 87 (valcall -> varid add_vid .)
    SCOLON          reduce using rule 87 (valcall -> varid add_vid .)
    RPAREN          reduce using rule 87 (valcall -> varid add_vid .)
    RBRCKT          reduce using rule 87 (valcall -> varid add_vid .)
    COMMA           reduce using rule 87 (valcall -> varid add_vid .)


state 103

    (88) valcall -> const save_const .
    DIV             reduce using rule 88 (valcall -> const save_const .)
    MULT            reduce using rule 88 (valcall -> const save_const .)
    EXP             reduce using rule 88 (valcall -> const save_const .)
    SUB             reduce using rule 88 (valcall -> const save_const .)
    ADD             reduce using rule 88 (valcall -> const save_const .)
    GTEQ            reduce using rule 88 (valcall -> const save_const .)
    LTEQ            reduce using rule 88 (valcall -> const save_const .)
    NOTEQ           reduce using rule 88 (valcall -> const save_const .)
    EQ              reduce using rule 88 (valcall -> const save_const .)
    GT              reduce using rule 88 (valcall -> const save_const .)
    LT              reduce using rule 88 (valcall -> const save_const .)
    OR              reduce using rule 88 (valcall -> const save_const .)
    AND             reduce using rule 88 (valcall -> const save_const .)
    RCURL           reduce using rule 88 (valcall -> const save_const .)
    VAR             reduce using rule 88 (valcall -> const save_const .)
    RETURN          reduce using rule 88 (valcall -> const save_const .)
    WHILE           reduce using rule 88 (valcall -> const save_const .)
    IF              reduce using rule 88 (valcall -> const save_const .)
    PRINT           reduce using rule 88 (valcall -> const save_const .)
    READ            reduce using rule 88 (valcall -> const save_const .)
    ID              reduce using rule 88 (valcall -> const save_const .)
    LPAREN          reduce using rule 88 (valcall -> const save_const .)
    CTESTR          reduce using rule 88 (valcall -> const save_const .)
    CTEINT          reduce using rule 88 (valcall -> const save_const .)
    CTEFLT          reduce using rule 88 (valcall -> const save_const .)
    FALSE           reduce using rule 88 (valcall -> const save_const .)
    TRUE            reduce using rule 88 (valcall -> const save_const .)
    SCOLON          reduce using rule 88 (valcall -> const save_const .)
    RPAREN          reduce using rule 88 (valcall -> const save_const .)
    RBRCKT          reduce using rule 88 (valcall -> const save_const .)
    COMMA           reduce using rule 88 (valcall -> const save_const .)


state 104

    (21) function -> FUNCTION typefunc ID save_func LPAREN funcparams . RPAREN LCURL add_fqid funcstat remove_fscope
    RPAREN          shift and go to state 141


state 105

    (24) funcparams -> empty .
    RPAREN          reduce using rule 24 (funcparams -> empty .)


state 106

    (25) funcparams -> params .
    RPAREN          reduce using rule 25 (funcparams -> params .)


state 107

    (26) params -> vtype . ID save_param paramsdv
    ID              shift and go to state 142


state 108

    (10) vars -> VAR vtype add_cvtype COLON listids SCOLON . reset_vtype
    (101) reset_vtype -> .
    MAIN            reduce using rule 101 (reset_vtype -> .)
    FUNCTION        reduce using rule 101 (reset_vtype -> .)
    VAR             reduce using rule 101 (reset_vtype -> .)
    $end            reduce using rule 101 (reset_vtype -> .)
    RCURL           reduce using rule 101 (reset_vtype -> .)
    RETURN          reduce using rule 101 (reset_vtype -> .)
    WHILE           reduce using rule 101 (reset_vtype -> .)
    IF              reduce using rule 101 (reset_vtype -> .)
    PRINT           reduce using rule 101 (reset_vtype -> .)
    READ            reduce using rule 101 (reset_vtype -> .)
    ID              reduce using rule 101 (reset_vtype -> .)
    LPAREN          reduce using rule 101 (reset_vtype -> .)
    CTESTR          reduce using rule 101 (reset_vtype -> .)
    CTEINT          reduce using rule 101 (reset_vtype -> .)
    CTEFLT          reduce using rule 101 (reset_vtype -> .)
    FALSE           reduce using rule 101 (reset_vtype -> .)
    TRUE            reduce using rule 101 (reset_vtype -> .)

    reset_vtype                    shift and go to state 143

state 109

    (15) listids -> ID LBRCKT . CTEINT RBRCKT store_arrid dimlist def_dims listdv
    CTEINT          shift and go to state 144


state 110

    (16) listids -> ID store_varid . listdv
    (19) listdv -> . empty
    (20) listdv -> . COMMA listids
    (98) empty -> .
    COMMA           shift and go to state 147
    SCOLON          reduce using rule 98 (empty -> .)

    listdv                         shift and go to state 145
    empty                          shift and go to state 146

state 111

    (64) pexp -> LPAREN push_oper_ctx expr . RPAREN pop_oper_ctx
    RPAREN          shift and go to state 148


state 112

    (84) rreturn -> RETURN expr SCOLON . check_return
    (136) check_return -> .
    RCURL           reduce using rule 136 (check_return -> .)
    VAR             reduce using rule 136 (check_return -> .)
    RETURN          reduce using rule 136 (check_return -> .)
    WHILE           reduce using rule 136 (check_return -> .)
    IF              reduce using rule 136 (check_return -> .)
    PRINT           reduce using rule 136 (check_return -> .)
    READ            reduce using rule 136 (check_return -> .)
    ID              reduce using rule 136 (check_return -> .)
    LPAREN          reduce using rule 136 (check_return -> .)
    CTESTR          reduce using rule 136 (check_return -> .)
    CTEINT          reduce using rule 136 (check_return -> .)
    CTEFLT          reduce using rule 136 (check_return -> .)
    FALSE           reduce using rule 136 (check_return -> .)
    TRUE            reduce using rule 136 (check_return -> .)
    RBRCKT          reduce using rule 136 (check_return -> .)

    check_return                   shift and go to state 149

state 113

    (86) valcall -> varidx add_vidx .
    DIV             reduce using rule 86 (valcall -> varidx add_vidx .)
    MULT            reduce using rule 86 (valcall -> varidx add_vidx .)
    EXP             reduce using rule 86 (valcall -> varidx add_vidx .)
    SUB             reduce using rule 86 (valcall -> varidx add_vidx .)
    ADD             reduce using rule 86 (valcall -> varidx add_vidx .)
    GTEQ            reduce using rule 86 (valcall -> varidx add_vidx .)
    LTEQ            reduce using rule 86 (valcall -> varidx add_vidx .)
    NOTEQ           reduce using rule 86 (valcall -> varidx add_vidx .)
    EQ              reduce using rule 86 (valcall -> varidx add_vidx .)
    GT              reduce using rule 86 (valcall -> varidx add_vidx .)
    LT              reduce using rule 86 (valcall -> varidx add_vidx .)
    OR              reduce using rule 86 (valcall -> varidx add_vidx .)
    AND             reduce using rule 86 (valcall -> varidx add_vidx .)
    SCOLON          reduce using rule 86 (valcall -> varidx add_vidx .)
    RPAREN          reduce using rule 86 (valcall -> varidx add_vidx .)
    RCURL           reduce using rule 86 (valcall -> varidx add_vidx .)
    VAR             reduce using rule 86 (valcall -> varidx add_vidx .)
    RETURN          reduce using rule 86 (valcall -> varidx add_vidx .)
    WHILE           reduce using rule 86 (valcall -> varidx add_vidx .)
    IF              reduce using rule 86 (valcall -> varidx add_vidx .)
    PRINT           reduce using rule 86 (valcall -> varidx add_vidx .)
    READ            reduce using rule 86 (valcall -> varidx add_vidx .)
    ID              reduce using rule 86 (valcall -> varidx add_vidx .)
    LPAREN          reduce using rule 86 (valcall -> varidx add_vidx .)
    CTESTR          reduce using rule 86 (valcall -> varidx add_vidx .)
    CTEINT          reduce using rule 86 (valcall -> varidx add_vidx .)
    CTEFLT          reduce using rule 86 (valcall -> varidx add_vidx .)
    FALSE           reduce using rule 86 (valcall -> varidx add_vidx .)
    TRUE            reduce using rule 86 (valcall -> varidx add_vidx .)
    RBRCKT          reduce using rule 86 (valcall -> varidx add_vidx .)
    COMMA           reduce using rule 86 (valcall -> varidx add_vidx .)


state 114

    (81) wwhile -> WHILE add_wpquad LPAREN . expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 150
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 115

    (77) cond -> IF LPAREN expr . RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> IF LPAREN expr . RPAREN gen_cond_quad LBRCKT condv add_jquad
    RPAREN          shift and go to state 151


state 116

    (70) pprint -> PRINT LPAREN printlist . RPAREN SCOLON gen_print_quads
    RPAREN          shift and go to state 152


state 117

    (71) printlist -> printerm . printlistdv
    (72) printlistdv -> . empty
    (73) printlistdv -> . COMMA printerm
    (98) empty -> .
    COMMA           shift and go to state 155
    RPAREN          reduce using rule 98 (empty -> .)

    printlistdv                    shift and go to state 153
    empty                          shift and go to state 154

state 118

    (74) printerm -> CTESTR . push_printct
    (125) push_printct -> .
    COMMA           reduce using rule 125 (push_printct -> .)
    RPAREN          reduce using rule 125 (push_printct -> .)

    push_printct                   shift and go to state 156

state 119

    (75) printerm -> varidx . add_vidx push_printidl
    (110) add_vidx -> .
    COMMA           reduce using rule 110 (add_vidx -> .)
    RPAREN          reduce using rule 110 (add_vidx -> .)

    add_vidx                       shift and go to state 157

state 120

    (76) printerm -> ID . push_printid
    (95) varidx -> ID . LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (123) push_printid -> .
    LBRCKT          shift and go to state 84
    COMMA           reduce using rule 123 (push_printid -> .)
    RPAREN          reduce using rule 123 (push_printid -> .)

    push_printid                   shift and go to state 158

state 121

    (68) read -> READ LPAREN varidx . add_vidx gen_idxread RPAREN SCOLON
    (110) add_vidx -> .
    RPAREN          reduce using rule 110 (add_vidx -> .)

    add_vidx                       shift and go to state 159

state 122

    (69) read -> READ LPAREN ID . RPAREN gen_read SCOLON
    (95) varidx -> ID . LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    RPAREN          shift and go to state 160
    LBRCKT          shift and go to state 84


state 123

    (65) assign -> varidx add_vidx ASGN . expr gen_idx_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    varidx                         shift and go to state 74
    expr                           shift and go to state 161
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 124

    (32) funccall -> ID validate_fid LPAREN . RPAREN SCOLON add_curr_pquad
    (33) funccall -> ID validate_fid LPAREN . fcallparams RPAREN SCOLON add_curr_pquad
    (34) fcallparams -> . ID ASGN expr add_params fcalltermdv
    RPAREN          shift and go to state 163
    ID              shift and go to state 162

    fcallparams                    shift and go to state 164

state 125

    (67) shrtassgn -> ID SHRT expr . gen_shrt_assign
    (120) gen_shrt_assign -> .
    RCURL           reduce using rule 120 (gen_shrt_assign -> .)
    VAR             reduce using rule 120 (gen_shrt_assign -> .)
    RETURN          reduce using rule 120 (gen_shrt_assign -> .)
    WHILE           reduce using rule 120 (gen_shrt_assign -> .)
    IF              reduce using rule 120 (gen_shrt_assign -> .)
    PRINT           reduce using rule 120 (gen_shrt_assign -> .)
    READ            reduce using rule 120 (gen_shrt_assign -> .)
    ID              reduce using rule 120 (gen_shrt_assign -> .)
    LPAREN          reduce using rule 120 (gen_shrt_assign -> .)
    CTESTR          reduce using rule 120 (gen_shrt_assign -> .)
    CTEINT          reduce using rule 120 (gen_shrt_assign -> .)
    CTEFLT          reduce using rule 120 (gen_shrt_assign -> .)
    FALSE           reduce using rule 120 (gen_shrt_assign -> .)
    TRUE            reduce using rule 120 (gen_shrt_assign -> .)
    RBRCKT          reduce using rule 120 (gen_shrt_assign -> .)

    gen_shrt_assign                shift and go to state 165

state 126

    (66) assign -> ID ASGN expr . gen_assign SCOLON
    (118) gen_assign -> .
    SCOLON          reduce using rule 118 (gen_assign -> .)

    gen_assign                     shift and go to state 166

state 127

    (95) varidx -> ID LBRCKT validate_arr . expr RBRCKT gen_vdim arrindex
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 167
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 128

    (47) expr -> bexp OR add_oper . expr check_expr_st
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    bexp                           shift and go to state 53
    expr                           shift and go to state 168
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 129

    (48) expr -> bexp AND add_oper . expr check_expr_st
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    bexp                           shift and go to state 53
    expr                           shift and go to state 169
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 130

    (50) bexp -> asexp GTEQ add_oper . bexp check_bexp_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    asexp                          shift and go to state 54
    bexp                           shift and go to state 170
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 131

    (51) bexp -> asexp LTEQ add_oper . bexp check_bexp_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    asexp                          shift and go to state 54
    bexp                           shift and go to state 171
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 132

    (52) bexp -> asexp NOTEQ add_oper . bexp check_bexp_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    asexp                          shift and go to state 54
    bexp                           shift and go to state 172
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 133

    (53) bexp -> asexp EQ add_oper . bexp check_bexp_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    asexp                          shift and go to state 54
    bexp                           shift and go to state 173
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 134

    (54) bexp -> asexp GT add_oper . bexp check_bexp_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    asexp                          shift and go to state 54
    bexp                           shift and go to state 174
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 135

    (55) bexp -> asexp LT add_oper . bexp check_bexp_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    asexp                          shift and go to state 54
    bexp                           shift and go to state 175
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 136

    (57) asexp -> emdexp SUB add_oper . asexp check_asexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    emdexp                         shift and go to state 55
    asexp                          shift and go to state 176
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 137

    (58) asexp -> emdexp ADD add_oper . asexp check_asexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    emdexp                         shift and go to state 55
    asexp                          shift and go to state 177
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 138

    (60) emdexp -> pexp DIV add_oper . emdexp check_emdexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    pexp                           shift and go to state 56
    emdexp                         shift and go to state 178
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 139

    (61) emdexp -> pexp MULT add_oper . emdexp check_emdexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    pexp                           shift and go to state 56
    emdexp                         shift and go to state 179
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 140

    (62) emdexp -> pexp EXP add_oper . emdexp check_emdexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    pexp                           shift and go to state 56
    emdexp                         shift and go to state 180
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 141

    (21) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN . LCURL add_fqid funcstat remove_fscope
    LCURL           shift and go to state 181


state 142

    (26) params -> vtype ID . save_param paramsdv
    (134) save_param -> .
    COMMA           reduce using rule 134 (save_param -> .)
    RPAREN          reduce using rule 134 (save_param -> .)

    save_param                     shift and go to state 182

state 143

    (10) vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .
    MAIN            reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    FUNCTION        reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    VAR             reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    $end            reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    RCURL           reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    RETURN          reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    WHILE           reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    IF              reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    PRINT           reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    READ            reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    ID              reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    LPAREN          reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    CTESTR          reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    CTEINT          reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    CTEFLT          reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    FALSE           reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    TRUE            reduce using rule 10 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)


state 144

    (15) listids -> ID LBRCKT CTEINT . RBRCKT store_arrid dimlist def_dims listdv
    RBRCKT          shift and go to state 183


state 145

    (16) listids -> ID store_varid listdv .
    SCOLON          reduce using rule 16 (listids -> ID store_varid listdv .)


state 146

    (19) listdv -> empty .
    SCOLON          reduce using rule 19 (listdv -> empty .)


state 147

    (20) listdv -> COMMA . listids
    (15) listids -> . ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv
    (16) listids -> . ID store_varid listdv
    ID              shift and go to state 67

    listids                        shift and go to state 184

state 148

    (64) pexp -> LPAREN push_oper_ctx expr RPAREN . pop_oper_ctx
    (117) pop_oper_ctx -> .
    DIV             reduce using rule 117 (pop_oper_ctx -> .)
    MULT            reduce using rule 117 (pop_oper_ctx -> .)
    EXP             reduce using rule 117 (pop_oper_ctx -> .)
    SUB             reduce using rule 117 (pop_oper_ctx -> .)
    ADD             reduce using rule 117 (pop_oper_ctx -> .)
    GTEQ            reduce using rule 117 (pop_oper_ctx -> .)
    LTEQ            reduce using rule 117 (pop_oper_ctx -> .)
    NOTEQ           reduce using rule 117 (pop_oper_ctx -> .)
    EQ              reduce using rule 117 (pop_oper_ctx -> .)
    GT              reduce using rule 117 (pop_oper_ctx -> .)
    LT              reduce using rule 117 (pop_oper_ctx -> .)
    OR              reduce using rule 117 (pop_oper_ctx -> .)
    AND             reduce using rule 117 (pop_oper_ctx -> .)
    RCURL           reduce using rule 117 (pop_oper_ctx -> .)
    VAR             reduce using rule 117 (pop_oper_ctx -> .)
    RETURN          reduce using rule 117 (pop_oper_ctx -> .)
    WHILE           reduce using rule 117 (pop_oper_ctx -> .)
    IF              reduce using rule 117 (pop_oper_ctx -> .)
    PRINT           reduce using rule 117 (pop_oper_ctx -> .)
    READ            reduce using rule 117 (pop_oper_ctx -> .)
    ID              reduce using rule 117 (pop_oper_ctx -> .)
    LPAREN          reduce using rule 117 (pop_oper_ctx -> .)
    CTESTR          reduce using rule 117 (pop_oper_ctx -> .)
    CTEINT          reduce using rule 117 (pop_oper_ctx -> .)
    CTEFLT          reduce using rule 117 (pop_oper_ctx -> .)
    FALSE           reduce using rule 117 (pop_oper_ctx -> .)
    TRUE            reduce using rule 117 (pop_oper_ctx -> .)
    SCOLON          reduce using rule 117 (pop_oper_ctx -> .)
    RPAREN          reduce using rule 117 (pop_oper_ctx -> .)
    RBRCKT          reduce using rule 117 (pop_oper_ctx -> .)
    COMMA           reduce using rule 117 (pop_oper_ctx -> .)

    pop_oper_ctx                   shift and go to state 185

state 149

    (84) rreturn -> RETURN expr SCOLON check_return .
    RCURL           reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    VAR             reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    RETURN          reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    WHILE           reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    IF              reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    PRINT           reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    READ            reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    ID              reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    LPAREN          reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    CTESTR          reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    CTEINT          reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    CTEFLT          reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    FALSE           reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    TRUE            reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)
    RBRCKT          reduce using rule 84 (rreturn -> RETURN expr SCOLON check_return .)


state 150

    (81) wwhile -> WHILE add_wpquad LPAREN expr . RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    RPAREN          shift and go to state 186


state 151

    (77) cond -> IF LPAREN expr RPAREN . gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> IF LPAREN expr RPAREN . gen_cond_quad LBRCKT condv add_jquad
    (127) gen_cond_quad -> .
    LBRCKT          reduce using rule 127 (gen_cond_quad -> .)

    gen_cond_quad                  shift and go to state 187

state 152

    (70) pprint -> PRINT LPAREN printlist RPAREN . SCOLON gen_print_quads
    SCOLON          shift and go to state 188


state 153

    (71) printlist -> printerm printlistdv .
    RPAREN          reduce using rule 71 (printlist -> printerm printlistdv .)


state 154

    (72) printlistdv -> empty .
    RPAREN          reduce using rule 72 (printlistdv -> empty .)


state 155

    (73) printlistdv -> COMMA . printerm
    (74) printerm -> . CTESTR push_printct
    (75) printerm -> . varidx add_vidx push_printidl
    (76) printerm -> . ID push_printid
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    CTESTR          shift and go to state 118
    ID              shift and go to state 120

    printerm                       shift and go to state 189
    varidx                         shift and go to state 119

state 156

    (74) printerm -> CTESTR push_printct .
    COMMA           reduce using rule 74 (printerm -> CTESTR push_printct .)
    RPAREN          reduce using rule 74 (printerm -> CTESTR push_printct .)


state 157

    (75) printerm -> varidx add_vidx . push_printidl
    (124) push_printidl -> .
    COMMA           reduce using rule 124 (push_printidl -> .)
    RPAREN          reduce using rule 124 (push_printidl -> .)

    push_printidl                  shift and go to state 190

state 158

    (76) printerm -> ID push_printid .
    COMMA           reduce using rule 76 (printerm -> ID push_printid .)
    RPAREN          reduce using rule 76 (printerm -> ID push_printid .)


state 159

    (68) read -> READ LPAREN varidx add_vidx . gen_idxread RPAREN SCOLON
    (122) gen_idxread -> .
    RPAREN          reduce using rule 122 (gen_idxread -> .)

    gen_idxread                    shift and go to state 191

state 160

    (69) read -> READ LPAREN ID RPAREN . gen_read SCOLON
    (121) gen_read -> .
    SCOLON          reduce using rule 121 (gen_read -> .)

    gen_read                       shift and go to state 192

state 161

    (65) assign -> varidx add_vidx ASGN expr . gen_idx_assign SCOLON
    (119) gen_idx_assign -> .
    SCOLON          reduce using rule 119 (gen_idx_assign -> .)

    gen_idx_assign                 shift and go to state 193

state 162

    (34) fcallparams -> ID . ASGN expr add_params fcalltermdv
    ASGN            shift and go to state 194


state 163

    (32) funccall -> ID validate_fid LPAREN RPAREN . SCOLON add_curr_pquad
    SCOLON          shift and go to state 195


state 164

    (33) funccall -> ID validate_fid LPAREN fcallparams . RPAREN SCOLON add_curr_pquad
    RPAREN          shift and go to state 196


state 165

    (67) shrtassgn -> ID SHRT expr gen_shrt_assign .
    RCURL           reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    VAR             reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    RETURN          reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    WHILE           reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    IF              reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    PRINT           reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    READ            reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    ID              reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    LPAREN          reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    CTESTR          reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    CTEINT          reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    CTEFLT          reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    FALSE           reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    TRUE            reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)
    RBRCKT          reduce using rule 67 (shrtassgn -> ID SHRT expr gen_shrt_assign .)


state 166

    (66) assign -> ID ASGN expr gen_assign . SCOLON
    SCOLON          shift and go to state 197


state 167

    (95) varidx -> ID LBRCKT validate_arr expr . RBRCKT gen_vdim arrindex
    RBRCKT          shift and go to state 198


state 168

    (47) expr -> bexp OR add_oper expr . check_expr_st
    (112) check_expr_st -> .
    RCURL           reduce using rule 112 (check_expr_st -> .)
    VAR             reduce using rule 112 (check_expr_st -> .)
    RETURN          reduce using rule 112 (check_expr_st -> .)
    WHILE           reduce using rule 112 (check_expr_st -> .)
    IF              reduce using rule 112 (check_expr_st -> .)
    PRINT           reduce using rule 112 (check_expr_st -> .)
    READ            reduce using rule 112 (check_expr_st -> .)
    ID              reduce using rule 112 (check_expr_st -> .)
    LPAREN          reduce using rule 112 (check_expr_st -> .)
    CTESTR          reduce using rule 112 (check_expr_st -> .)
    CTEINT          reduce using rule 112 (check_expr_st -> .)
    CTEFLT          reduce using rule 112 (check_expr_st -> .)
    FALSE           reduce using rule 112 (check_expr_st -> .)
    TRUE            reduce using rule 112 (check_expr_st -> .)
    SCOLON          reduce using rule 112 (check_expr_st -> .)
    RPAREN          reduce using rule 112 (check_expr_st -> .)
    RBRCKT          reduce using rule 112 (check_expr_st -> .)
    COMMA           reduce using rule 112 (check_expr_st -> .)

    check_expr_st                  shift and go to state 199

state 169

    (48) expr -> bexp AND add_oper expr . check_expr_st
    (112) check_expr_st -> .
    RCURL           reduce using rule 112 (check_expr_st -> .)
    VAR             reduce using rule 112 (check_expr_st -> .)
    RETURN          reduce using rule 112 (check_expr_st -> .)
    WHILE           reduce using rule 112 (check_expr_st -> .)
    IF              reduce using rule 112 (check_expr_st -> .)
    PRINT           reduce using rule 112 (check_expr_st -> .)
    READ            reduce using rule 112 (check_expr_st -> .)
    ID              reduce using rule 112 (check_expr_st -> .)
    LPAREN          reduce using rule 112 (check_expr_st -> .)
    CTESTR          reduce using rule 112 (check_expr_st -> .)
    CTEINT          reduce using rule 112 (check_expr_st -> .)
    CTEFLT          reduce using rule 112 (check_expr_st -> .)
    FALSE           reduce using rule 112 (check_expr_st -> .)
    TRUE            reduce using rule 112 (check_expr_st -> .)
    SCOLON          reduce using rule 112 (check_expr_st -> .)
    RPAREN          reduce using rule 112 (check_expr_st -> .)
    RBRCKT          reduce using rule 112 (check_expr_st -> .)
    COMMA           reduce using rule 112 (check_expr_st -> .)

    check_expr_st                  shift and go to state 200

state 170

    (50) bexp -> asexp GTEQ add_oper bexp . check_bexp_st
    (113) check_bexp_st -> .
    OR              reduce using rule 113 (check_bexp_st -> .)
    AND             reduce using rule 113 (check_bexp_st -> .)
    RCURL           reduce using rule 113 (check_bexp_st -> .)
    VAR             reduce using rule 113 (check_bexp_st -> .)
    RETURN          reduce using rule 113 (check_bexp_st -> .)
    WHILE           reduce using rule 113 (check_bexp_st -> .)
    IF              reduce using rule 113 (check_bexp_st -> .)
    PRINT           reduce using rule 113 (check_bexp_st -> .)
    READ            reduce using rule 113 (check_bexp_st -> .)
    ID              reduce using rule 113 (check_bexp_st -> .)
    LPAREN          reduce using rule 113 (check_bexp_st -> .)
    CTESTR          reduce using rule 113 (check_bexp_st -> .)
    CTEINT          reduce using rule 113 (check_bexp_st -> .)
    CTEFLT          reduce using rule 113 (check_bexp_st -> .)
    FALSE           reduce using rule 113 (check_bexp_st -> .)
    TRUE            reduce using rule 113 (check_bexp_st -> .)
    SCOLON          reduce using rule 113 (check_bexp_st -> .)
    RPAREN          reduce using rule 113 (check_bexp_st -> .)
    RBRCKT          reduce using rule 113 (check_bexp_st -> .)
    COMMA           reduce using rule 113 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 201

state 171

    (51) bexp -> asexp LTEQ add_oper bexp . check_bexp_st
    (113) check_bexp_st -> .
    OR              reduce using rule 113 (check_bexp_st -> .)
    AND             reduce using rule 113 (check_bexp_st -> .)
    RCURL           reduce using rule 113 (check_bexp_st -> .)
    VAR             reduce using rule 113 (check_bexp_st -> .)
    RETURN          reduce using rule 113 (check_bexp_st -> .)
    WHILE           reduce using rule 113 (check_bexp_st -> .)
    IF              reduce using rule 113 (check_bexp_st -> .)
    PRINT           reduce using rule 113 (check_bexp_st -> .)
    READ            reduce using rule 113 (check_bexp_st -> .)
    ID              reduce using rule 113 (check_bexp_st -> .)
    LPAREN          reduce using rule 113 (check_bexp_st -> .)
    CTESTR          reduce using rule 113 (check_bexp_st -> .)
    CTEINT          reduce using rule 113 (check_bexp_st -> .)
    CTEFLT          reduce using rule 113 (check_bexp_st -> .)
    FALSE           reduce using rule 113 (check_bexp_st -> .)
    TRUE            reduce using rule 113 (check_bexp_st -> .)
    SCOLON          reduce using rule 113 (check_bexp_st -> .)
    RPAREN          reduce using rule 113 (check_bexp_st -> .)
    RBRCKT          reduce using rule 113 (check_bexp_st -> .)
    COMMA           reduce using rule 113 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 202

state 172

    (52) bexp -> asexp NOTEQ add_oper bexp . check_bexp_st
    (113) check_bexp_st -> .
    OR              reduce using rule 113 (check_bexp_st -> .)
    AND             reduce using rule 113 (check_bexp_st -> .)
    RCURL           reduce using rule 113 (check_bexp_st -> .)
    VAR             reduce using rule 113 (check_bexp_st -> .)
    RETURN          reduce using rule 113 (check_bexp_st -> .)
    WHILE           reduce using rule 113 (check_bexp_st -> .)
    IF              reduce using rule 113 (check_bexp_st -> .)
    PRINT           reduce using rule 113 (check_bexp_st -> .)
    READ            reduce using rule 113 (check_bexp_st -> .)
    ID              reduce using rule 113 (check_bexp_st -> .)
    LPAREN          reduce using rule 113 (check_bexp_st -> .)
    CTESTR          reduce using rule 113 (check_bexp_st -> .)
    CTEINT          reduce using rule 113 (check_bexp_st -> .)
    CTEFLT          reduce using rule 113 (check_bexp_st -> .)
    FALSE           reduce using rule 113 (check_bexp_st -> .)
    TRUE            reduce using rule 113 (check_bexp_st -> .)
    SCOLON          reduce using rule 113 (check_bexp_st -> .)
    RPAREN          reduce using rule 113 (check_bexp_st -> .)
    RBRCKT          reduce using rule 113 (check_bexp_st -> .)
    COMMA           reduce using rule 113 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 203

state 173

    (53) bexp -> asexp EQ add_oper bexp . check_bexp_st
    (113) check_bexp_st -> .
    OR              reduce using rule 113 (check_bexp_st -> .)
    AND             reduce using rule 113 (check_bexp_st -> .)
    RCURL           reduce using rule 113 (check_bexp_st -> .)
    VAR             reduce using rule 113 (check_bexp_st -> .)
    RETURN          reduce using rule 113 (check_bexp_st -> .)
    WHILE           reduce using rule 113 (check_bexp_st -> .)
    IF              reduce using rule 113 (check_bexp_st -> .)
    PRINT           reduce using rule 113 (check_bexp_st -> .)
    READ            reduce using rule 113 (check_bexp_st -> .)
    ID              reduce using rule 113 (check_bexp_st -> .)
    LPAREN          reduce using rule 113 (check_bexp_st -> .)
    CTESTR          reduce using rule 113 (check_bexp_st -> .)
    CTEINT          reduce using rule 113 (check_bexp_st -> .)
    CTEFLT          reduce using rule 113 (check_bexp_st -> .)
    FALSE           reduce using rule 113 (check_bexp_st -> .)
    TRUE            reduce using rule 113 (check_bexp_st -> .)
    SCOLON          reduce using rule 113 (check_bexp_st -> .)
    RPAREN          reduce using rule 113 (check_bexp_st -> .)
    RBRCKT          reduce using rule 113 (check_bexp_st -> .)
    COMMA           reduce using rule 113 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 204

state 174

    (54) bexp -> asexp GT add_oper bexp . check_bexp_st
    (113) check_bexp_st -> .
    OR              reduce using rule 113 (check_bexp_st -> .)
    AND             reduce using rule 113 (check_bexp_st -> .)
    RCURL           reduce using rule 113 (check_bexp_st -> .)
    VAR             reduce using rule 113 (check_bexp_st -> .)
    RETURN          reduce using rule 113 (check_bexp_st -> .)
    WHILE           reduce using rule 113 (check_bexp_st -> .)
    IF              reduce using rule 113 (check_bexp_st -> .)
    PRINT           reduce using rule 113 (check_bexp_st -> .)
    READ            reduce using rule 113 (check_bexp_st -> .)
    ID              reduce using rule 113 (check_bexp_st -> .)
    LPAREN          reduce using rule 113 (check_bexp_st -> .)
    CTESTR          reduce using rule 113 (check_bexp_st -> .)
    CTEINT          reduce using rule 113 (check_bexp_st -> .)
    CTEFLT          reduce using rule 113 (check_bexp_st -> .)
    FALSE           reduce using rule 113 (check_bexp_st -> .)
    TRUE            reduce using rule 113 (check_bexp_st -> .)
    SCOLON          reduce using rule 113 (check_bexp_st -> .)
    RPAREN          reduce using rule 113 (check_bexp_st -> .)
    RBRCKT          reduce using rule 113 (check_bexp_st -> .)
    COMMA           reduce using rule 113 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 205

state 175

    (55) bexp -> asexp LT add_oper bexp . check_bexp_st
    (113) check_bexp_st -> .
    OR              reduce using rule 113 (check_bexp_st -> .)
    AND             reduce using rule 113 (check_bexp_st -> .)
    RCURL           reduce using rule 113 (check_bexp_st -> .)
    VAR             reduce using rule 113 (check_bexp_st -> .)
    RETURN          reduce using rule 113 (check_bexp_st -> .)
    WHILE           reduce using rule 113 (check_bexp_st -> .)
    IF              reduce using rule 113 (check_bexp_st -> .)
    PRINT           reduce using rule 113 (check_bexp_st -> .)
    READ            reduce using rule 113 (check_bexp_st -> .)
    ID              reduce using rule 113 (check_bexp_st -> .)
    LPAREN          reduce using rule 113 (check_bexp_st -> .)
    CTESTR          reduce using rule 113 (check_bexp_st -> .)
    CTEINT          reduce using rule 113 (check_bexp_st -> .)
    CTEFLT          reduce using rule 113 (check_bexp_st -> .)
    FALSE           reduce using rule 113 (check_bexp_st -> .)
    TRUE            reduce using rule 113 (check_bexp_st -> .)
    SCOLON          reduce using rule 113 (check_bexp_st -> .)
    RPAREN          reduce using rule 113 (check_bexp_st -> .)
    RBRCKT          reduce using rule 113 (check_bexp_st -> .)
    COMMA           reduce using rule 113 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 206

state 176

    (57) asexp -> emdexp SUB add_oper asexp . check_asexp_st
    (114) check_asexp_st -> .
    GTEQ            reduce using rule 114 (check_asexp_st -> .)
    LTEQ            reduce using rule 114 (check_asexp_st -> .)
    NOTEQ           reduce using rule 114 (check_asexp_st -> .)
    EQ              reduce using rule 114 (check_asexp_st -> .)
    GT              reduce using rule 114 (check_asexp_st -> .)
    LT              reduce using rule 114 (check_asexp_st -> .)
    OR              reduce using rule 114 (check_asexp_st -> .)
    AND             reduce using rule 114 (check_asexp_st -> .)
    RCURL           reduce using rule 114 (check_asexp_st -> .)
    VAR             reduce using rule 114 (check_asexp_st -> .)
    RETURN          reduce using rule 114 (check_asexp_st -> .)
    WHILE           reduce using rule 114 (check_asexp_st -> .)
    IF              reduce using rule 114 (check_asexp_st -> .)
    PRINT           reduce using rule 114 (check_asexp_st -> .)
    READ            reduce using rule 114 (check_asexp_st -> .)
    ID              reduce using rule 114 (check_asexp_st -> .)
    LPAREN          reduce using rule 114 (check_asexp_st -> .)
    CTESTR          reduce using rule 114 (check_asexp_st -> .)
    CTEINT          reduce using rule 114 (check_asexp_st -> .)
    CTEFLT          reduce using rule 114 (check_asexp_st -> .)
    FALSE           reduce using rule 114 (check_asexp_st -> .)
    TRUE            reduce using rule 114 (check_asexp_st -> .)
    SCOLON          reduce using rule 114 (check_asexp_st -> .)
    RPAREN          reduce using rule 114 (check_asexp_st -> .)
    RBRCKT          reduce using rule 114 (check_asexp_st -> .)
    COMMA           reduce using rule 114 (check_asexp_st -> .)

    check_asexp_st                 shift and go to state 207

state 177

    (58) asexp -> emdexp ADD add_oper asexp . check_asexp_st
    (114) check_asexp_st -> .
    GTEQ            reduce using rule 114 (check_asexp_st -> .)
    LTEQ            reduce using rule 114 (check_asexp_st -> .)
    NOTEQ           reduce using rule 114 (check_asexp_st -> .)
    EQ              reduce using rule 114 (check_asexp_st -> .)
    GT              reduce using rule 114 (check_asexp_st -> .)
    LT              reduce using rule 114 (check_asexp_st -> .)
    OR              reduce using rule 114 (check_asexp_st -> .)
    AND             reduce using rule 114 (check_asexp_st -> .)
    RCURL           reduce using rule 114 (check_asexp_st -> .)
    VAR             reduce using rule 114 (check_asexp_st -> .)
    RETURN          reduce using rule 114 (check_asexp_st -> .)
    WHILE           reduce using rule 114 (check_asexp_st -> .)
    IF              reduce using rule 114 (check_asexp_st -> .)
    PRINT           reduce using rule 114 (check_asexp_st -> .)
    READ            reduce using rule 114 (check_asexp_st -> .)
    ID              reduce using rule 114 (check_asexp_st -> .)
    LPAREN          reduce using rule 114 (check_asexp_st -> .)
    CTESTR          reduce using rule 114 (check_asexp_st -> .)
    CTEINT          reduce using rule 114 (check_asexp_st -> .)
    CTEFLT          reduce using rule 114 (check_asexp_st -> .)
    FALSE           reduce using rule 114 (check_asexp_st -> .)
    TRUE            reduce using rule 114 (check_asexp_st -> .)
    SCOLON          reduce using rule 114 (check_asexp_st -> .)
    RPAREN          reduce using rule 114 (check_asexp_st -> .)
    RBRCKT          reduce using rule 114 (check_asexp_st -> .)
    COMMA           reduce using rule 114 (check_asexp_st -> .)

    check_asexp_st                 shift and go to state 208

state 178

    (60) emdexp -> pexp DIV add_oper emdexp . check_emdexp_st
    (115) check_emdexp_st -> .
    SUB             reduce using rule 115 (check_emdexp_st -> .)
    ADD             reduce using rule 115 (check_emdexp_st -> .)
    GTEQ            reduce using rule 115 (check_emdexp_st -> .)
    LTEQ            reduce using rule 115 (check_emdexp_st -> .)
    NOTEQ           reduce using rule 115 (check_emdexp_st -> .)
    EQ              reduce using rule 115 (check_emdexp_st -> .)
    GT              reduce using rule 115 (check_emdexp_st -> .)
    LT              reduce using rule 115 (check_emdexp_st -> .)
    OR              reduce using rule 115 (check_emdexp_st -> .)
    AND             reduce using rule 115 (check_emdexp_st -> .)
    RCURL           reduce using rule 115 (check_emdexp_st -> .)
    VAR             reduce using rule 115 (check_emdexp_st -> .)
    RETURN          reduce using rule 115 (check_emdexp_st -> .)
    WHILE           reduce using rule 115 (check_emdexp_st -> .)
    IF              reduce using rule 115 (check_emdexp_st -> .)
    PRINT           reduce using rule 115 (check_emdexp_st -> .)
    READ            reduce using rule 115 (check_emdexp_st -> .)
    ID              reduce using rule 115 (check_emdexp_st -> .)
    LPAREN          reduce using rule 115 (check_emdexp_st -> .)
    CTESTR          reduce using rule 115 (check_emdexp_st -> .)
    CTEINT          reduce using rule 115 (check_emdexp_st -> .)
    CTEFLT          reduce using rule 115 (check_emdexp_st -> .)
    FALSE           reduce using rule 115 (check_emdexp_st -> .)
    TRUE            reduce using rule 115 (check_emdexp_st -> .)
    SCOLON          reduce using rule 115 (check_emdexp_st -> .)
    RPAREN          reduce using rule 115 (check_emdexp_st -> .)
    RBRCKT          reduce using rule 115 (check_emdexp_st -> .)
    COMMA           reduce using rule 115 (check_emdexp_st -> .)

    check_emdexp_st                shift and go to state 209

state 179

    (61) emdexp -> pexp MULT add_oper emdexp . check_emdexp_st
    (115) check_emdexp_st -> .
    SUB             reduce using rule 115 (check_emdexp_st -> .)
    ADD             reduce using rule 115 (check_emdexp_st -> .)
    GTEQ            reduce using rule 115 (check_emdexp_st -> .)
    LTEQ            reduce using rule 115 (check_emdexp_st -> .)
    NOTEQ           reduce using rule 115 (check_emdexp_st -> .)
    EQ              reduce using rule 115 (check_emdexp_st -> .)
    GT              reduce using rule 115 (check_emdexp_st -> .)
    LT              reduce using rule 115 (check_emdexp_st -> .)
    OR              reduce using rule 115 (check_emdexp_st -> .)
    AND             reduce using rule 115 (check_emdexp_st -> .)
    RCURL           reduce using rule 115 (check_emdexp_st -> .)
    VAR             reduce using rule 115 (check_emdexp_st -> .)
    RETURN          reduce using rule 115 (check_emdexp_st -> .)
    WHILE           reduce using rule 115 (check_emdexp_st -> .)
    IF              reduce using rule 115 (check_emdexp_st -> .)
    PRINT           reduce using rule 115 (check_emdexp_st -> .)
    READ            reduce using rule 115 (check_emdexp_st -> .)
    ID              reduce using rule 115 (check_emdexp_st -> .)
    LPAREN          reduce using rule 115 (check_emdexp_st -> .)
    CTESTR          reduce using rule 115 (check_emdexp_st -> .)
    CTEINT          reduce using rule 115 (check_emdexp_st -> .)
    CTEFLT          reduce using rule 115 (check_emdexp_st -> .)
    FALSE           reduce using rule 115 (check_emdexp_st -> .)
    TRUE            reduce using rule 115 (check_emdexp_st -> .)
    SCOLON          reduce using rule 115 (check_emdexp_st -> .)
    RPAREN          reduce using rule 115 (check_emdexp_st -> .)
    RBRCKT          reduce using rule 115 (check_emdexp_st -> .)
    COMMA           reduce using rule 115 (check_emdexp_st -> .)

    check_emdexp_st                shift and go to state 210

state 180

    (62) emdexp -> pexp EXP add_oper emdexp . check_emdexp_st
    (115) check_emdexp_st -> .
    SUB             reduce using rule 115 (check_emdexp_st -> .)
    ADD             reduce using rule 115 (check_emdexp_st -> .)
    GTEQ            reduce using rule 115 (check_emdexp_st -> .)
    LTEQ            reduce using rule 115 (check_emdexp_st -> .)
    NOTEQ           reduce using rule 115 (check_emdexp_st -> .)
    EQ              reduce using rule 115 (check_emdexp_st -> .)
    GT              reduce using rule 115 (check_emdexp_st -> .)
    LT              reduce using rule 115 (check_emdexp_st -> .)
    OR              reduce using rule 115 (check_emdexp_st -> .)
    AND             reduce using rule 115 (check_emdexp_st -> .)
    RCURL           reduce using rule 115 (check_emdexp_st -> .)
    VAR             reduce using rule 115 (check_emdexp_st -> .)
    RETURN          reduce using rule 115 (check_emdexp_st -> .)
    WHILE           reduce using rule 115 (check_emdexp_st -> .)
    IF              reduce using rule 115 (check_emdexp_st -> .)
    PRINT           reduce using rule 115 (check_emdexp_st -> .)
    READ            reduce using rule 115 (check_emdexp_st -> .)
    ID              reduce using rule 115 (check_emdexp_st -> .)
    LPAREN          reduce using rule 115 (check_emdexp_st -> .)
    CTESTR          reduce using rule 115 (check_emdexp_st -> .)
    CTEINT          reduce using rule 115 (check_emdexp_st -> .)
    CTEFLT          reduce using rule 115 (check_emdexp_st -> .)
    FALSE           reduce using rule 115 (check_emdexp_st -> .)
    TRUE            reduce using rule 115 (check_emdexp_st -> .)
    SCOLON          reduce using rule 115 (check_emdexp_st -> .)
    RPAREN          reduce using rule 115 (check_emdexp_st -> .)
    RBRCKT          reduce using rule 115 (check_emdexp_st -> .)
    COMMA           reduce using rule 115 (check_emdexp_st -> .)

    check_emdexp_st                shift and go to state 211

state 181

    (21) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL . add_fqid funcstat remove_fscope
    (135) add_fqid -> .
    RCURL           reduce using rule 135 (add_fqid -> .)
    VAR             reduce using rule 135 (add_fqid -> .)
    RETURN          reduce using rule 135 (add_fqid -> .)
    WHILE           reduce using rule 135 (add_fqid -> .)
    IF              reduce using rule 135 (add_fqid -> .)
    PRINT           reduce using rule 135 (add_fqid -> .)
    READ            reduce using rule 135 (add_fqid -> .)
    ID              reduce using rule 135 (add_fqid -> .)
    LPAREN          reduce using rule 135 (add_fqid -> .)
    CTESTR          reduce using rule 135 (add_fqid -> .)
    CTEINT          reduce using rule 135 (add_fqid -> .)
    CTEFLT          reduce using rule 135 (add_fqid -> .)
    FALSE           reduce using rule 135 (add_fqid -> .)
    TRUE            reduce using rule 135 (add_fqid -> .)

    add_fqid                       shift and go to state 212

state 182

    (26) params -> vtype ID save_param . paramsdv
    (27) paramsdv -> . empty
    (28) paramsdv -> . COMMA params
    (98) empty -> .
    COMMA           shift and go to state 215
    RPAREN          reduce using rule 98 (empty -> .)

    paramsdv                       shift and go to state 213
    empty                          shift and go to state 214

state 183

    (15) listids -> ID LBRCKT CTEINT RBRCKT . store_arrid dimlist def_dims listdv
    (103) store_arrid -> .
    LBRCKT          reduce using rule 103 (store_arrid -> .)
    COMMA           reduce using rule 103 (store_arrid -> .)
    SCOLON          reduce using rule 103 (store_arrid -> .)

    store_arrid                    shift and go to state 216

state 184

    (20) listdv -> COMMA listids .
    SCOLON          reduce using rule 20 (listdv -> COMMA listids .)


state 185

    (64) pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .
    DIV             reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    MULT            reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    EXP             reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    SUB             reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    ADD             reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    GTEQ            reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    LTEQ            reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    NOTEQ           reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    EQ              reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    GT              reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    LT              reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    OR              reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    AND             reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    RCURL           reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    VAR             reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    RETURN          reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    WHILE           reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    IF              reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    PRINT           reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    READ            reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    ID              reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    LPAREN          reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    CTESTR          reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    CTEINT          reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    CTEFLT          reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    FALSE           reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    TRUE            reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    SCOLON          reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    RPAREN          reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    RBRCKT          reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)
    COMMA           reduce using rule 64 (pexp -> LPAREN push_oper_ctx expr RPAREN pop_oper_ctx .)


state 186

    (81) wwhile -> WHILE add_wpquad LPAREN expr RPAREN . gen_wquad DO LBRCKT whiledv add_wquad
    (131) gen_wquad -> .
    DO              reduce using rule 131 (gen_wquad -> .)

    gen_wquad                      shift and go to state 217

state 187

    (77) cond -> IF LPAREN expr RPAREN gen_cond_quad . LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> IF LPAREN expr RPAREN gen_cond_quad . LBRCKT condv add_jquad
    LBRCKT          shift and go to state 218


state 188

    (70) pprint -> PRINT LPAREN printlist RPAREN SCOLON . gen_print_quads
    (126) gen_print_quads -> .
    RCURL           reduce using rule 126 (gen_print_quads -> .)
    VAR             reduce using rule 126 (gen_print_quads -> .)
    RETURN          reduce using rule 126 (gen_print_quads -> .)
    WHILE           reduce using rule 126 (gen_print_quads -> .)
    IF              reduce using rule 126 (gen_print_quads -> .)
    PRINT           reduce using rule 126 (gen_print_quads -> .)
    READ            reduce using rule 126 (gen_print_quads -> .)
    ID              reduce using rule 126 (gen_print_quads -> .)
    LPAREN          reduce using rule 126 (gen_print_quads -> .)
    CTESTR          reduce using rule 126 (gen_print_quads -> .)
    CTEINT          reduce using rule 126 (gen_print_quads -> .)
    CTEFLT          reduce using rule 126 (gen_print_quads -> .)
    FALSE           reduce using rule 126 (gen_print_quads -> .)
    TRUE            reduce using rule 126 (gen_print_quads -> .)
    RBRCKT          reduce using rule 126 (gen_print_quads -> .)

    gen_print_quads                shift and go to state 219

state 189

    (73) printlistdv -> COMMA printerm .
    RPAREN          reduce using rule 73 (printlistdv -> COMMA printerm .)


state 190

    (75) printerm -> varidx add_vidx push_printidl .
    COMMA           reduce using rule 75 (printerm -> varidx add_vidx push_printidl .)
    RPAREN          reduce using rule 75 (printerm -> varidx add_vidx push_printidl .)


state 191

    (68) read -> READ LPAREN varidx add_vidx gen_idxread . RPAREN SCOLON
    RPAREN          shift and go to state 220


state 192

    (69) read -> READ LPAREN ID RPAREN gen_read . SCOLON
    SCOLON          shift and go to state 221


state 193

    (65) assign -> varidx add_vidx ASGN expr gen_idx_assign . SCOLON
    SCOLON          shift and go to state 222


state 194

    (34) fcallparams -> ID ASGN . expr add_params fcalltermdv
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 223
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 195

    (32) funccall -> ID validate_fid LPAREN RPAREN SCOLON . add_curr_pquad
    (140) add_curr_pquad -> .
    RCURL           reduce using rule 140 (add_curr_pquad -> .)
    VAR             reduce using rule 140 (add_curr_pquad -> .)
    RETURN          reduce using rule 140 (add_curr_pquad -> .)
    WHILE           reduce using rule 140 (add_curr_pquad -> .)
    IF              reduce using rule 140 (add_curr_pquad -> .)
    PRINT           reduce using rule 140 (add_curr_pquad -> .)
    READ            reduce using rule 140 (add_curr_pquad -> .)
    ID              reduce using rule 140 (add_curr_pquad -> .)
    LPAREN          reduce using rule 140 (add_curr_pquad -> .)
    CTESTR          reduce using rule 140 (add_curr_pquad -> .)
    CTEINT          reduce using rule 140 (add_curr_pquad -> .)
    CTEFLT          reduce using rule 140 (add_curr_pquad -> .)
    FALSE           reduce using rule 140 (add_curr_pquad -> .)
    TRUE            reduce using rule 140 (add_curr_pquad -> .)
    DIV             reduce using rule 140 (add_curr_pquad -> .)
    MULT            reduce using rule 140 (add_curr_pquad -> .)
    EXP             reduce using rule 140 (add_curr_pquad -> .)
    SUB             reduce using rule 140 (add_curr_pquad -> .)
    ADD             reduce using rule 140 (add_curr_pquad -> .)
    GTEQ            reduce using rule 140 (add_curr_pquad -> .)
    LTEQ            reduce using rule 140 (add_curr_pquad -> .)
    NOTEQ           reduce using rule 140 (add_curr_pquad -> .)
    EQ              reduce using rule 140 (add_curr_pquad -> .)
    GT              reduce using rule 140 (add_curr_pquad -> .)
    LT              reduce using rule 140 (add_curr_pquad -> .)
    OR              reduce using rule 140 (add_curr_pquad -> .)
    AND             reduce using rule 140 (add_curr_pquad -> .)
    SCOLON          reduce using rule 140 (add_curr_pquad -> .)
    RPAREN          reduce using rule 140 (add_curr_pquad -> .)
    RBRCKT          reduce using rule 140 (add_curr_pquad -> .)
    COMMA           reduce using rule 140 (add_curr_pquad -> .)

    add_curr_pquad                 shift and go to state 224

state 196

    (33) funccall -> ID validate_fid LPAREN fcallparams RPAREN . SCOLON add_curr_pquad
    SCOLON          shift and go to state 225


state 197

    (66) assign -> ID ASGN expr gen_assign SCOLON .
    RCURL           reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    VAR             reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    RETURN          reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    WHILE           reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    IF              reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    PRINT           reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    READ            reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    ID              reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    LPAREN          reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    CTESTR          reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    CTEINT          reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    CTEFLT          reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    FALSE           reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    TRUE            reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)
    RBRCKT          reduce using rule 66 (assign -> ID ASGN expr gen_assign SCOLON .)


state 198

    (95) varidx -> ID LBRCKT validate_arr expr RBRCKT . gen_vdim arrindex
    (109) gen_vdim -> .
    LBRCKT          reduce using rule 109 (gen_vdim -> .)
    ASGN            reduce using rule 109 (gen_vdim -> .)
    DIV             reduce using rule 109 (gen_vdim -> .)
    MULT            reduce using rule 109 (gen_vdim -> .)
    EXP             reduce using rule 109 (gen_vdim -> .)
    SUB             reduce using rule 109 (gen_vdim -> .)
    ADD             reduce using rule 109 (gen_vdim -> .)
    GTEQ            reduce using rule 109 (gen_vdim -> .)
    LTEQ            reduce using rule 109 (gen_vdim -> .)
    NOTEQ           reduce using rule 109 (gen_vdim -> .)
    EQ              reduce using rule 109 (gen_vdim -> .)
    GT              reduce using rule 109 (gen_vdim -> .)
    LT              reduce using rule 109 (gen_vdim -> .)
    OR              reduce using rule 109 (gen_vdim -> .)
    AND             reduce using rule 109 (gen_vdim -> .)
    RCURL           reduce using rule 109 (gen_vdim -> .)
    VAR             reduce using rule 109 (gen_vdim -> .)
    RETURN          reduce using rule 109 (gen_vdim -> .)
    WHILE           reduce using rule 109 (gen_vdim -> .)
    IF              reduce using rule 109 (gen_vdim -> .)
    PRINT           reduce using rule 109 (gen_vdim -> .)
    READ            reduce using rule 109 (gen_vdim -> .)
    ID              reduce using rule 109 (gen_vdim -> .)
    LPAREN          reduce using rule 109 (gen_vdim -> .)
    CTESTR          reduce using rule 109 (gen_vdim -> .)
    CTEINT          reduce using rule 109 (gen_vdim -> .)
    CTEFLT          reduce using rule 109 (gen_vdim -> .)
    FALSE           reduce using rule 109 (gen_vdim -> .)
    TRUE            reduce using rule 109 (gen_vdim -> .)
    SCOLON          reduce using rule 109 (gen_vdim -> .)
    RPAREN          reduce using rule 109 (gen_vdim -> .)
    COMMA           reduce using rule 109 (gen_vdim -> .)
    RBRCKT          reduce using rule 109 (gen_vdim -> .)

    gen_vdim                       shift and go to state 226

state 199

    (47) expr -> bexp OR add_oper expr check_expr_st .
    RCURL           reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    VAR             reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    RETURN          reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    WHILE           reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    IF              reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    PRINT           reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    READ            reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    ID              reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    LPAREN          reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    CTESTR          reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    CTEINT          reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    CTEFLT          reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    FALSE           reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    TRUE            reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    SCOLON          reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    RPAREN          reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    RBRCKT          reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)
    COMMA           reduce using rule 47 (expr -> bexp OR add_oper expr check_expr_st .)


state 200

    (48) expr -> bexp AND add_oper expr check_expr_st .
    RCURL           reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    VAR             reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    RETURN          reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    WHILE           reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    IF              reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    PRINT           reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    READ            reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    ID              reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    LPAREN          reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    CTESTR          reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    CTEINT          reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    CTEFLT          reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    FALSE           reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    TRUE            reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    SCOLON          reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    RPAREN          reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    RBRCKT          reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)
    COMMA           reduce using rule 48 (expr -> bexp AND add_oper expr check_expr_st .)


state 201

    (50) bexp -> asexp GTEQ add_oper bexp check_bexp_st .
    OR              reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    AND             reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    VAR             reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    IF              reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    READ            reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    ID              reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 50 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)


state 202

    (51) bexp -> asexp LTEQ add_oper bexp check_bexp_st .
    OR              reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    AND             reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    VAR             reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    IF              reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    READ            reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    ID              reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 51 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)


state 203

    (52) bexp -> asexp NOTEQ add_oper bexp check_bexp_st .
    OR              reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    AND             reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    VAR             reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    IF              reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    READ            reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    ID              reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 52 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)


state 204

    (53) bexp -> asexp EQ add_oper bexp check_bexp_st .
    OR              reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    AND             reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    VAR             reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    IF              reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    READ            reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    ID              reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 53 (bexp -> asexp EQ add_oper bexp check_bexp_st .)


state 205

    (54) bexp -> asexp GT add_oper bexp check_bexp_st .
    OR              reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    AND             reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    VAR             reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    IF              reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    READ            reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    ID              reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 54 (bexp -> asexp GT add_oper bexp check_bexp_st .)


state 206

    (55) bexp -> asexp LT add_oper bexp check_bexp_st .
    OR              reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    AND             reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    VAR             reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    IF              reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    READ            reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    ID              reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 55 (bexp -> asexp LT add_oper bexp check_bexp_st .)


state 207

    (57) asexp -> emdexp SUB add_oper asexp check_asexp_st .
    GTEQ            reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    LTEQ            reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    NOTEQ           reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    EQ              reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    GT              reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    LT              reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    OR              reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    AND             reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    RCURL           reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    VAR             reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    RETURN          reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    WHILE           reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    IF              reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    PRINT           reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    READ            reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    ID              reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    LPAREN          reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    CTESTR          reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    CTEINT          reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    CTEFLT          reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    FALSE           reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    TRUE            reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    SCOLON          reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    RPAREN          reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    RBRCKT          reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    COMMA           reduce using rule 57 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)


state 208

    (58) asexp -> emdexp ADD add_oper asexp check_asexp_st .
    GTEQ            reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    LTEQ            reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    NOTEQ           reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    EQ              reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    GT              reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    LT              reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    OR              reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    AND             reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    RCURL           reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    VAR             reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    RETURN          reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    WHILE           reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    IF              reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    PRINT           reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    READ            reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    ID              reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    LPAREN          reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    CTESTR          reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    CTEINT          reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    CTEFLT          reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    FALSE           reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    TRUE            reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    SCOLON          reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    RPAREN          reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    RBRCKT          reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    COMMA           reduce using rule 58 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)


state 209

    (60) emdexp -> pexp DIV add_oper emdexp check_emdexp_st .
    SUB             reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    ADD             reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    GTEQ            reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    LTEQ            reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    NOTEQ           reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    EQ              reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    GT              reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    LT              reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    OR              reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    AND             reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    RCURL           reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    VAR             reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    RETURN          reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    WHILE           reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    IF              reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    PRINT           reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    READ            reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    ID              reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    LPAREN          reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    CTESTR          reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    CTEINT          reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    CTEFLT          reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    FALSE           reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    TRUE            reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    SCOLON          reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    RPAREN          reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    RBRCKT          reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    COMMA           reduce using rule 60 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)


state 210

    (61) emdexp -> pexp MULT add_oper emdexp check_emdexp_st .
    SUB             reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    ADD             reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    GTEQ            reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    LTEQ            reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    NOTEQ           reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    EQ              reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    GT              reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    LT              reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    OR              reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    AND             reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    RCURL           reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    VAR             reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    RETURN          reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    WHILE           reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    IF              reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    PRINT           reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    READ            reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    ID              reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    LPAREN          reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    CTESTR          reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    CTEINT          reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    CTEFLT          reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    FALSE           reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    TRUE            reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    SCOLON          reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    RPAREN          reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    RBRCKT          reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    COMMA           reduce using rule 61 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)


state 211

    (62) emdexp -> pexp EXP add_oper emdexp check_emdexp_st .
    SUB             reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    ADD             reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    GTEQ            reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    LTEQ            reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    NOTEQ           reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    EQ              reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    GT              reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    LT              reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    OR              reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    AND             reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    RCURL           reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    VAR             reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    RETURN          reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    WHILE           reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    IF              reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    PRINT           reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    READ            reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    ID              reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    LPAREN          reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    CTESTR          reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    CTEINT          reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    CTEFLT          reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    FALSE           reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    TRUE            reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    SCOLON          reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    RPAREN          reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    RBRCKT          reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    COMMA           reduce using rule 62 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)


state 212

    (21) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid . funcstat remove_fscope
    (29) funcstat -> . RCURL
    (30) funcstat -> . statement funcstat
    (31) funcstat -> . vars funcstat
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RCURL           shift and go to state 228
    VAR             shift and go to state 13
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    funcstat                       shift and go to state 227
    statement                      shift and go to state 229
    vars                           shift and go to state 230
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    expr                           shift and go to state 45
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 213

    (26) params -> vtype ID save_param paramsdv .
    RPAREN          reduce using rule 26 (params -> vtype ID save_param paramsdv .)


state 214

    (27) paramsdv -> empty .
    RPAREN          reduce using rule 27 (paramsdv -> empty .)


state 215

    (28) paramsdv -> COMMA . params
    (26) params -> . vtype ID save_param paramsdv
    (11) vtype -> . TSTR
    (12) vtype -> . TFLT
    (13) vtype -> . TINT
    (14) vtype -> . TBOOL
    TSTR            shift and go to state 21
    TFLT            shift and go to state 22
    TINT            shift and go to state 23
    TBOOL           shift and go to state 24

    params                         shift and go to state 231
    vtype                          shift and go to state 107

state 216

    (15) listids -> ID LBRCKT CTEINT RBRCKT store_arrid . dimlist def_dims listdv
    (17) dimlist -> . empty
    (18) dimlist -> . LBRCKT CTEINT RBRCKT append_dim dimlist
    (98) empty -> .
    LBRCKT          shift and go to state 232
    COMMA           reduce using rule 98 (empty -> .)
    SCOLON          reduce using rule 98 (empty -> .)

    dimlist                        shift and go to state 233
    empty                          shift and go to state 234

state 217

    (81) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad . DO LBRCKT whiledv add_wquad
    DO              shift and go to state 235


state 218

    (77) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT . condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT . condv add_jquad
    (79) condv -> . RBRCKT
    (80) condv -> . statement condv
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RBRCKT          shift and go to state 237
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 45
    condv                          shift and go to state 236
    statement                      shift and go to state 238
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 219

    (70) pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .
    RCURL           reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    VAR             reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    RETURN          reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    WHILE           reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    IF              reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    PRINT           reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    READ            reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    ID              reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    LPAREN          reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    CTESTR          reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    CTEINT          reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    CTEFLT          reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    FALSE           reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    TRUE            reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)
    RBRCKT          reduce using rule 70 (pprint -> PRINT LPAREN printlist RPAREN SCOLON gen_print_quads .)


state 220

    (68) read -> READ LPAREN varidx add_vidx gen_idxread RPAREN . SCOLON
    SCOLON          shift and go to state 239


state 221

    (69) read -> READ LPAREN ID RPAREN gen_read SCOLON .
    RCURL           reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    VAR             reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    RETURN          reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    WHILE           reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    IF              reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    PRINT           reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    READ            reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    ID              reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    LPAREN          reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    CTESTR          reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    CTEINT          reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    CTEFLT          reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    FALSE           reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    TRUE            reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)
    RBRCKT          reduce using rule 69 (read -> READ LPAREN ID RPAREN gen_read SCOLON .)


state 222

    (65) assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .
    RCURL           reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    VAR             reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    RETURN          reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    WHILE           reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    IF              reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    PRINT           reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    READ            reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    ID              reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    LPAREN          reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    CTESTR          reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    CTEINT          reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    CTEFLT          reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    FALSE           reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    TRUE            reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)
    RBRCKT          reduce using rule 65 (assign -> varidx add_vidx ASGN expr gen_idx_assign SCOLON .)


state 223

    (34) fcallparams -> ID ASGN expr . add_params fcalltermdv
    (139) add_params -> .
    COMMA           reduce using rule 139 (add_params -> .)
    RPAREN          reduce using rule 139 (add_params -> .)

    add_params                     shift and go to state 240

state 224

    (32) funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .
    RCURL           reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    VAR             reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    RETURN          reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    WHILE           reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    IF              reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    PRINT           reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    READ            reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    ID              reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    LPAREN          reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    CTESTR          reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    CTEINT          reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    CTEFLT          reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    FALSE           reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    TRUE            reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    DIV             reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    MULT            reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    EXP             reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    SUB             reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    ADD             reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    GTEQ            reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    LTEQ            reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    NOTEQ           reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    EQ              reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    GT              reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    LT              reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    OR              reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    AND             reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    SCOLON          reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    RPAREN          reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    RBRCKT          reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)
    COMMA           reduce using rule 32 (funccall -> ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad .)


state 225

    (33) funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON . add_curr_pquad
    (140) add_curr_pquad -> .
    RCURL           reduce using rule 140 (add_curr_pquad -> .)
    VAR             reduce using rule 140 (add_curr_pquad -> .)
    RETURN          reduce using rule 140 (add_curr_pquad -> .)
    WHILE           reduce using rule 140 (add_curr_pquad -> .)
    IF              reduce using rule 140 (add_curr_pquad -> .)
    PRINT           reduce using rule 140 (add_curr_pquad -> .)
    READ            reduce using rule 140 (add_curr_pquad -> .)
    ID              reduce using rule 140 (add_curr_pquad -> .)
    LPAREN          reduce using rule 140 (add_curr_pquad -> .)
    CTESTR          reduce using rule 140 (add_curr_pquad -> .)
    CTEINT          reduce using rule 140 (add_curr_pquad -> .)
    CTEFLT          reduce using rule 140 (add_curr_pquad -> .)
    FALSE           reduce using rule 140 (add_curr_pquad -> .)
    TRUE            reduce using rule 140 (add_curr_pquad -> .)
    DIV             reduce using rule 140 (add_curr_pquad -> .)
    MULT            reduce using rule 140 (add_curr_pquad -> .)
    EXP             reduce using rule 140 (add_curr_pquad -> .)
    SUB             reduce using rule 140 (add_curr_pquad -> .)
    ADD             reduce using rule 140 (add_curr_pquad -> .)
    GTEQ            reduce using rule 140 (add_curr_pquad -> .)
    LTEQ            reduce using rule 140 (add_curr_pquad -> .)
    NOTEQ           reduce using rule 140 (add_curr_pquad -> .)
    EQ              reduce using rule 140 (add_curr_pquad -> .)
    GT              reduce using rule 140 (add_curr_pquad -> .)
    LT              reduce using rule 140 (add_curr_pquad -> .)
    OR              reduce using rule 140 (add_curr_pquad -> .)
    AND             reduce using rule 140 (add_curr_pquad -> .)
    SCOLON          reduce using rule 140 (add_curr_pquad -> .)
    RPAREN          reduce using rule 140 (add_curr_pquad -> .)
    RBRCKT          reduce using rule 140 (add_curr_pquad -> .)
    COMMA           reduce using rule 140 (add_curr_pquad -> .)

    add_curr_pquad                 shift and go to state 241

state 226

    (95) varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim . arrindex
    (96) arrindex -> . empty
    (97) arrindex -> . LBRCKT expr RBRCKT gen_vdim arrindex
    (98) empty -> .
    LBRCKT          shift and go to state 242
    ASGN            reduce using rule 98 (empty -> .)
    DIV             reduce using rule 98 (empty -> .)
    MULT            reduce using rule 98 (empty -> .)
    EXP             reduce using rule 98 (empty -> .)
    SUB             reduce using rule 98 (empty -> .)
    ADD             reduce using rule 98 (empty -> .)
    GTEQ            reduce using rule 98 (empty -> .)
    LTEQ            reduce using rule 98 (empty -> .)
    NOTEQ           reduce using rule 98 (empty -> .)
    EQ              reduce using rule 98 (empty -> .)
    GT              reduce using rule 98 (empty -> .)
    LT              reduce using rule 98 (empty -> .)
    OR              reduce using rule 98 (empty -> .)
    AND             reduce using rule 98 (empty -> .)
    RCURL           reduce using rule 98 (empty -> .)
    VAR             reduce using rule 98 (empty -> .)
    RETURN          reduce using rule 98 (empty -> .)
    WHILE           reduce using rule 98 (empty -> .)
    IF              reduce using rule 98 (empty -> .)
    PRINT           reduce using rule 98 (empty -> .)
    READ            reduce using rule 98 (empty -> .)
    ID              reduce using rule 98 (empty -> .)
    LPAREN          reduce using rule 98 (empty -> .)
    CTESTR          reduce using rule 98 (empty -> .)
    CTEINT          reduce using rule 98 (empty -> .)
    CTEFLT          reduce using rule 98 (empty -> .)
    FALSE           reduce using rule 98 (empty -> .)
    TRUE            reduce using rule 98 (empty -> .)
    SCOLON          reduce using rule 98 (empty -> .)
    RPAREN          reduce using rule 98 (empty -> .)
    COMMA           reduce using rule 98 (empty -> .)
    RBRCKT          reduce using rule 98 (empty -> .)

    arrindex                       shift and go to state 243
    empty                          shift and go to state 244

state 227

    (21) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat . remove_fscope
    (137) remove_fscope -> .
    MAIN            reduce using rule 137 (remove_fscope -> .)
    FUNCTION        reduce using rule 137 (remove_fscope -> .)
    VAR             reduce using rule 137 (remove_fscope -> .)
    $end            reduce using rule 137 (remove_fscope -> .)

    remove_fscope                  shift and go to state 245

state 228

    (29) funcstat -> RCURL .
    MAIN            reduce using rule 29 (funcstat -> RCURL .)
    FUNCTION        reduce using rule 29 (funcstat -> RCURL .)
    VAR             reduce using rule 29 (funcstat -> RCURL .)
    $end            reduce using rule 29 (funcstat -> RCURL .)


state 229

    (30) funcstat -> statement . funcstat
    (29) funcstat -> . RCURL
    (30) funcstat -> . statement funcstat
    (31) funcstat -> . vars funcstat
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RCURL           shift and go to state 228
    VAR             shift and go to state 13
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    statement                      shift and go to state 229
    funcstat                       shift and go to state 246
    vars                           shift and go to state 230
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    expr                           shift and go to state 45
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 230

    (31) funcstat -> vars . funcstat
    (29) funcstat -> . RCURL
    (30) funcstat -> . statement funcstat
    (31) funcstat -> . vars funcstat
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (10) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RCURL           shift and go to state 228
    VAR             shift and go to state 13
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    vars                           shift and go to state 230
    funcstat                       shift and go to state 247
    statement                      shift and go to state 229
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    expr                           shift and go to state 45
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 231

    (28) paramsdv -> COMMA params .
    RPAREN          reduce using rule 28 (paramsdv -> COMMA params .)


state 232

    (18) dimlist -> LBRCKT . CTEINT RBRCKT append_dim dimlist
    CTEINT          shift and go to state 248


state 233

    (15) listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist . def_dims listdv
    (105) def_dims -> .
    COMMA           reduce using rule 105 (def_dims -> .)
    SCOLON          reduce using rule 105 (def_dims -> .)

    def_dims                       shift and go to state 249

state 234

    (17) dimlist -> empty .
    COMMA           reduce using rule 17 (dimlist -> empty .)
    SCOLON          reduce using rule 17 (dimlist -> empty .)


state 235

    (81) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO . LBRCKT whiledv add_wquad
    LBRCKT          shift and go to state 250


state 236

    (77) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv . gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv . add_jquad
    (129) gen_egoto -> .
    (128) add_jquad -> .
    ELSE            reduce using rule 129 (gen_egoto -> .)
    RCURL           reduce using rule 128 (add_jquad -> .)
    VAR             reduce using rule 128 (add_jquad -> .)
    RETURN          reduce using rule 128 (add_jquad -> .)
    WHILE           reduce using rule 128 (add_jquad -> .)
    IF              reduce using rule 128 (add_jquad -> .)
    PRINT           reduce using rule 128 (add_jquad -> .)
    READ            reduce using rule 128 (add_jquad -> .)
    ID              reduce using rule 128 (add_jquad -> .)
    LPAREN          reduce using rule 128 (add_jquad -> .)
    CTESTR          reduce using rule 128 (add_jquad -> .)
    CTEINT          reduce using rule 128 (add_jquad -> .)
    CTEFLT          reduce using rule 128 (add_jquad -> .)
    FALSE           reduce using rule 128 (add_jquad -> .)
    TRUE            reduce using rule 128 (add_jquad -> .)
    RBRCKT          reduce using rule 128 (add_jquad -> .)

    gen_egoto                      shift and go to state 251
    add_jquad                      shift and go to state 252

state 237

    (79) condv -> RBRCKT .
    ELSE            reduce using rule 79 (condv -> RBRCKT .)
    RCURL           reduce using rule 79 (condv -> RBRCKT .)
    VAR             reduce using rule 79 (condv -> RBRCKT .)
    RETURN          reduce using rule 79 (condv -> RBRCKT .)
    WHILE           reduce using rule 79 (condv -> RBRCKT .)
    IF              reduce using rule 79 (condv -> RBRCKT .)
    PRINT           reduce using rule 79 (condv -> RBRCKT .)
    READ            reduce using rule 79 (condv -> RBRCKT .)
    ID              reduce using rule 79 (condv -> RBRCKT .)
    LPAREN          reduce using rule 79 (condv -> RBRCKT .)
    CTESTR          reduce using rule 79 (condv -> RBRCKT .)
    CTEINT          reduce using rule 79 (condv -> RBRCKT .)
    CTEFLT          reduce using rule 79 (condv -> RBRCKT .)
    FALSE           reduce using rule 79 (condv -> RBRCKT .)
    TRUE            reduce using rule 79 (condv -> RBRCKT .)
    RBRCKT          reduce using rule 79 (condv -> RBRCKT .)


state 238

    (80) condv -> statement . condv
    (79) condv -> . RBRCKT
    (80) condv -> . statement condv
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RBRCKT          shift and go to state 237
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    statement                      shift and go to state 238
    condv                          shift and go to state 253
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    expr                           shift and go to state 45
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 239

    (68) read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .
    RCURL           reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    VAR             reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    RETURN          reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    WHILE           reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    IF              reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    PRINT           reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    READ            reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    ID              reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    LPAREN          reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    CTESTR          reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    CTEINT          reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    CTEFLT          reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    FALSE           reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    TRUE            reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)
    RBRCKT          reduce using rule 68 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON .)


state 240

    (34) fcallparams -> ID ASGN expr add_params . fcalltermdv
    (35) fcalltermdv -> . empty
    (36) fcalltermdv -> . COMMA fcallparams
    (98) empty -> .
    COMMA           shift and go to state 256
    RPAREN          reduce using rule 98 (empty -> .)

    fcalltermdv                    shift and go to state 254
    empty                          shift and go to state 255

state 241

    (33) funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .
    RCURL           reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    VAR             reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    RETURN          reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    WHILE           reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    IF              reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    PRINT           reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    READ            reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    ID              reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    LPAREN          reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    CTESTR          reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    CTEINT          reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    CTEFLT          reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    FALSE           reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    TRUE            reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    DIV             reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    MULT            reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    EXP             reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    SUB             reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    ADD             reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    GTEQ            reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    LTEQ            reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    NOTEQ           reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    EQ              reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    GT              reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    LT              reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    OR              reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    AND             reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    SCOLON          reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    RPAREN          reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    RBRCKT          reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)
    COMMA           reduce using rule 33 (funccall -> ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad .)


state 242

    (97) arrindex -> LBRCKT . expr RBRCKT gen_vdim arrindex
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    LPAREN          shift and go to state 32
    ID              shift and go to state 75
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 257
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    funccall                       shift and go to state 73
    varidx                         shift and go to state 74
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 243

    (95) varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .
    ASGN            reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    DIV             reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    MULT            reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    EXP             reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    SUB             reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    ADD             reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    GTEQ            reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    LTEQ            reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    NOTEQ           reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    EQ              reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    GT              reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    LT              reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    OR              reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    AND             reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    RCURL           reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    VAR             reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    RETURN          reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    WHILE           reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    IF              reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    PRINT           reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    READ            reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    ID              reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    LPAREN          reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    CTESTR          reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    CTEINT          reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    CTEFLT          reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    FALSE           reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    TRUE            reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    SCOLON          reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    RPAREN          reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    COMMA           reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    RBRCKT          reduce using rule 95 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)


state 244

    (96) arrindex -> empty .
    ASGN            reduce using rule 96 (arrindex -> empty .)
    DIV             reduce using rule 96 (arrindex -> empty .)
    MULT            reduce using rule 96 (arrindex -> empty .)
    EXP             reduce using rule 96 (arrindex -> empty .)
    SUB             reduce using rule 96 (arrindex -> empty .)
    ADD             reduce using rule 96 (arrindex -> empty .)
    GTEQ            reduce using rule 96 (arrindex -> empty .)
    LTEQ            reduce using rule 96 (arrindex -> empty .)
    NOTEQ           reduce using rule 96 (arrindex -> empty .)
    EQ              reduce using rule 96 (arrindex -> empty .)
    GT              reduce using rule 96 (arrindex -> empty .)
    LT              reduce using rule 96 (arrindex -> empty .)
    OR              reduce using rule 96 (arrindex -> empty .)
    AND             reduce using rule 96 (arrindex -> empty .)
    RCURL           reduce using rule 96 (arrindex -> empty .)
    VAR             reduce using rule 96 (arrindex -> empty .)
    RETURN          reduce using rule 96 (arrindex -> empty .)
    WHILE           reduce using rule 96 (arrindex -> empty .)
    IF              reduce using rule 96 (arrindex -> empty .)
    PRINT           reduce using rule 96 (arrindex -> empty .)
    READ            reduce using rule 96 (arrindex -> empty .)
    ID              reduce using rule 96 (arrindex -> empty .)
    LPAREN          reduce using rule 96 (arrindex -> empty .)
    CTESTR          reduce using rule 96 (arrindex -> empty .)
    CTEINT          reduce using rule 96 (arrindex -> empty .)
    CTEFLT          reduce using rule 96 (arrindex -> empty .)
    FALSE           reduce using rule 96 (arrindex -> empty .)
    TRUE            reduce using rule 96 (arrindex -> empty .)
    SCOLON          reduce using rule 96 (arrindex -> empty .)
    RPAREN          reduce using rule 96 (arrindex -> empty .)
    COMMA           reduce using rule 96 (arrindex -> empty .)
    RBRCKT          reduce using rule 96 (arrindex -> empty .)


state 245

    (21) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .
    MAIN            reduce using rule 21 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    FUNCTION        reduce using rule 21 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    VAR             reduce using rule 21 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    $end            reduce using rule 21 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)


state 246

    (30) funcstat -> statement funcstat .
    MAIN            reduce using rule 30 (funcstat -> statement funcstat .)
    FUNCTION        reduce using rule 30 (funcstat -> statement funcstat .)
    VAR             reduce using rule 30 (funcstat -> statement funcstat .)
    $end            reduce using rule 30 (funcstat -> statement funcstat .)


state 247

    (31) funcstat -> vars funcstat .
    MAIN            reduce using rule 31 (funcstat -> vars funcstat .)
    FUNCTION        reduce using rule 31 (funcstat -> vars funcstat .)
    VAR             reduce using rule 31 (funcstat -> vars funcstat .)
    $end            reduce using rule 31 (funcstat -> vars funcstat .)


state 248

    (18) dimlist -> LBRCKT CTEINT . RBRCKT append_dim dimlist
    RBRCKT          shift and go to state 258


state 249

    (15) listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims . listdv
    (19) listdv -> . empty
    (20) listdv -> . COMMA listids
    (98) empty -> .
    COMMA           shift and go to state 147
    SCOLON          reduce using rule 98 (empty -> .)

    listdv                         shift and go to state 259
    empty                          shift and go to state 146

state 250

    (81) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT . whiledv add_wquad
    (82) whiledv -> . RBRCKT
    (83) whiledv -> . statement whiledv
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RBRCKT          shift and go to state 261
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 45
    whiledv                        shift and go to state 260
    statement                      shift and go to state 262
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 251

    (77) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto . ELSE LBRCKT condv add_jquad
    ELSE            shift and go to state 263


state 252

    (78) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .
    RCURL           reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    VAR             reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    RETURN          reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    WHILE           reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    IF              reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    PRINT           reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    READ            reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    ID              reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    LPAREN          reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    CTESTR          reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    CTEINT          reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    CTEFLT          reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    FALSE           reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    TRUE            reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)
    RBRCKT          reduce using rule 78 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad .)


state 253

    (80) condv -> statement condv .
    ELSE            reduce using rule 80 (condv -> statement condv .)
    RCURL           reduce using rule 80 (condv -> statement condv .)
    VAR             reduce using rule 80 (condv -> statement condv .)
    RETURN          reduce using rule 80 (condv -> statement condv .)
    WHILE           reduce using rule 80 (condv -> statement condv .)
    IF              reduce using rule 80 (condv -> statement condv .)
    PRINT           reduce using rule 80 (condv -> statement condv .)
    READ            reduce using rule 80 (condv -> statement condv .)
    ID              reduce using rule 80 (condv -> statement condv .)
    LPAREN          reduce using rule 80 (condv -> statement condv .)
    CTESTR          reduce using rule 80 (condv -> statement condv .)
    CTEINT          reduce using rule 80 (condv -> statement condv .)
    CTEFLT          reduce using rule 80 (condv -> statement condv .)
    FALSE           reduce using rule 80 (condv -> statement condv .)
    TRUE            reduce using rule 80 (condv -> statement condv .)
    RBRCKT          reduce using rule 80 (condv -> statement condv .)


state 254

    (34) fcallparams -> ID ASGN expr add_params fcalltermdv .
    RPAREN          reduce using rule 34 (fcallparams -> ID ASGN expr add_params fcalltermdv .)


state 255

    (35) fcalltermdv -> empty .
    RPAREN          reduce using rule 35 (fcalltermdv -> empty .)


state 256

    (36) fcalltermdv -> COMMA . fcallparams
    (34) fcallparams -> . ID ASGN expr add_params fcalltermdv
    ID              shift and go to state 162

    fcallparams                    shift and go to state 264

state 257

    (97) arrindex -> LBRCKT expr . RBRCKT gen_vdim arrindex
    RBRCKT          shift and go to state 265


state 258

    (18) dimlist -> LBRCKT CTEINT RBRCKT . append_dim dimlist
    (104) append_dim -> .
    LBRCKT          reduce using rule 104 (append_dim -> .)
    COMMA           reduce using rule 104 (append_dim -> .)
    SCOLON          reduce using rule 104 (append_dim -> .)

    append_dim                     shift and go to state 266

state 259

    (15) listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv .
    SCOLON          reduce using rule 15 (listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv .)


state 260

    (81) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv . add_wquad
    (132) add_wquad -> .
    RCURL           reduce using rule 132 (add_wquad -> .)
    VAR             reduce using rule 132 (add_wquad -> .)
    RETURN          reduce using rule 132 (add_wquad -> .)
    WHILE           reduce using rule 132 (add_wquad -> .)
    IF              reduce using rule 132 (add_wquad -> .)
    PRINT           reduce using rule 132 (add_wquad -> .)
    READ            reduce using rule 132 (add_wquad -> .)
    ID              reduce using rule 132 (add_wquad -> .)
    LPAREN          reduce using rule 132 (add_wquad -> .)
    CTESTR          reduce using rule 132 (add_wquad -> .)
    CTEINT          reduce using rule 132 (add_wquad -> .)
    CTEFLT          reduce using rule 132 (add_wquad -> .)
    FALSE           reduce using rule 132 (add_wquad -> .)
    TRUE            reduce using rule 132 (add_wquad -> .)
    RBRCKT          reduce using rule 132 (add_wquad -> .)

    add_wquad                      shift and go to state 267

state 261

    (82) whiledv -> RBRCKT .
    RCURL           reduce using rule 82 (whiledv -> RBRCKT .)
    VAR             reduce using rule 82 (whiledv -> RBRCKT .)
    RETURN          reduce using rule 82 (whiledv -> RBRCKT .)
    WHILE           reduce using rule 82 (whiledv -> RBRCKT .)
    IF              reduce using rule 82 (whiledv -> RBRCKT .)
    PRINT           reduce using rule 82 (whiledv -> RBRCKT .)
    READ            reduce using rule 82 (whiledv -> RBRCKT .)
    ID              reduce using rule 82 (whiledv -> RBRCKT .)
    LPAREN          reduce using rule 82 (whiledv -> RBRCKT .)
    CTESTR          reduce using rule 82 (whiledv -> RBRCKT .)
    CTEINT          reduce using rule 82 (whiledv -> RBRCKT .)
    CTEFLT          reduce using rule 82 (whiledv -> RBRCKT .)
    FALSE           reduce using rule 82 (whiledv -> RBRCKT .)
    TRUE            reduce using rule 82 (whiledv -> RBRCKT .)
    RBRCKT          reduce using rule 82 (whiledv -> RBRCKT .)


state 262

    (83) whiledv -> statement . whiledv
    (82) whiledv -> . RBRCKT
    (83) whiledv -> . statement whiledv
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RBRCKT          shift and go to state 261
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    statement                      shift and go to state 262
    whiledv                        shift and go to state 268
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    expr                           shift and go to state 45
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 263

    (77) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE . LBRCKT condv add_jquad
    LBRCKT          shift and go to state 269


state 264

    (36) fcalltermdv -> COMMA fcallparams .
    RPAREN          reduce using rule 36 (fcalltermdv -> COMMA fcallparams .)


state 265

    (97) arrindex -> LBRCKT expr RBRCKT . gen_vdim arrindex
    (109) gen_vdim -> .
    LBRCKT          reduce using rule 109 (gen_vdim -> .)
    ASGN            reduce using rule 109 (gen_vdim -> .)
    DIV             reduce using rule 109 (gen_vdim -> .)
    MULT            reduce using rule 109 (gen_vdim -> .)
    EXP             reduce using rule 109 (gen_vdim -> .)
    SUB             reduce using rule 109 (gen_vdim -> .)
    ADD             reduce using rule 109 (gen_vdim -> .)
    GTEQ            reduce using rule 109 (gen_vdim -> .)
    LTEQ            reduce using rule 109 (gen_vdim -> .)
    NOTEQ           reduce using rule 109 (gen_vdim -> .)
    EQ              reduce using rule 109 (gen_vdim -> .)
    GT              reduce using rule 109 (gen_vdim -> .)
    LT              reduce using rule 109 (gen_vdim -> .)
    OR              reduce using rule 109 (gen_vdim -> .)
    AND             reduce using rule 109 (gen_vdim -> .)
    RCURL           reduce using rule 109 (gen_vdim -> .)
    VAR             reduce using rule 109 (gen_vdim -> .)
    RETURN          reduce using rule 109 (gen_vdim -> .)
    WHILE           reduce using rule 109 (gen_vdim -> .)
    IF              reduce using rule 109 (gen_vdim -> .)
    PRINT           reduce using rule 109 (gen_vdim -> .)
    READ            reduce using rule 109 (gen_vdim -> .)
    ID              reduce using rule 109 (gen_vdim -> .)
    LPAREN          reduce using rule 109 (gen_vdim -> .)
    CTESTR          reduce using rule 109 (gen_vdim -> .)
    CTEINT          reduce using rule 109 (gen_vdim -> .)
    CTEFLT          reduce using rule 109 (gen_vdim -> .)
    FALSE           reduce using rule 109 (gen_vdim -> .)
    TRUE            reduce using rule 109 (gen_vdim -> .)
    SCOLON          reduce using rule 109 (gen_vdim -> .)
    RPAREN          reduce using rule 109 (gen_vdim -> .)
    COMMA           reduce using rule 109 (gen_vdim -> .)
    RBRCKT          reduce using rule 109 (gen_vdim -> .)

    gen_vdim                       shift and go to state 270

state 266

    (18) dimlist -> LBRCKT CTEINT RBRCKT append_dim . dimlist
    (17) dimlist -> . empty
    (18) dimlist -> . LBRCKT CTEINT RBRCKT append_dim dimlist
    (98) empty -> .
    LBRCKT          shift and go to state 232
    COMMA           reduce using rule 98 (empty -> .)
    SCOLON          reduce using rule 98 (empty -> .)

    dimlist                        shift and go to state 271
    empty                          shift and go to state 234

state 267

    (81) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .
    RCURL           reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    VAR             reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    RETURN          reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    WHILE           reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    IF              reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    PRINT           reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    READ            reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    ID              reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    LPAREN          reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    CTESTR          reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    CTEINT          reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    CTEFLT          reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    FALSE           reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    TRUE            reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)
    RBRCKT          reduce using rule 81 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad .)


state 268

    (83) whiledv -> statement whiledv .
    RCURL           reduce using rule 83 (whiledv -> statement whiledv .)
    VAR             reduce using rule 83 (whiledv -> statement whiledv .)
    RETURN          reduce using rule 83 (whiledv -> statement whiledv .)
    WHILE           reduce using rule 83 (whiledv -> statement whiledv .)
    IF              reduce using rule 83 (whiledv -> statement whiledv .)
    PRINT           reduce using rule 83 (whiledv -> statement whiledv .)
    READ            reduce using rule 83 (whiledv -> statement whiledv .)
    ID              reduce using rule 83 (whiledv -> statement whiledv .)
    LPAREN          reduce using rule 83 (whiledv -> statement whiledv .)
    CTESTR          reduce using rule 83 (whiledv -> statement whiledv .)
    CTEINT          reduce using rule 83 (whiledv -> statement whiledv .)
    CTEFLT          reduce using rule 83 (whiledv -> statement whiledv .)
    FALSE           reduce using rule 83 (whiledv -> statement whiledv .)
    TRUE            reduce using rule 83 (whiledv -> statement whiledv .)
    RBRCKT          reduce using rule 83 (whiledv -> statement whiledv .)


state 269

    (77) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT . condv add_jquad
    (79) condv -> . RBRCKT
    (80) condv -> . statement condv
    (37) statement -> . rreturn
    (38) statement -> . wwhile
    (39) statement -> . cond
    (40) statement -> . pprint
    (41) statement -> . read
    (42) statement -> . funccall
    (43) statement -> . shrtassgn
    (44) statement -> . assign
    (45) statement -> . expr
    (84) rreturn -> . RETURN expr SCOLON check_return
    (81) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LBRCKT whiledv add_wquad
    (77) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad
    (78) cond -> . IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv add_jquad
    (70) pprint -> . PRINT LPAREN printlist RPAREN SCOLON gen_print_quads
    (68) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN SCOLON
    (69) read -> . READ LPAREN ID RPAREN gen_read SCOLON
    (32) funccall -> . ID validate_fid LPAREN RPAREN SCOLON add_curr_pquad
    (33) funccall -> . ID validate_fid LPAREN fcallparams RPAREN SCOLON add_curr_pquad
    (67) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (65) assign -> . varidx add_vidx ASGN expr gen_idx_assign SCOLON
    (66) assign -> . ID ASGN expr gen_assign SCOLON
    (46) expr -> . bexp check_expr_st
    (47) expr -> . bexp OR add_oper expr check_expr_st
    (48) expr -> . bexp AND add_oper expr check_expr_st
    (95) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (49) bexp -> . asexp check_bexp_st
    (50) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (53) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (54) bexp -> . asexp GT add_oper bexp check_bexp_st
    (55) bexp -> . asexp LT add_oper bexp check_bexp_st
    (56) asexp -> . emdexp check_asexp_st
    (57) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (58) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (59) emdexp -> . pexp check_emdexp_st
    (60) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (61) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (62) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (63) pexp -> . valcall
    (64) pexp -> . LPAREN push_oper_ctx expr RPAREN pop_oper_ctx
    (85) valcall -> . funccall get_funcv
    (86) valcall -> . varidx add_vidx
    (87) valcall -> . varid add_vid
    (88) valcall -> . const save_const
    (94) varid -> . ID
    (89) const -> . CTESTR
    (90) const -> . CTEINT
    (91) const -> . CTEFLT
    (92) const -> . FALSE
    (93) const -> . TRUE
    RBRCKT          shift and go to state 237
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    READ            shift and go to state 50
    ID              shift and go to state 52
    LPAREN          shift and go to state 32
    CTESTR          shift and go to state 60
    CTEINT          shift and go to state 61
    CTEFLT          shift and go to state 62
    FALSE           shift and go to state 63
    TRUE            shift and go to state 64

    expr                           shift and go to state 45
    condv                          shift and go to state 272
    statement                      shift and go to state 238
    rreturn                        shift and go to state 37
    wwhile                         shift and go to state 38
    cond                           shift and go to state 39
    pprint                         shift and go to state 40
    read                           shift and go to state 41
    funccall                       shift and go to state 42
    shrtassgn                      shift and go to state 43
    assign                         shift and go to state 44
    varidx                         shift and go to state 51
    bexp                           shift and go to state 53
    asexp                          shift and go to state 54
    emdexp                         shift and go to state 55
    pexp                           shift and go to state 56
    valcall                        shift and go to state 57
    varid                          shift and go to state 58
    const                          shift and go to state 59

state 270

    (97) arrindex -> LBRCKT expr RBRCKT gen_vdim . arrindex
    (96) arrindex -> . empty
    (97) arrindex -> . LBRCKT expr RBRCKT gen_vdim arrindex
    (98) empty -> .
    LBRCKT          shift and go to state 242
    ASGN            reduce using rule 98 (empty -> .)
    DIV             reduce using rule 98 (empty -> .)
    MULT            reduce using rule 98 (empty -> .)
    EXP             reduce using rule 98 (empty -> .)
    SUB             reduce using rule 98 (empty -> .)
    ADD             reduce using rule 98 (empty -> .)
    GTEQ            reduce using rule 98 (empty -> .)
    LTEQ            reduce using rule 98 (empty -> .)
    NOTEQ           reduce using rule 98 (empty -> .)
    EQ              reduce using rule 98 (empty -> .)
    GT              reduce using rule 98 (empty -> .)
    LT              reduce using rule 98 (empty -> .)
    OR              reduce using rule 98 (empty -> .)
    AND             reduce using rule 98 (empty -> .)
    RCURL           reduce using rule 98 (empty -> .)
    VAR             reduce using rule 98 (empty -> .)
    RETURN          reduce using rule 98 (empty -> .)
    WHILE           reduce using rule 98 (empty -> .)
    IF              reduce using rule 98 (empty -> .)
    PRINT           reduce using rule 98 (empty -> .)
    READ            reduce using rule 98 (empty -> .)
    ID              reduce using rule 98 (empty -> .)
    LPAREN          reduce using rule 98 (empty -> .)
    CTESTR          reduce using rule 98 (empty -> .)
    CTEINT          reduce using rule 98 (empty -> .)
    CTEFLT          reduce using rule 98 (empty -> .)
    FALSE           reduce using rule 98 (empty -> .)
    TRUE            reduce using rule 98 (empty -> .)
    SCOLON          reduce using rule 98 (empty -> .)
    RPAREN          reduce using rule 98 (empty -> .)
    COMMA           reduce using rule 98 (empty -> .)
    RBRCKT          reduce using rule 98 (empty -> .)

    arrindex                       shift and go to state 273
    empty                          shift and go to state 244

state 271

    (18) dimlist -> LBRCKT CTEINT RBRCKT append_dim dimlist .
    COMMA           reduce using rule 18 (dimlist -> LBRCKT CTEINT RBRCKT append_dim dimlist .)
    SCOLON          reduce using rule 18 (dimlist -> LBRCKT CTEINT RBRCKT append_dim dimlist .)


state 272

    (77) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv . add_jquad
    (128) add_jquad -> .
    RCURL           reduce using rule 128 (add_jquad -> .)
    VAR             reduce using rule 128 (add_jquad -> .)
    RETURN          reduce using rule 128 (add_jquad -> .)
    WHILE           reduce using rule 128 (add_jquad -> .)
    IF              reduce using rule 128 (add_jquad -> .)
    PRINT           reduce using rule 128 (add_jquad -> .)
    READ            reduce using rule 128 (add_jquad -> .)
    ID              reduce using rule 128 (add_jquad -> .)
    LPAREN          reduce using rule 128 (add_jquad -> .)
    CTESTR          reduce using rule 128 (add_jquad -> .)
    CTEINT          reduce using rule 128 (add_jquad -> .)
    CTEFLT          reduce using rule 128 (add_jquad -> .)
    FALSE           reduce using rule 128 (add_jquad -> .)
    TRUE            reduce using rule 128 (add_jquad -> .)
    RBRCKT          reduce using rule 128 (add_jquad -> .)

    add_jquad                      shift and go to state 274

state 273

    (97) arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .
    ASGN            reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    DIV             reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    MULT            reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    EXP             reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    SUB             reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    ADD             reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    GTEQ            reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    LTEQ            reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    NOTEQ           reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    EQ              reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    GT              reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    LT              reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    OR              reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    AND             reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    RCURL           reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    VAR             reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    RETURN          reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    WHILE           reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    IF              reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    PRINT           reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    READ            reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    ID              reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    LPAREN          reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    CTESTR          reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    CTEINT          reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    CTEFLT          reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    FALSE           reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    TRUE            reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    SCOLON          reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    RPAREN          reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    COMMA           reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    RBRCKT          reduce using rule 97 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)


state 274

    (77) cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .
    RCURL           reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    VAR             reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    RETURN          reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    WHILE           reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    IF              reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    PRINT           reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    READ            reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    ID              reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    LPAREN          reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    CTESTR          reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    CTEINT          reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    CTEFLT          reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    FALSE           reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    TRUE            reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)
    RBRCKT          reduce using rule 77 (cond -> IF LPAREN expr RPAREN gen_cond_quad LBRCKT condv gen_egoto ELSE LBRCKT condv add_jquad .)


Conflicts:

reduce/reduce conflict in state 42 resolved using rule statement -> funccall
rejected rule (get_funcv -> <empty>) in state 42
reduce/reduce conflict in state 52 resolved using rule varid -> ID
rejected rule (validate_fid -> <empty>) in state 52
reduce/reduce conflict in state 75 resolved using rule varid -> ID
rejected rule (validate_fid -> <empty>) in state 75
Rule (validate_fid -> <empty>) is never reduced