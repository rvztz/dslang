Grammar:

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID add_pid SCOLON progitem
Rule 2     progitem -> main programdv
Rule 3     progitem -> function programdv
Rule 4     progitem -> vars programdv
Rule 5     progitem -> statement programdv
Rule 6     programdv -> empty
Rule 7     programdv -> progitem
Rule 8     main -> MAIN LPAREN RPAREN LCURL maindv
Rule 9     maindv -> RCURL
Rule 10    maindv -> statement maindv
Rule 11    maindv -> vars maindv
Rule 12    vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype
Rule 13    vtype -> TSTR
Rule 14    vtype -> TFLT
Rule 15    vtype -> TINT
Rule 16    vtype -> TBOOL
Rule 17    listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv
Rule 18    listids -> ID store_varid listdv
Rule 19    dimlist -> empty
Rule 20    dimlist -> LBRCKT CTEINT RBRCKT append_dim dimlist
Rule 21    listdv -> empty
Rule 22    listdv -> COMMA listids
Rule 23    function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
Rule 24    typefunc -> VOID
Rule 25    typefunc -> vtype
Rule 26    funcparams -> empty
Rule 27    funcparams -> params
Rule 28    params -> vtype ID save_param paramsdv
Rule 29    paramsdv -> empty
Rule 30    paramsdv -> COMMA params
Rule 31    funcstat -> RCURL
Rule 32    funcstat -> statement funcstat
Rule 33    funcstat -> vars funcstat
Rule 34    statement -> rreturn SCOLON
Rule 35    statement -> wwhile
Rule 36    statement -> cond
Rule 37    statement -> pprint SCOLON
Rule 38    statement -> read SCOLON
Rule 39    statement -> funccall SCOLON
Rule 40    statement -> shrtassgn SCOLON
Rule 41    statement -> assign SCOLON
Rule 42    statement -> expr
Rule 43    expr -> exprdv
Rule 44    exprdv -> bexp check_expr_st
Rule 45    exprdv -> bexp OR add_oper exprdv check_expr_st
Rule 46    exprdv -> bexp AND add_oper exprdv check_expr_st
Rule 47    bexp -> asexp check_bexp_st
Rule 48    bexp -> asexp GTEQ add_oper bexp check_bexp_st
Rule 49    bexp -> asexp LTEQ add_oper bexp check_bexp_st
Rule 50    bexp -> asexp NOTEQ add_oper bexp check_bexp_st
Rule 51    bexp -> asexp EQ add_oper bexp check_bexp_st
Rule 52    bexp -> asexp GT add_oper bexp check_bexp_st
Rule 53    bexp -> asexp LT add_oper bexp check_bexp_st
Rule 54    asexp -> emdexp check_asexp_st
Rule 55    asexp -> emdexp SUB add_oper asexp check_asexp_st  [precedence=left, level=1]
Rule 56    asexp -> emdexp ADD add_oper asexp check_asexp_st  [precedence=left, level=1]
Rule 57    emdexp -> pexp check_emdexp_st
Rule 58    emdexp -> pexp DIV add_oper emdexp check_emdexp_st  [precedence=left, level=2]
Rule 59    emdexp -> pexp MULT add_oper emdexp check_emdexp_st  [precedence=left, level=2]
Rule 60    emdexp -> pexp EXP add_oper emdexp check_emdexp_st
Rule 61    pexp -> funccall add_funcv
Rule 62    pexp -> varidx add_vidx
Rule 63    pexp -> ID add_vid
Rule 64    pexp -> const save_const
Rule 65    pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
Rule 66    assign -> varidx add_vidx ASGN expr gen_idx_assign
Rule 67    assign -> ID ASGN expr gen_assign
Rule 68    shrtassgn -> ID SHRT expr gen_shrt_assign
Rule 69    funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
Rule 70    fcallparams -> empty
Rule 71    fcallparams -> fcallterm fcallparamdv
Rule 72    fcallparamdv -> empty
Rule 73    fcallparamdv -> COMMA fcallparams
Rule 74    fcallterm -> ID ASGN expr add_params
Rule 75    read -> READ LPAREN varidx add_vidx gen_idxread RPAREN
Rule 76    read -> READ LPAREN ID RPAREN gen_read
Rule 77    pprint -> PRINT LPAREN printlist RPAREN gen_print_quads
Rule 78    printlist -> printerm printlistdv
Rule 79    printlistdv -> empty
Rule 80    printlistdv -> COMMA printerm
Rule 81    printerm -> CTESTR push_printct
Rule 82    printerm -> varidx add_vidx push_printidl
Rule 83    printerm -> ID push_printid
Rule 84    cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
Rule 85    cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
Rule 86    condst -> statement condstdv
Rule 87    condstdv -> empty
Rule 88    condstdv -> condst
Rule 89    wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
Rule 90    whiledv -> RCURL
Rule 91    whiledv -> statement whiledv
Rule 92    rreturn -> RETURN expr check_return
Rule 93    const -> CTESTR
Rule 94    const -> CTEINT
Rule 95    const -> CTEFLT
Rule 96    const -> FALSE
Rule 97    const -> TRUE
Rule 98    varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
Rule 99    arrindex -> empty
Rule 100   arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex
Rule 101   empty -> <empty>
Rule 102   add_pid -> <empty>
Rule 103   add_cvtype -> <empty>
Rule 104   reset_vtype -> <empty>
Rule 105   store_varid -> <empty>
Rule 106   store_arrid -> <empty>
Rule 107   append_dim -> <empty>
Rule 108   def_dims -> <empty>
Rule 109   save_const -> <empty>
Rule 110   add_vid -> <empty>
Rule 111   validate_arr -> <empty>
Rule 112   gen_vdim -> <empty>
Rule 113   add_vidx -> <empty>
Rule 114   add_oper -> <empty>
Rule 115   check_expr_st -> <empty>
Rule 116   check_bexp_st -> <empty>
Rule 117   check_asexp_st -> <empty>
Rule 118   check_emdexp_st -> <empty>
Rule 119   push_oper_ctx -> <empty>
Rule 120   pop_oper_ctx -> <empty>
Rule 121   gen_assign -> <empty>
Rule 122   gen_idx_assign -> <empty>
Rule 123   gen_shrt_assign -> <empty>
Rule 124   gen_read -> <empty>
Rule 125   gen_idxread -> <empty>
Rule 126   push_printid -> <empty>
Rule 127   push_printidl -> <empty>
Rule 128   push_printct -> <empty>
Rule 129   gen_print_quads -> <empty>
Rule 130   gen_cond_quad -> <empty>
Rule 131   add_jquad -> <empty>
Rule 132   gen_egoto -> <empty>
Rule 133   add_wpquad -> <empty>
Rule 134   gen_wquad -> <empty>
Rule 135   add_wquad -> <empty>
Rule 136   save_func -> <empty>
Rule 137   save_param -> <empty>
Rule 138   add_fqid -> <empty>
Rule 139   check_return -> <empty>
Rule 140   remove_fscope -> <empty>
Rule 141   validate_fid -> <empty>
Rule 142   add_funcv -> <empty>
Rule 143   add_params -> <empty>
Rule 144   add_curr_pquad -> <empty>

Unused terminals:

    PLOT
    FOR
    DFRAME
    TO

Terminals, with rules where they appear:

ADD                  : 56
AND                  : 46
ASGN                 : 66 67 74
COLON                : 12
COMMA                : 22 30 73 80
CTEFLT               : 95
CTEINT               : 17 20 94
CTESTR               : 81 93
DFRAME               : 
DIV                  : 58
DO                   : 89
ELSE                 : 84
EQ                   : 51
EXP                  : 60
FALSE                : 96
FCALL                : 69
FOR                  : 
FUNCTION             : 23
GT                   : 52
GTEQ                 : 48
ID                   : 1 17 18 23 28 63 67 68 69 74 76 83 98
IF                   : 84 85
LBRCKT               : 17 20 98 100
LCURL                : 8 23 84 84 85 89
LPAREN               : 8 23 65 69 75 76 77 84 85 89
LT                   : 53
LTEQ                 : 49
MAIN                 : 8
MULT                 : 59
NOTEQ                : 50
OR                   : 45
PLOT                 : 
PRINT                : 77
PROGRAM              : 1
RBRCKT               : 17 20 98 100
RCURL                : 9 31 84 84 85 90
READ                 : 75 76
RETURN               : 92
RPAREN               : 8 23 65 69 75 76 77 84 85 89
SCOLON               : 1 12 34 37 38 39 40 41
SHRT                 : 68
SUB                  : 55
TBOOL                : 16
TFLT                 : 14
TINT                 : 15
TO                   : 
TRUE                 : 97
TSTR                 : 13
VAR                  : 12
VOID                 : 24
WHILE                : 89
error                : 

Nonterminals, with rules where they appear:

add_curr_pquad       : 69
add_cvtype           : 12
add_fqid             : 23
add_funcv            : 61
add_jquad            : 84 85
add_oper             : 45 46 48 49 50 51 52 53 55 56 58 59 60
add_params           : 74
add_pid              : 1
add_vid              : 63
add_vidx             : 62 66 75 82
add_wpquad           : 89
add_wquad            : 89
append_dim           : 20
arrindex             : 98 100
asexp                : 47 48 49 50 51 52 53 55 56
assign               : 41
bexp                 : 44 45 46 48 49 50 51 52 53
check_asexp_st       : 54 55 56
check_bexp_st        : 47 48 49 50 51 52 53
check_emdexp_st      : 57 58 59 60
check_expr_st        : 44 45 46
check_return         : 92
cond                 : 36
condst               : 84 84 85 88
condstdv             : 86
const                : 64
def_dims             : 17
dimlist              : 17 20
emdexp               : 54 55 56 58 59 60
empty                : 6 19 21 26 29 70 72 79 87 99
expr                 : 42 66 67 68 74 84 85 89 92 98 100
exprdv               : 43 45 46 65
fcallparamdv         : 71
fcallparams          : 69 73
fcallterm            : 71
funccall             : 39 61
funcparams           : 23
funcstat             : 23 32 33
function             : 3
gen_assign           : 67
gen_cond_quad        : 84 85
gen_egoto            : 84
gen_idx_assign       : 66
gen_idxread          : 75
gen_print_quads      : 77
gen_read             : 76
gen_shrt_assign      : 68
gen_vdim             : 98 100
gen_wquad            : 89
listdv               : 17 18
listids              : 12 22
main                 : 2
maindv               : 8 10 11
params               : 27 30
paramsdv             : 28
pexp                 : 57 58 59 60
pop_oper_ctx         : 65
pprint               : 37
printerm             : 78 80
printlist            : 77
printlistdv          : 78
progitem             : 1 7
program              : 0
programdv            : 2 3 4 5
push_oper_ctx        : 65
push_printct         : 81
push_printid         : 83
push_printidl        : 82
read                 : 38
remove_fscope        : 23
reset_vtype          : 12
rreturn              : 34
save_const           : 64
save_func            : 23
save_param           : 28
shrtassgn            : 40
statement            : 5 10 32 86 91
store_arrid          : 17
store_varid          : 18
typefunc             : 23
validate_arr         : 98
validate_fid         : 69
varidx               : 62 66 75 82
vars                 : 4 11 33
vtype                : 12 25 28
whiledv              : 89 91
wwhile               : 35


state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID add_pid SCOLON progitem
    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .


state 2

    (1) program -> PROGRAM . ID add_pid SCOLON progitem
    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . add_pid SCOLON progitem
    (102) add_pid -> .
    SCOLON          reduce using rule 102 (add_pid -> .)

    add_pid                        shift and go to state 4

state 4

    (1) program -> PROGRAM ID add_pid . SCOLON progitem
    SCOLON          shift and go to state 5


state 5

    (1) program -> PROGRAM ID add_pid SCOLON . progitem
    (2) progitem -> . main programdv
    (3) progitem -> . function programdv
    (4) progitem -> . vars programdv
    (5) progitem -> . statement programdv
    (8) main -> . MAIN LPAREN RPAREN LCURL maindv
    (23) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    MAIN            shift and go to state 12
    FUNCTION        shift and go to state 14
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    progitem                       shift and go to state 7
    main                           shift and go to state 8
    function                       shift and go to state 9
    vars                           shift and go to state 10
    statement                      shift and go to state 11
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 6

    (69) funccall -> ID . FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> ID . SHRT expr gen_shrt_assign
    (67) assign -> ID . ASGN expr gen_assign
    (98) varidx -> ID . LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (63) pexp -> ID . add_vid
    (110) add_vid -> .
    FCALL           shift and go to state 42
    SHRT            shift and go to state 43
    ASGN            shift and go to state 44
    LBRCKT          shift and go to state 45
    DIV             reduce using rule 110 (add_vid -> .)
    MULT            reduce using rule 110 (add_vid -> .)
    EXP             reduce using rule 110 (add_vid -> .)
    SUB             reduce using rule 110 (add_vid -> .)
    ADD             reduce using rule 110 (add_vid -> .)
    GTEQ            reduce using rule 110 (add_vid -> .)
    LTEQ            reduce using rule 110 (add_vid -> .)
    NOTEQ           reduce using rule 110 (add_vid -> .)
    EQ              reduce using rule 110 (add_vid -> .)
    GT              reduce using rule 110 (add_vid -> .)
    LT              reduce using rule 110 (add_vid -> .)
    OR              reduce using rule 110 (add_vid -> .)
    AND             reduce using rule 110 (add_vid -> .)
    MAIN            reduce using rule 110 (add_vid -> .)
    FUNCTION        reduce using rule 110 (add_vid -> .)
    VAR             reduce using rule 110 (add_vid -> .)
    RETURN          reduce using rule 110 (add_vid -> .)
    WHILE           reduce using rule 110 (add_vid -> .)
    IF              reduce using rule 110 (add_vid -> .)
    PRINT           reduce using rule 110 (add_vid -> .)
    READ            reduce using rule 110 (add_vid -> .)
    ID              reduce using rule 110 (add_vid -> .)
    LPAREN          reduce using rule 110 (add_vid -> .)
    CTESTR          reduce using rule 110 (add_vid -> .)
    CTEINT          reduce using rule 110 (add_vid -> .)
    CTEFLT          reduce using rule 110 (add_vid -> .)
    FALSE           reduce using rule 110 (add_vid -> .)
    TRUE            reduce using rule 110 (add_vid -> .)
    $end            reduce using rule 110 (add_vid -> .)
    RCURL           reduce using rule 110 (add_vid -> .)

    add_vid                        shift and go to state 46

state 7

    (1) program -> PROGRAM ID add_pid SCOLON progitem .
    $end            reduce using rule 1 (program -> PROGRAM ID add_pid SCOLON progitem .)


state 8

    (2) progitem -> main . programdv
    (6) programdv -> . empty
    (7) programdv -> . progitem
    (101) empty -> .
    (2) progitem -> . main programdv
    (3) progitem -> . function programdv
    (4) progitem -> . vars programdv
    (5) progitem -> . statement programdv
    (8) main -> . MAIN LPAREN RPAREN LCURL maindv
    (23) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    $end            reduce using rule 101 (empty -> .)
    MAIN            shift and go to state 12
    FUNCTION        shift and go to state 14
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    main                           shift and go to state 8
    programdv                      shift and go to state 47
    empty                          shift and go to state 48
    progitem                       shift and go to state 49
    function                       shift and go to state 9
    vars                           shift and go to state 10
    statement                      shift and go to state 11
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 9

    (3) progitem -> function . programdv
    (6) programdv -> . empty
    (7) programdv -> . progitem
    (101) empty -> .
    (2) progitem -> . main programdv
    (3) progitem -> . function programdv
    (4) progitem -> . vars programdv
    (5) progitem -> . statement programdv
    (8) main -> . MAIN LPAREN RPAREN LCURL maindv
    (23) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    $end            reduce using rule 101 (empty -> .)
    MAIN            shift and go to state 12
    FUNCTION        shift and go to state 14
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    function                       shift and go to state 9
    programdv                      shift and go to state 50
    empty                          shift and go to state 48
    progitem                       shift and go to state 49
    main                           shift and go to state 8
    vars                           shift and go to state 10
    statement                      shift and go to state 11
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 10

    (4) progitem -> vars . programdv
    (6) programdv -> . empty
    (7) programdv -> . progitem
    (101) empty -> .
    (2) progitem -> . main programdv
    (3) progitem -> . function programdv
    (4) progitem -> . vars programdv
    (5) progitem -> . statement programdv
    (8) main -> . MAIN LPAREN RPAREN LCURL maindv
    (23) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    $end            reduce using rule 101 (empty -> .)
    MAIN            shift and go to state 12
    FUNCTION        shift and go to state 14
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    vars                           shift and go to state 10
    programdv                      shift and go to state 51
    empty                          shift and go to state 48
    progitem                       shift and go to state 49
    main                           shift and go to state 8
    function                       shift and go to state 9
    statement                      shift and go to state 11
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 11

    (5) progitem -> statement . programdv
    (6) programdv -> . empty
    (7) programdv -> . progitem
    (101) empty -> .
    (2) progitem -> . main programdv
    (3) progitem -> . function programdv
    (4) progitem -> . vars programdv
    (5) progitem -> . statement programdv
    (8) main -> . MAIN LPAREN RPAREN LCURL maindv
    (23) function -> . FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    $end            reduce using rule 101 (empty -> .)
    MAIN            shift and go to state 12
    FUNCTION        shift and go to state 14
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    statement                      shift and go to state 11
    programdv                      shift and go to state 52
    empty                          shift and go to state 48
    progitem                       shift and go to state 49
    main                           shift and go to state 8
    function                       shift and go to state 9
    vars                           shift and go to state 10
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 12

    (8) main -> MAIN . LPAREN RPAREN LCURL maindv
    LPAREN          shift and go to state 53


state 13

    (65) pexp -> LPAREN . push_oper_ctx exprdv RPAREN pop_oper_ctx
    (119) push_oper_ctx -> .
    ID              reduce using rule 119 (push_oper_ctx -> .)
    LPAREN          reduce using rule 119 (push_oper_ctx -> .)
    CTESTR          reduce using rule 119 (push_oper_ctx -> .)
    CTEINT          reduce using rule 119 (push_oper_ctx -> .)
    CTEFLT          reduce using rule 119 (push_oper_ctx -> .)
    FALSE           reduce using rule 119 (push_oper_ctx -> .)
    TRUE            reduce using rule 119 (push_oper_ctx -> .)

    push_oper_ctx                  shift and go to state 54

state 14

    (23) function -> FUNCTION . typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (24) typefunc -> . VOID
    (25) typefunc -> . vtype
    (13) vtype -> . TSTR
    (14) vtype -> . TFLT
    (15) vtype -> . TINT
    (16) vtype -> . TBOOL
    VOID            shift and go to state 56
    TSTR            shift and go to state 58
    TFLT            shift and go to state 59
    TINT            shift and go to state 60
    TBOOL           shift and go to state 61

    typefunc                       shift and go to state 55
    vtype                          shift and go to state 57

state 15

    (12) vars -> VAR . vtype add_cvtype COLON listids SCOLON reset_vtype
    (13) vtype -> . TSTR
    (14) vtype -> . TFLT
    (15) vtype -> . TINT
    (16) vtype -> . TBOOL
    TSTR            shift and go to state 58
    TFLT            shift and go to state 59
    TINT            shift and go to state 60
    TBOOL           shift and go to state 61

    vtype                          shift and go to state 62

state 16

    (34) statement -> rreturn . SCOLON
    SCOLON          shift and go to state 63


state 17

    (35) statement -> wwhile .
    MAIN            reduce using rule 35 (statement -> wwhile .)
    FUNCTION        reduce using rule 35 (statement -> wwhile .)
    VAR             reduce using rule 35 (statement -> wwhile .)
    RETURN          reduce using rule 35 (statement -> wwhile .)
    WHILE           reduce using rule 35 (statement -> wwhile .)
    IF              reduce using rule 35 (statement -> wwhile .)
    PRINT           reduce using rule 35 (statement -> wwhile .)
    READ            reduce using rule 35 (statement -> wwhile .)
    ID              reduce using rule 35 (statement -> wwhile .)
    LPAREN          reduce using rule 35 (statement -> wwhile .)
    CTESTR          reduce using rule 35 (statement -> wwhile .)
    CTEINT          reduce using rule 35 (statement -> wwhile .)
    CTEFLT          reduce using rule 35 (statement -> wwhile .)
    FALSE           reduce using rule 35 (statement -> wwhile .)
    TRUE            reduce using rule 35 (statement -> wwhile .)
    $end            reduce using rule 35 (statement -> wwhile .)
    RCURL           reduce using rule 35 (statement -> wwhile .)


state 18

    (36) statement -> cond .
    MAIN            reduce using rule 36 (statement -> cond .)
    FUNCTION        reduce using rule 36 (statement -> cond .)
    VAR             reduce using rule 36 (statement -> cond .)
    RETURN          reduce using rule 36 (statement -> cond .)
    WHILE           reduce using rule 36 (statement -> cond .)
    IF              reduce using rule 36 (statement -> cond .)
    PRINT           reduce using rule 36 (statement -> cond .)
    READ            reduce using rule 36 (statement -> cond .)
    ID              reduce using rule 36 (statement -> cond .)
    LPAREN          reduce using rule 36 (statement -> cond .)
    CTESTR          reduce using rule 36 (statement -> cond .)
    CTEINT          reduce using rule 36 (statement -> cond .)
    CTEFLT          reduce using rule 36 (statement -> cond .)
    FALSE           reduce using rule 36 (statement -> cond .)
    TRUE            reduce using rule 36 (statement -> cond .)
    $end            reduce using rule 36 (statement -> cond .)
    RCURL           reduce using rule 36 (statement -> cond .)


state 19

    (37) statement -> pprint . SCOLON
    SCOLON          shift and go to state 64


state 20

    (38) statement -> read . SCOLON
    SCOLON          shift and go to state 65


state 21

    (39) statement -> funccall . SCOLON
    (61) pexp -> funccall . add_funcv
    (142) add_funcv -> .
    SCOLON          shift and go to state 66
    DIV             reduce using rule 142 (add_funcv -> .)
    MULT            reduce using rule 142 (add_funcv -> .)
    EXP             reduce using rule 142 (add_funcv -> .)
    SUB             reduce using rule 142 (add_funcv -> .)
    ADD             reduce using rule 142 (add_funcv -> .)
    GTEQ            reduce using rule 142 (add_funcv -> .)
    LTEQ            reduce using rule 142 (add_funcv -> .)
    NOTEQ           reduce using rule 142 (add_funcv -> .)
    EQ              reduce using rule 142 (add_funcv -> .)
    GT              reduce using rule 142 (add_funcv -> .)
    LT              reduce using rule 142 (add_funcv -> .)
    OR              reduce using rule 142 (add_funcv -> .)
    AND             reduce using rule 142 (add_funcv -> .)
    MAIN            reduce using rule 142 (add_funcv -> .)
    FUNCTION        reduce using rule 142 (add_funcv -> .)
    VAR             reduce using rule 142 (add_funcv -> .)
    RETURN          reduce using rule 142 (add_funcv -> .)
    WHILE           reduce using rule 142 (add_funcv -> .)
    IF              reduce using rule 142 (add_funcv -> .)
    PRINT           reduce using rule 142 (add_funcv -> .)
    READ            reduce using rule 142 (add_funcv -> .)
    ID              reduce using rule 142 (add_funcv -> .)
    LPAREN          reduce using rule 142 (add_funcv -> .)
    CTESTR          reduce using rule 142 (add_funcv -> .)
    CTEINT          reduce using rule 142 (add_funcv -> .)
    CTEFLT          reduce using rule 142 (add_funcv -> .)
    FALSE           reduce using rule 142 (add_funcv -> .)
    TRUE            reduce using rule 142 (add_funcv -> .)
    $end            reduce using rule 142 (add_funcv -> .)
    RCURL           reduce using rule 142 (add_funcv -> .)

    add_funcv                      shift and go to state 67

state 22

    (40) statement -> shrtassgn . SCOLON
    SCOLON          shift and go to state 68


state 23

    (41) statement -> assign . SCOLON
    SCOLON          shift and go to state 69


state 24

    (42) statement -> expr .
    MAIN            reduce using rule 42 (statement -> expr .)
    FUNCTION        reduce using rule 42 (statement -> expr .)
    VAR             reduce using rule 42 (statement -> expr .)
    RETURN          reduce using rule 42 (statement -> expr .)
    WHILE           reduce using rule 42 (statement -> expr .)
    IF              reduce using rule 42 (statement -> expr .)
    PRINT           reduce using rule 42 (statement -> expr .)
    READ            reduce using rule 42 (statement -> expr .)
    ID              reduce using rule 42 (statement -> expr .)
    LPAREN          reduce using rule 42 (statement -> expr .)
    CTESTR          reduce using rule 42 (statement -> expr .)
    CTEINT          reduce using rule 42 (statement -> expr .)
    CTEFLT          reduce using rule 42 (statement -> expr .)
    FALSE           reduce using rule 42 (statement -> expr .)
    TRUE            reduce using rule 42 (statement -> expr .)
    $end            reduce using rule 42 (statement -> expr .)
    RCURL           reduce using rule 42 (statement -> expr .)


state 25

    (92) rreturn -> RETURN . expr check_return
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 70
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 26

    (89) wwhile -> WHILE . add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (133) add_wpquad -> .
    LPAREN          reduce using rule 133 (add_wpquad -> .)

    add_wpquad                     shift and go to state 74

state 27

    (84) cond -> IF . LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> IF . LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    LPAREN          shift and go to state 75


state 28

    (77) pprint -> PRINT . LPAREN printlist RPAREN gen_print_quads
    LPAREN          shift and go to state 76


state 29

    (75) read -> READ . LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> READ . LPAREN ID RPAREN gen_read
    LPAREN          shift and go to state 77


state 30

    (66) assign -> varidx . add_vidx ASGN expr gen_idx_assign
    (62) pexp -> varidx . add_vidx
    (113) add_vidx -> .
    ASGN            reduce using rule 113 (add_vidx -> .)
    DIV             reduce using rule 113 (add_vidx -> .)
    MULT            reduce using rule 113 (add_vidx -> .)
    EXP             reduce using rule 113 (add_vidx -> .)
    SUB             reduce using rule 113 (add_vidx -> .)
    ADD             reduce using rule 113 (add_vidx -> .)
    GTEQ            reduce using rule 113 (add_vidx -> .)
    LTEQ            reduce using rule 113 (add_vidx -> .)
    NOTEQ           reduce using rule 113 (add_vidx -> .)
    EQ              reduce using rule 113 (add_vidx -> .)
    GT              reduce using rule 113 (add_vidx -> .)
    LT              reduce using rule 113 (add_vidx -> .)
    OR              reduce using rule 113 (add_vidx -> .)
    AND             reduce using rule 113 (add_vidx -> .)
    MAIN            reduce using rule 113 (add_vidx -> .)
    FUNCTION        reduce using rule 113 (add_vidx -> .)
    VAR             reduce using rule 113 (add_vidx -> .)
    RETURN          reduce using rule 113 (add_vidx -> .)
    WHILE           reduce using rule 113 (add_vidx -> .)
    IF              reduce using rule 113 (add_vidx -> .)
    PRINT           reduce using rule 113 (add_vidx -> .)
    READ            reduce using rule 113 (add_vidx -> .)
    ID              reduce using rule 113 (add_vidx -> .)
    LPAREN          reduce using rule 113 (add_vidx -> .)
    CTESTR          reduce using rule 113 (add_vidx -> .)
    CTEINT          reduce using rule 113 (add_vidx -> .)
    CTEFLT          reduce using rule 113 (add_vidx -> .)
    FALSE           reduce using rule 113 (add_vidx -> .)
    TRUE            reduce using rule 113 (add_vidx -> .)
    $end            reduce using rule 113 (add_vidx -> .)
    RCURL           reduce using rule 113 (add_vidx -> .)

    add_vidx                       shift and go to state 78

state 31

    (43) expr -> exprdv .
    MAIN            reduce using rule 43 (expr -> exprdv .)
    FUNCTION        reduce using rule 43 (expr -> exprdv .)
    VAR             reduce using rule 43 (expr -> exprdv .)
    RETURN          reduce using rule 43 (expr -> exprdv .)
    WHILE           reduce using rule 43 (expr -> exprdv .)
    IF              reduce using rule 43 (expr -> exprdv .)
    PRINT           reduce using rule 43 (expr -> exprdv .)
    READ            reduce using rule 43 (expr -> exprdv .)
    ID              reduce using rule 43 (expr -> exprdv .)
    LPAREN          reduce using rule 43 (expr -> exprdv .)
    CTESTR          reduce using rule 43 (expr -> exprdv .)
    CTEINT          reduce using rule 43 (expr -> exprdv .)
    CTEFLT          reduce using rule 43 (expr -> exprdv .)
    FALSE           reduce using rule 43 (expr -> exprdv .)
    TRUE            reduce using rule 43 (expr -> exprdv .)
    $end            reduce using rule 43 (expr -> exprdv .)
    SCOLON          reduce using rule 43 (expr -> exprdv .)
    RPAREN          reduce using rule 43 (expr -> exprdv .)
    RBRCKT          reduce using rule 43 (expr -> exprdv .)
    RCURL           reduce using rule 43 (expr -> exprdv .)
    COMMA           reduce using rule 43 (expr -> exprdv .)


state 32

    (44) exprdv -> bexp . check_expr_st
    (45) exprdv -> bexp . OR add_oper exprdv check_expr_st
    (46) exprdv -> bexp . AND add_oper exprdv check_expr_st
    (115) check_expr_st -> .
    OR              shift and go to state 80
    AND             shift and go to state 81
    MAIN            reduce using rule 115 (check_expr_st -> .)
    FUNCTION        reduce using rule 115 (check_expr_st -> .)
    VAR             reduce using rule 115 (check_expr_st -> .)
    RETURN          reduce using rule 115 (check_expr_st -> .)
    WHILE           reduce using rule 115 (check_expr_st -> .)
    IF              reduce using rule 115 (check_expr_st -> .)
    PRINT           reduce using rule 115 (check_expr_st -> .)
    READ            reduce using rule 115 (check_expr_st -> .)
    ID              reduce using rule 115 (check_expr_st -> .)
    LPAREN          reduce using rule 115 (check_expr_st -> .)
    CTESTR          reduce using rule 115 (check_expr_st -> .)
    CTEINT          reduce using rule 115 (check_expr_st -> .)
    CTEFLT          reduce using rule 115 (check_expr_st -> .)
    FALSE           reduce using rule 115 (check_expr_st -> .)
    TRUE            reduce using rule 115 (check_expr_st -> .)
    $end            reduce using rule 115 (check_expr_st -> .)
    SCOLON          reduce using rule 115 (check_expr_st -> .)
    RPAREN          reduce using rule 115 (check_expr_st -> .)
    RBRCKT          reduce using rule 115 (check_expr_st -> .)
    RCURL           reduce using rule 115 (check_expr_st -> .)
    COMMA           reduce using rule 115 (check_expr_st -> .)

    check_expr_st                  shift and go to state 79

state 33

    (47) bexp -> asexp . check_bexp_st
    (48) bexp -> asexp . GTEQ add_oper bexp check_bexp_st
    (49) bexp -> asexp . LTEQ add_oper bexp check_bexp_st
    (50) bexp -> asexp . NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> asexp . EQ add_oper bexp check_bexp_st
    (52) bexp -> asexp . GT add_oper bexp check_bexp_st
    (53) bexp -> asexp . LT add_oper bexp check_bexp_st
    (116) check_bexp_st -> .
    GTEQ            shift and go to state 83
    LTEQ            shift and go to state 84
    NOTEQ           shift and go to state 85
    EQ              shift and go to state 86
    GT              shift and go to state 87
    LT              shift and go to state 88
    OR              reduce using rule 116 (check_bexp_st -> .)
    AND             reduce using rule 116 (check_bexp_st -> .)
    MAIN            reduce using rule 116 (check_bexp_st -> .)
    FUNCTION        reduce using rule 116 (check_bexp_st -> .)
    VAR             reduce using rule 116 (check_bexp_st -> .)
    RETURN          reduce using rule 116 (check_bexp_st -> .)
    WHILE           reduce using rule 116 (check_bexp_st -> .)
    IF              reduce using rule 116 (check_bexp_st -> .)
    PRINT           reduce using rule 116 (check_bexp_st -> .)
    READ            reduce using rule 116 (check_bexp_st -> .)
    ID              reduce using rule 116 (check_bexp_st -> .)
    LPAREN          reduce using rule 116 (check_bexp_st -> .)
    CTESTR          reduce using rule 116 (check_bexp_st -> .)
    CTEINT          reduce using rule 116 (check_bexp_st -> .)
    CTEFLT          reduce using rule 116 (check_bexp_st -> .)
    FALSE           reduce using rule 116 (check_bexp_st -> .)
    TRUE            reduce using rule 116 (check_bexp_st -> .)
    $end            reduce using rule 116 (check_bexp_st -> .)
    SCOLON          reduce using rule 116 (check_bexp_st -> .)
    RPAREN          reduce using rule 116 (check_bexp_st -> .)
    RBRCKT          reduce using rule 116 (check_bexp_st -> .)
    RCURL           reduce using rule 116 (check_bexp_st -> .)
    COMMA           reduce using rule 116 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 82

state 34

    (54) asexp -> emdexp . check_asexp_st
    (55) asexp -> emdexp . SUB add_oper asexp check_asexp_st
    (56) asexp -> emdexp . ADD add_oper asexp check_asexp_st
    (117) check_asexp_st -> .
    SUB             shift and go to state 90
    ADD             shift and go to state 91
    GTEQ            reduce using rule 117 (check_asexp_st -> .)
    LTEQ            reduce using rule 117 (check_asexp_st -> .)
    NOTEQ           reduce using rule 117 (check_asexp_st -> .)
    EQ              reduce using rule 117 (check_asexp_st -> .)
    GT              reduce using rule 117 (check_asexp_st -> .)
    LT              reduce using rule 117 (check_asexp_st -> .)
    OR              reduce using rule 117 (check_asexp_st -> .)
    AND             reduce using rule 117 (check_asexp_st -> .)
    MAIN            reduce using rule 117 (check_asexp_st -> .)
    FUNCTION        reduce using rule 117 (check_asexp_st -> .)
    VAR             reduce using rule 117 (check_asexp_st -> .)
    RETURN          reduce using rule 117 (check_asexp_st -> .)
    WHILE           reduce using rule 117 (check_asexp_st -> .)
    IF              reduce using rule 117 (check_asexp_st -> .)
    PRINT           reduce using rule 117 (check_asexp_st -> .)
    READ            reduce using rule 117 (check_asexp_st -> .)
    ID              reduce using rule 117 (check_asexp_st -> .)
    LPAREN          reduce using rule 117 (check_asexp_st -> .)
    CTESTR          reduce using rule 117 (check_asexp_st -> .)
    CTEINT          reduce using rule 117 (check_asexp_st -> .)
    CTEFLT          reduce using rule 117 (check_asexp_st -> .)
    FALSE           reduce using rule 117 (check_asexp_st -> .)
    TRUE            reduce using rule 117 (check_asexp_st -> .)
    $end            reduce using rule 117 (check_asexp_st -> .)
    SCOLON          reduce using rule 117 (check_asexp_st -> .)
    RPAREN          reduce using rule 117 (check_asexp_st -> .)
    RBRCKT          reduce using rule 117 (check_asexp_st -> .)
    RCURL           reduce using rule 117 (check_asexp_st -> .)
    COMMA           reduce using rule 117 (check_asexp_st -> .)

    check_asexp_st                 shift and go to state 89

state 35

    (57) emdexp -> pexp . check_emdexp_st
    (58) emdexp -> pexp . DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> pexp . MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> pexp . EXP add_oper emdexp check_emdexp_st
    (118) check_emdexp_st -> .
    DIV             shift and go to state 93
    MULT            shift and go to state 94
    EXP             shift and go to state 95
    SUB             reduce using rule 118 (check_emdexp_st -> .)
    ADD             reduce using rule 118 (check_emdexp_st -> .)
    GTEQ            reduce using rule 118 (check_emdexp_st -> .)
    LTEQ            reduce using rule 118 (check_emdexp_st -> .)
    NOTEQ           reduce using rule 118 (check_emdexp_st -> .)
    EQ              reduce using rule 118 (check_emdexp_st -> .)
    GT              reduce using rule 118 (check_emdexp_st -> .)
    LT              reduce using rule 118 (check_emdexp_st -> .)
    OR              reduce using rule 118 (check_emdexp_st -> .)
    AND             reduce using rule 118 (check_emdexp_st -> .)
    MAIN            reduce using rule 118 (check_emdexp_st -> .)
    FUNCTION        reduce using rule 118 (check_emdexp_st -> .)
    VAR             reduce using rule 118 (check_emdexp_st -> .)
    RETURN          reduce using rule 118 (check_emdexp_st -> .)
    WHILE           reduce using rule 118 (check_emdexp_st -> .)
    IF              reduce using rule 118 (check_emdexp_st -> .)
    PRINT           reduce using rule 118 (check_emdexp_st -> .)
    READ            reduce using rule 118 (check_emdexp_st -> .)
    ID              reduce using rule 118 (check_emdexp_st -> .)
    LPAREN          reduce using rule 118 (check_emdexp_st -> .)
    CTESTR          reduce using rule 118 (check_emdexp_st -> .)
    CTEINT          reduce using rule 118 (check_emdexp_st -> .)
    CTEFLT          reduce using rule 118 (check_emdexp_st -> .)
    FALSE           reduce using rule 118 (check_emdexp_st -> .)
    TRUE            reduce using rule 118 (check_emdexp_st -> .)
    $end            reduce using rule 118 (check_emdexp_st -> .)
    SCOLON          reduce using rule 118 (check_emdexp_st -> .)
    RPAREN          reduce using rule 118 (check_emdexp_st -> .)
    RBRCKT          reduce using rule 118 (check_emdexp_st -> .)
    RCURL           reduce using rule 118 (check_emdexp_st -> .)
    COMMA           reduce using rule 118 (check_emdexp_st -> .)

    check_emdexp_st                shift and go to state 92

state 36

    (64) pexp -> const . save_const
    (109) save_const -> .
    DIV             reduce using rule 109 (save_const -> .)
    MULT            reduce using rule 109 (save_const -> .)
    EXP             reduce using rule 109 (save_const -> .)
    SUB             reduce using rule 109 (save_const -> .)
    ADD             reduce using rule 109 (save_const -> .)
    GTEQ            reduce using rule 109 (save_const -> .)
    LTEQ            reduce using rule 109 (save_const -> .)
    NOTEQ           reduce using rule 109 (save_const -> .)
    EQ              reduce using rule 109 (save_const -> .)
    GT              reduce using rule 109 (save_const -> .)
    LT              reduce using rule 109 (save_const -> .)
    OR              reduce using rule 109 (save_const -> .)
    AND             reduce using rule 109 (save_const -> .)
    MAIN            reduce using rule 109 (save_const -> .)
    FUNCTION        reduce using rule 109 (save_const -> .)
    VAR             reduce using rule 109 (save_const -> .)
    RETURN          reduce using rule 109 (save_const -> .)
    WHILE           reduce using rule 109 (save_const -> .)
    IF              reduce using rule 109 (save_const -> .)
    PRINT           reduce using rule 109 (save_const -> .)
    READ            reduce using rule 109 (save_const -> .)
    ID              reduce using rule 109 (save_const -> .)
    LPAREN          reduce using rule 109 (save_const -> .)
    CTESTR          reduce using rule 109 (save_const -> .)
    CTEINT          reduce using rule 109 (save_const -> .)
    CTEFLT          reduce using rule 109 (save_const -> .)
    FALSE           reduce using rule 109 (save_const -> .)
    TRUE            reduce using rule 109 (save_const -> .)
    $end            reduce using rule 109 (save_const -> .)
    SCOLON          reduce using rule 109 (save_const -> .)
    RPAREN          reduce using rule 109 (save_const -> .)
    RBRCKT          reduce using rule 109 (save_const -> .)
    RCURL           reduce using rule 109 (save_const -> .)
    COMMA           reduce using rule 109 (save_const -> .)

    save_const                     shift and go to state 96

state 37

    (93) const -> CTESTR .
    DIV             reduce using rule 93 (const -> CTESTR .)
    MULT            reduce using rule 93 (const -> CTESTR .)
    EXP             reduce using rule 93 (const -> CTESTR .)
    SUB             reduce using rule 93 (const -> CTESTR .)
    ADD             reduce using rule 93 (const -> CTESTR .)
    GTEQ            reduce using rule 93 (const -> CTESTR .)
    LTEQ            reduce using rule 93 (const -> CTESTR .)
    NOTEQ           reduce using rule 93 (const -> CTESTR .)
    EQ              reduce using rule 93 (const -> CTESTR .)
    GT              reduce using rule 93 (const -> CTESTR .)
    LT              reduce using rule 93 (const -> CTESTR .)
    OR              reduce using rule 93 (const -> CTESTR .)
    AND             reduce using rule 93 (const -> CTESTR .)
    MAIN            reduce using rule 93 (const -> CTESTR .)
    FUNCTION        reduce using rule 93 (const -> CTESTR .)
    VAR             reduce using rule 93 (const -> CTESTR .)
    RETURN          reduce using rule 93 (const -> CTESTR .)
    WHILE           reduce using rule 93 (const -> CTESTR .)
    IF              reduce using rule 93 (const -> CTESTR .)
    PRINT           reduce using rule 93 (const -> CTESTR .)
    READ            reduce using rule 93 (const -> CTESTR .)
    ID              reduce using rule 93 (const -> CTESTR .)
    LPAREN          reduce using rule 93 (const -> CTESTR .)
    CTESTR          reduce using rule 93 (const -> CTESTR .)
    CTEINT          reduce using rule 93 (const -> CTESTR .)
    CTEFLT          reduce using rule 93 (const -> CTESTR .)
    FALSE           reduce using rule 93 (const -> CTESTR .)
    TRUE            reduce using rule 93 (const -> CTESTR .)
    $end            reduce using rule 93 (const -> CTESTR .)
    SCOLON          reduce using rule 93 (const -> CTESTR .)
    RPAREN          reduce using rule 93 (const -> CTESTR .)
    RBRCKT          reduce using rule 93 (const -> CTESTR .)
    RCURL           reduce using rule 93 (const -> CTESTR .)
    COMMA           reduce using rule 93 (const -> CTESTR .)


state 38

    (94) const -> CTEINT .
    DIV             reduce using rule 94 (const -> CTEINT .)
    MULT            reduce using rule 94 (const -> CTEINT .)
    EXP             reduce using rule 94 (const -> CTEINT .)
    SUB             reduce using rule 94 (const -> CTEINT .)
    ADD             reduce using rule 94 (const -> CTEINT .)
    GTEQ            reduce using rule 94 (const -> CTEINT .)
    LTEQ            reduce using rule 94 (const -> CTEINT .)
    NOTEQ           reduce using rule 94 (const -> CTEINT .)
    EQ              reduce using rule 94 (const -> CTEINT .)
    GT              reduce using rule 94 (const -> CTEINT .)
    LT              reduce using rule 94 (const -> CTEINT .)
    OR              reduce using rule 94 (const -> CTEINT .)
    AND             reduce using rule 94 (const -> CTEINT .)
    MAIN            reduce using rule 94 (const -> CTEINT .)
    FUNCTION        reduce using rule 94 (const -> CTEINT .)
    VAR             reduce using rule 94 (const -> CTEINT .)
    RETURN          reduce using rule 94 (const -> CTEINT .)
    WHILE           reduce using rule 94 (const -> CTEINT .)
    IF              reduce using rule 94 (const -> CTEINT .)
    PRINT           reduce using rule 94 (const -> CTEINT .)
    READ            reduce using rule 94 (const -> CTEINT .)
    ID              reduce using rule 94 (const -> CTEINT .)
    LPAREN          reduce using rule 94 (const -> CTEINT .)
    CTESTR          reduce using rule 94 (const -> CTEINT .)
    CTEINT          reduce using rule 94 (const -> CTEINT .)
    CTEFLT          reduce using rule 94 (const -> CTEINT .)
    FALSE           reduce using rule 94 (const -> CTEINT .)
    TRUE            reduce using rule 94 (const -> CTEINT .)
    $end            reduce using rule 94 (const -> CTEINT .)
    SCOLON          reduce using rule 94 (const -> CTEINT .)
    RPAREN          reduce using rule 94 (const -> CTEINT .)
    RBRCKT          reduce using rule 94 (const -> CTEINT .)
    RCURL           reduce using rule 94 (const -> CTEINT .)
    COMMA           reduce using rule 94 (const -> CTEINT .)


state 39

    (95) const -> CTEFLT .
    DIV             reduce using rule 95 (const -> CTEFLT .)
    MULT            reduce using rule 95 (const -> CTEFLT .)
    EXP             reduce using rule 95 (const -> CTEFLT .)
    SUB             reduce using rule 95 (const -> CTEFLT .)
    ADD             reduce using rule 95 (const -> CTEFLT .)
    GTEQ            reduce using rule 95 (const -> CTEFLT .)
    LTEQ            reduce using rule 95 (const -> CTEFLT .)
    NOTEQ           reduce using rule 95 (const -> CTEFLT .)
    EQ              reduce using rule 95 (const -> CTEFLT .)
    GT              reduce using rule 95 (const -> CTEFLT .)
    LT              reduce using rule 95 (const -> CTEFLT .)
    OR              reduce using rule 95 (const -> CTEFLT .)
    AND             reduce using rule 95 (const -> CTEFLT .)
    MAIN            reduce using rule 95 (const -> CTEFLT .)
    FUNCTION        reduce using rule 95 (const -> CTEFLT .)
    VAR             reduce using rule 95 (const -> CTEFLT .)
    RETURN          reduce using rule 95 (const -> CTEFLT .)
    WHILE           reduce using rule 95 (const -> CTEFLT .)
    IF              reduce using rule 95 (const -> CTEFLT .)
    PRINT           reduce using rule 95 (const -> CTEFLT .)
    READ            reduce using rule 95 (const -> CTEFLT .)
    ID              reduce using rule 95 (const -> CTEFLT .)
    LPAREN          reduce using rule 95 (const -> CTEFLT .)
    CTESTR          reduce using rule 95 (const -> CTEFLT .)
    CTEINT          reduce using rule 95 (const -> CTEFLT .)
    CTEFLT          reduce using rule 95 (const -> CTEFLT .)
    FALSE           reduce using rule 95 (const -> CTEFLT .)
    TRUE            reduce using rule 95 (const -> CTEFLT .)
    $end            reduce using rule 95 (const -> CTEFLT .)
    SCOLON          reduce using rule 95 (const -> CTEFLT .)
    RPAREN          reduce using rule 95 (const -> CTEFLT .)
    RBRCKT          reduce using rule 95 (const -> CTEFLT .)
    RCURL           reduce using rule 95 (const -> CTEFLT .)
    COMMA           reduce using rule 95 (const -> CTEFLT .)


state 40

    (96) const -> FALSE .
    DIV             reduce using rule 96 (const -> FALSE .)
    MULT            reduce using rule 96 (const -> FALSE .)
    EXP             reduce using rule 96 (const -> FALSE .)
    SUB             reduce using rule 96 (const -> FALSE .)
    ADD             reduce using rule 96 (const -> FALSE .)
    GTEQ            reduce using rule 96 (const -> FALSE .)
    LTEQ            reduce using rule 96 (const -> FALSE .)
    NOTEQ           reduce using rule 96 (const -> FALSE .)
    EQ              reduce using rule 96 (const -> FALSE .)
    GT              reduce using rule 96 (const -> FALSE .)
    LT              reduce using rule 96 (const -> FALSE .)
    OR              reduce using rule 96 (const -> FALSE .)
    AND             reduce using rule 96 (const -> FALSE .)
    MAIN            reduce using rule 96 (const -> FALSE .)
    FUNCTION        reduce using rule 96 (const -> FALSE .)
    VAR             reduce using rule 96 (const -> FALSE .)
    RETURN          reduce using rule 96 (const -> FALSE .)
    WHILE           reduce using rule 96 (const -> FALSE .)
    IF              reduce using rule 96 (const -> FALSE .)
    PRINT           reduce using rule 96 (const -> FALSE .)
    READ            reduce using rule 96 (const -> FALSE .)
    ID              reduce using rule 96 (const -> FALSE .)
    LPAREN          reduce using rule 96 (const -> FALSE .)
    CTESTR          reduce using rule 96 (const -> FALSE .)
    CTEINT          reduce using rule 96 (const -> FALSE .)
    CTEFLT          reduce using rule 96 (const -> FALSE .)
    FALSE           reduce using rule 96 (const -> FALSE .)
    TRUE            reduce using rule 96 (const -> FALSE .)
    $end            reduce using rule 96 (const -> FALSE .)
    SCOLON          reduce using rule 96 (const -> FALSE .)
    RPAREN          reduce using rule 96 (const -> FALSE .)
    RBRCKT          reduce using rule 96 (const -> FALSE .)
    RCURL           reduce using rule 96 (const -> FALSE .)
    COMMA           reduce using rule 96 (const -> FALSE .)


state 41

    (97) const -> TRUE .
    DIV             reduce using rule 97 (const -> TRUE .)
    MULT            reduce using rule 97 (const -> TRUE .)
    EXP             reduce using rule 97 (const -> TRUE .)
    SUB             reduce using rule 97 (const -> TRUE .)
    ADD             reduce using rule 97 (const -> TRUE .)
    GTEQ            reduce using rule 97 (const -> TRUE .)
    LTEQ            reduce using rule 97 (const -> TRUE .)
    NOTEQ           reduce using rule 97 (const -> TRUE .)
    EQ              reduce using rule 97 (const -> TRUE .)
    GT              reduce using rule 97 (const -> TRUE .)
    LT              reduce using rule 97 (const -> TRUE .)
    OR              reduce using rule 97 (const -> TRUE .)
    AND             reduce using rule 97 (const -> TRUE .)
    MAIN            reduce using rule 97 (const -> TRUE .)
    FUNCTION        reduce using rule 97 (const -> TRUE .)
    VAR             reduce using rule 97 (const -> TRUE .)
    RETURN          reduce using rule 97 (const -> TRUE .)
    WHILE           reduce using rule 97 (const -> TRUE .)
    IF              reduce using rule 97 (const -> TRUE .)
    PRINT           reduce using rule 97 (const -> TRUE .)
    READ            reduce using rule 97 (const -> TRUE .)
    ID              reduce using rule 97 (const -> TRUE .)
    LPAREN          reduce using rule 97 (const -> TRUE .)
    CTESTR          reduce using rule 97 (const -> TRUE .)
    CTEINT          reduce using rule 97 (const -> TRUE .)
    CTEFLT          reduce using rule 97 (const -> TRUE .)
    FALSE           reduce using rule 97 (const -> TRUE .)
    TRUE            reduce using rule 97 (const -> TRUE .)
    $end            reduce using rule 97 (const -> TRUE .)
    SCOLON          reduce using rule 97 (const -> TRUE .)
    RPAREN          reduce using rule 97 (const -> TRUE .)
    RBRCKT          reduce using rule 97 (const -> TRUE .)
    RCURL           reduce using rule 97 (const -> TRUE .)
    COMMA           reduce using rule 97 (const -> TRUE .)


state 42

    (69) funccall -> ID FCALL . LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    LPAREN          shift and go to state 97


state 43

    (68) shrtassgn -> ID SHRT . expr gen_shrt_assign
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 98
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 44

    (67) assign -> ID ASGN . expr gen_assign
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 99
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 45

    (98) varidx -> ID LBRCKT . validate_arr expr RBRCKT gen_vdim arrindex
    (111) validate_arr -> .
    ID              reduce using rule 111 (validate_arr -> .)
    LPAREN          reduce using rule 111 (validate_arr -> .)
    CTESTR          reduce using rule 111 (validate_arr -> .)
    CTEINT          reduce using rule 111 (validate_arr -> .)
    CTEFLT          reduce using rule 111 (validate_arr -> .)
    FALSE           reduce using rule 111 (validate_arr -> .)
    TRUE            reduce using rule 111 (validate_arr -> .)

    validate_arr                   shift and go to state 100

state 46

    (63) pexp -> ID add_vid .
    DIV             reduce using rule 63 (pexp -> ID add_vid .)
    MULT            reduce using rule 63 (pexp -> ID add_vid .)
    EXP             reduce using rule 63 (pexp -> ID add_vid .)
    SUB             reduce using rule 63 (pexp -> ID add_vid .)
    ADD             reduce using rule 63 (pexp -> ID add_vid .)
    GTEQ            reduce using rule 63 (pexp -> ID add_vid .)
    LTEQ            reduce using rule 63 (pexp -> ID add_vid .)
    NOTEQ           reduce using rule 63 (pexp -> ID add_vid .)
    EQ              reduce using rule 63 (pexp -> ID add_vid .)
    GT              reduce using rule 63 (pexp -> ID add_vid .)
    LT              reduce using rule 63 (pexp -> ID add_vid .)
    OR              reduce using rule 63 (pexp -> ID add_vid .)
    AND             reduce using rule 63 (pexp -> ID add_vid .)
    MAIN            reduce using rule 63 (pexp -> ID add_vid .)
    FUNCTION        reduce using rule 63 (pexp -> ID add_vid .)
    VAR             reduce using rule 63 (pexp -> ID add_vid .)
    RETURN          reduce using rule 63 (pexp -> ID add_vid .)
    WHILE           reduce using rule 63 (pexp -> ID add_vid .)
    IF              reduce using rule 63 (pexp -> ID add_vid .)
    PRINT           reduce using rule 63 (pexp -> ID add_vid .)
    READ            reduce using rule 63 (pexp -> ID add_vid .)
    ID              reduce using rule 63 (pexp -> ID add_vid .)
    LPAREN          reduce using rule 63 (pexp -> ID add_vid .)
    CTESTR          reduce using rule 63 (pexp -> ID add_vid .)
    CTEINT          reduce using rule 63 (pexp -> ID add_vid .)
    CTEFLT          reduce using rule 63 (pexp -> ID add_vid .)
    FALSE           reduce using rule 63 (pexp -> ID add_vid .)
    TRUE            reduce using rule 63 (pexp -> ID add_vid .)
    $end            reduce using rule 63 (pexp -> ID add_vid .)
    SCOLON          reduce using rule 63 (pexp -> ID add_vid .)
    RPAREN          reduce using rule 63 (pexp -> ID add_vid .)
    RBRCKT          reduce using rule 63 (pexp -> ID add_vid .)
    RCURL           reduce using rule 63 (pexp -> ID add_vid .)
    COMMA           reduce using rule 63 (pexp -> ID add_vid .)


state 47

    (2) progitem -> main programdv .
    $end            reduce using rule 2 (progitem -> main programdv .)


state 48

    (6) programdv -> empty .
    $end            reduce using rule 6 (programdv -> empty .)


state 49

    (7) programdv -> progitem .
    $end            reduce using rule 7 (programdv -> progitem .)


state 50

    (3) progitem -> function programdv .
    $end            reduce using rule 3 (progitem -> function programdv .)


state 51

    (4) progitem -> vars programdv .
    $end            reduce using rule 4 (progitem -> vars programdv .)


state 52

    (5) progitem -> statement programdv .
    $end            reduce using rule 5 (progitem -> statement programdv .)


state 53

    (8) main -> MAIN LPAREN . RPAREN LCURL maindv
    RPAREN          shift and go to state 101


state 54

    (65) pexp -> LPAREN push_oper_ctx . exprdv RPAREN pop_oper_ctx
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    exprdv                         shift and go to state 102
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 55

    (23) function -> FUNCTION typefunc . ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    ID              shift and go to state 103


state 56

    (24) typefunc -> VOID .
    ID              reduce using rule 24 (typefunc -> VOID .)


state 57

    (25) typefunc -> vtype .
    ID              reduce using rule 25 (typefunc -> vtype .)


state 58

    (13) vtype -> TSTR .
    ID              reduce using rule 13 (vtype -> TSTR .)
    COLON           reduce using rule 13 (vtype -> TSTR .)


state 59

    (14) vtype -> TFLT .
    ID              reduce using rule 14 (vtype -> TFLT .)
    COLON           reduce using rule 14 (vtype -> TFLT .)


state 60

    (15) vtype -> TINT .
    ID              reduce using rule 15 (vtype -> TINT .)
    COLON           reduce using rule 15 (vtype -> TINT .)


state 61

    (16) vtype -> TBOOL .
    ID              reduce using rule 16 (vtype -> TBOOL .)
    COLON           reduce using rule 16 (vtype -> TBOOL .)


state 62

    (12) vars -> VAR vtype . add_cvtype COLON listids SCOLON reset_vtype
    (103) add_cvtype -> .
    COLON           reduce using rule 103 (add_cvtype -> .)

    add_cvtype                     shift and go to state 104

state 63

    (34) statement -> rreturn SCOLON .
    MAIN            reduce using rule 34 (statement -> rreturn SCOLON .)
    FUNCTION        reduce using rule 34 (statement -> rreturn SCOLON .)
    VAR             reduce using rule 34 (statement -> rreturn SCOLON .)
    RETURN          reduce using rule 34 (statement -> rreturn SCOLON .)
    WHILE           reduce using rule 34 (statement -> rreturn SCOLON .)
    IF              reduce using rule 34 (statement -> rreturn SCOLON .)
    PRINT           reduce using rule 34 (statement -> rreturn SCOLON .)
    READ            reduce using rule 34 (statement -> rreturn SCOLON .)
    ID              reduce using rule 34 (statement -> rreturn SCOLON .)
    LPAREN          reduce using rule 34 (statement -> rreturn SCOLON .)
    CTESTR          reduce using rule 34 (statement -> rreturn SCOLON .)
    CTEINT          reduce using rule 34 (statement -> rreturn SCOLON .)
    CTEFLT          reduce using rule 34 (statement -> rreturn SCOLON .)
    FALSE           reduce using rule 34 (statement -> rreturn SCOLON .)
    TRUE            reduce using rule 34 (statement -> rreturn SCOLON .)
    $end            reduce using rule 34 (statement -> rreturn SCOLON .)
    RCURL           reduce using rule 34 (statement -> rreturn SCOLON .)


state 64

    (37) statement -> pprint SCOLON .
    MAIN            reduce using rule 37 (statement -> pprint SCOLON .)
    FUNCTION        reduce using rule 37 (statement -> pprint SCOLON .)
    VAR             reduce using rule 37 (statement -> pprint SCOLON .)
    RETURN          reduce using rule 37 (statement -> pprint SCOLON .)
    WHILE           reduce using rule 37 (statement -> pprint SCOLON .)
    IF              reduce using rule 37 (statement -> pprint SCOLON .)
    PRINT           reduce using rule 37 (statement -> pprint SCOLON .)
    READ            reduce using rule 37 (statement -> pprint SCOLON .)
    ID              reduce using rule 37 (statement -> pprint SCOLON .)
    LPAREN          reduce using rule 37 (statement -> pprint SCOLON .)
    CTESTR          reduce using rule 37 (statement -> pprint SCOLON .)
    CTEINT          reduce using rule 37 (statement -> pprint SCOLON .)
    CTEFLT          reduce using rule 37 (statement -> pprint SCOLON .)
    FALSE           reduce using rule 37 (statement -> pprint SCOLON .)
    TRUE            reduce using rule 37 (statement -> pprint SCOLON .)
    $end            reduce using rule 37 (statement -> pprint SCOLON .)
    RCURL           reduce using rule 37 (statement -> pprint SCOLON .)


state 65

    (38) statement -> read SCOLON .
    MAIN            reduce using rule 38 (statement -> read SCOLON .)
    FUNCTION        reduce using rule 38 (statement -> read SCOLON .)
    VAR             reduce using rule 38 (statement -> read SCOLON .)
    RETURN          reduce using rule 38 (statement -> read SCOLON .)
    WHILE           reduce using rule 38 (statement -> read SCOLON .)
    IF              reduce using rule 38 (statement -> read SCOLON .)
    PRINT           reduce using rule 38 (statement -> read SCOLON .)
    READ            reduce using rule 38 (statement -> read SCOLON .)
    ID              reduce using rule 38 (statement -> read SCOLON .)
    LPAREN          reduce using rule 38 (statement -> read SCOLON .)
    CTESTR          reduce using rule 38 (statement -> read SCOLON .)
    CTEINT          reduce using rule 38 (statement -> read SCOLON .)
    CTEFLT          reduce using rule 38 (statement -> read SCOLON .)
    FALSE           reduce using rule 38 (statement -> read SCOLON .)
    TRUE            reduce using rule 38 (statement -> read SCOLON .)
    $end            reduce using rule 38 (statement -> read SCOLON .)
    RCURL           reduce using rule 38 (statement -> read SCOLON .)


state 66

    (39) statement -> funccall SCOLON .
    MAIN            reduce using rule 39 (statement -> funccall SCOLON .)
    FUNCTION        reduce using rule 39 (statement -> funccall SCOLON .)
    VAR             reduce using rule 39 (statement -> funccall SCOLON .)
    RETURN          reduce using rule 39 (statement -> funccall SCOLON .)
    WHILE           reduce using rule 39 (statement -> funccall SCOLON .)
    IF              reduce using rule 39 (statement -> funccall SCOLON .)
    PRINT           reduce using rule 39 (statement -> funccall SCOLON .)
    READ            reduce using rule 39 (statement -> funccall SCOLON .)
    ID              reduce using rule 39 (statement -> funccall SCOLON .)
    LPAREN          reduce using rule 39 (statement -> funccall SCOLON .)
    CTESTR          reduce using rule 39 (statement -> funccall SCOLON .)
    CTEINT          reduce using rule 39 (statement -> funccall SCOLON .)
    CTEFLT          reduce using rule 39 (statement -> funccall SCOLON .)
    FALSE           reduce using rule 39 (statement -> funccall SCOLON .)
    TRUE            reduce using rule 39 (statement -> funccall SCOLON .)
    $end            reduce using rule 39 (statement -> funccall SCOLON .)
    RCURL           reduce using rule 39 (statement -> funccall SCOLON .)


state 67

    (61) pexp -> funccall add_funcv .
    DIV             reduce using rule 61 (pexp -> funccall add_funcv .)
    MULT            reduce using rule 61 (pexp -> funccall add_funcv .)
    EXP             reduce using rule 61 (pexp -> funccall add_funcv .)
    SUB             reduce using rule 61 (pexp -> funccall add_funcv .)
    ADD             reduce using rule 61 (pexp -> funccall add_funcv .)
    GTEQ            reduce using rule 61 (pexp -> funccall add_funcv .)
    LTEQ            reduce using rule 61 (pexp -> funccall add_funcv .)
    NOTEQ           reduce using rule 61 (pexp -> funccall add_funcv .)
    EQ              reduce using rule 61 (pexp -> funccall add_funcv .)
    GT              reduce using rule 61 (pexp -> funccall add_funcv .)
    LT              reduce using rule 61 (pexp -> funccall add_funcv .)
    OR              reduce using rule 61 (pexp -> funccall add_funcv .)
    AND             reduce using rule 61 (pexp -> funccall add_funcv .)
    MAIN            reduce using rule 61 (pexp -> funccall add_funcv .)
    FUNCTION        reduce using rule 61 (pexp -> funccall add_funcv .)
    VAR             reduce using rule 61 (pexp -> funccall add_funcv .)
    RETURN          reduce using rule 61 (pexp -> funccall add_funcv .)
    WHILE           reduce using rule 61 (pexp -> funccall add_funcv .)
    IF              reduce using rule 61 (pexp -> funccall add_funcv .)
    PRINT           reduce using rule 61 (pexp -> funccall add_funcv .)
    READ            reduce using rule 61 (pexp -> funccall add_funcv .)
    ID              reduce using rule 61 (pexp -> funccall add_funcv .)
    LPAREN          reduce using rule 61 (pexp -> funccall add_funcv .)
    CTESTR          reduce using rule 61 (pexp -> funccall add_funcv .)
    CTEINT          reduce using rule 61 (pexp -> funccall add_funcv .)
    CTEFLT          reduce using rule 61 (pexp -> funccall add_funcv .)
    FALSE           reduce using rule 61 (pexp -> funccall add_funcv .)
    TRUE            reduce using rule 61 (pexp -> funccall add_funcv .)
    $end            reduce using rule 61 (pexp -> funccall add_funcv .)
    SCOLON          reduce using rule 61 (pexp -> funccall add_funcv .)
    RPAREN          reduce using rule 61 (pexp -> funccall add_funcv .)
    RBRCKT          reduce using rule 61 (pexp -> funccall add_funcv .)
    RCURL           reduce using rule 61 (pexp -> funccall add_funcv .)
    COMMA           reduce using rule 61 (pexp -> funccall add_funcv .)


state 68

    (40) statement -> shrtassgn SCOLON .
    MAIN            reduce using rule 40 (statement -> shrtassgn SCOLON .)
    FUNCTION        reduce using rule 40 (statement -> shrtassgn SCOLON .)
    VAR             reduce using rule 40 (statement -> shrtassgn SCOLON .)
    RETURN          reduce using rule 40 (statement -> shrtassgn SCOLON .)
    WHILE           reduce using rule 40 (statement -> shrtassgn SCOLON .)
    IF              reduce using rule 40 (statement -> shrtassgn SCOLON .)
    PRINT           reduce using rule 40 (statement -> shrtassgn SCOLON .)
    READ            reduce using rule 40 (statement -> shrtassgn SCOLON .)
    ID              reduce using rule 40 (statement -> shrtassgn SCOLON .)
    LPAREN          reduce using rule 40 (statement -> shrtassgn SCOLON .)
    CTESTR          reduce using rule 40 (statement -> shrtassgn SCOLON .)
    CTEINT          reduce using rule 40 (statement -> shrtassgn SCOLON .)
    CTEFLT          reduce using rule 40 (statement -> shrtassgn SCOLON .)
    FALSE           reduce using rule 40 (statement -> shrtassgn SCOLON .)
    TRUE            reduce using rule 40 (statement -> shrtassgn SCOLON .)
    $end            reduce using rule 40 (statement -> shrtassgn SCOLON .)
    RCURL           reduce using rule 40 (statement -> shrtassgn SCOLON .)


state 69

    (41) statement -> assign SCOLON .
    MAIN            reduce using rule 41 (statement -> assign SCOLON .)
    FUNCTION        reduce using rule 41 (statement -> assign SCOLON .)
    VAR             reduce using rule 41 (statement -> assign SCOLON .)
    RETURN          reduce using rule 41 (statement -> assign SCOLON .)
    WHILE           reduce using rule 41 (statement -> assign SCOLON .)
    IF              reduce using rule 41 (statement -> assign SCOLON .)
    PRINT           reduce using rule 41 (statement -> assign SCOLON .)
    READ            reduce using rule 41 (statement -> assign SCOLON .)
    ID              reduce using rule 41 (statement -> assign SCOLON .)
    LPAREN          reduce using rule 41 (statement -> assign SCOLON .)
    CTESTR          reduce using rule 41 (statement -> assign SCOLON .)
    CTEINT          reduce using rule 41 (statement -> assign SCOLON .)
    CTEFLT          reduce using rule 41 (statement -> assign SCOLON .)
    FALSE           reduce using rule 41 (statement -> assign SCOLON .)
    TRUE            reduce using rule 41 (statement -> assign SCOLON .)
    $end            reduce using rule 41 (statement -> assign SCOLON .)
    RCURL           reduce using rule 41 (statement -> assign SCOLON .)


state 70

    (92) rreturn -> RETURN expr . check_return
    (139) check_return -> .
    SCOLON          reduce using rule 139 (check_return -> .)

    check_return                   shift and go to state 105

state 71

    (61) pexp -> funccall . add_funcv
    (142) add_funcv -> .
    DIV             reduce using rule 142 (add_funcv -> .)
    MULT            reduce using rule 142 (add_funcv -> .)
    EXP             reduce using rule 142 (add_funcv -> .)
    SUB             reduce using rule 142 (add_funcv -> .)
    ADD             reduce using rule 142 (add_funcv -> .)
    GTEQ            reduce using rule 142 (add_funcv -> .)
    LTEQ            reduce using rule 142 (add_funcv -> .)
    NOTEQ           reduce using rule 142 (add_funcv -> .)
    EQ              reduce using rule 142 (add_funcv -> .)
    GT              reduce using rule 142 (add_funcv -> .)
    LT              reduce using rule 142 (add_funcv -> .)
    OR              reduce using rule 142 (add_funcv -> .)
    AND             reduce using rule 142 (add_funcv -> .)
    SCOLON          reduce using rule 142 (add_funcv -> .)
    RPAREN          reduce using rule 142 (add_funcv -> .)
    RBRCKT          reduce using rule 142 (add_funcv -> .)
    MAIN            reduce using rule 142 (add_funcv -> .)
    FUNCTION        reduce using rule 142 (add_funcv -> .)
    VAR             reduce using rule 142 (add_funcv -> .)
    RETURN          reduce using rule 142 (add_funcv -> .)
    WHILE           reduce using rule 142 (add_funcv -> .)
    IF              reduce using rule 142 (add_funcv -> .)
    PRINT           reduce using rule 142 (add_funcv -> .)
    READ            reduce using rule 142 (add_funcv -> .)
    ID              reduce using rule 142 (add_funcv -> .)
    LPAREN          reduce using rule 142 (add_funcv -> .)
    CTESTR          reduce using rule 142 (add_funcv -> .)
    CTEINT          reduce using rule 142 (add_funcv -> .)
    CTEFLT          reduce using rule 142 (add_funcv -> .)
    FALSE           reduce using rule 142 (add_funcv -> .)
    TRUE            reduce using rule 142 (add_funcv -> .)
    $end            reduce using rule 142 (add_funcv -> .)
    RCURL           reduce using rule 142 (add_funcv -> .)
    COMMA           reduce using rule 142 (add_funcv -> .)

    add_funcv                      shift and go to state 67

state 72

    (62) pexp -> varidx . add_vidx
    (113) add_vidx -> .
    DIV             reduce using rule 113 (add_vidx -> .)
    MULT            reduce using rule 113 (add_vidx -> .)
    EXP             reduce using rule 113 (add_vidx -> .)
    SUB             reduce using rule 113 (add_vidx -> .)
    ADD             reduce using rule 113 (add_vidx -> .)
    GTEQ            reduce using rule 113 (add_vidx -> .)
    LTEQ            reduce using rule 113 (add_vidx -> .)
    NOTEQ           reduce using rule 113 (add_vidx -> .)
    EQ              reduce using rule 113 (add_vidx -> .)
    GT              reduce using rule 113 (add_vidx -> .)
    LT              reduce using rule 113 (add_vidx -> .)
    OR              reduce using rule 113 (add_vidx -> .)
    AND             reduce using rule 113 (add_vidx -> .)
    SCOLON          reduce using rule 113 (add_vidx -> .)
    RPAREN          reduce using rule 113 (add_vidx -> .)
    RBRCKT          reduce using rule 113 (add_vidx -> .)
    MAIN            reduce using rule 113 (add_vidx -> .)
    FUNCTION        reduce using rule 113 (add_vidx -> .)
    VAR             reduce using rule 113 (add_vidx -> .)
    RETURN          reduce using rule 113 (add_vidx -> .)
    WHILE           reduce using rule 113 (add_vidx -> .)
    IF              reduce using rule 113 (add_vidx -> .)
    PRINT           reduce using rule 113 (add_vidx -> .)
    READ            reduce using rule 113 (add_vidx -> .)
    ID              reduce using rule 113 (add_vidx -> .)
    LPAREN          reduce using rule 113 (add_vidx -> .)
    CTESTR          reduce using rule 113 (add_vidx -> .)
    CTEINT          reduce using rule 113 (add_vidx -> .)
    CTEFLT          reduce using rule 113 (add_vidx -> .)
    FALSE           reduce using rule 113 (add_vidx -> .)
    TRUE            reduce using rule 113 (add_vidx -> .)
    $end            reduce using rule 113 (add_vidx -> .)
    RCURL           reduce using rule 113 (add_vidx -> .)
    COMMA           reduce using rule 113 (add_vidx -> .)

    add_vidx                       shift and go to state 106

state 73

    (63) pexp -> ID . add_vid
    (69) funccall -> ID . FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> ID . LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (110) add_vid -> .
    FCALL           shift and go to state 42
    LBRCKT          shift and go to state 45
    DIV             reduce using rule 110 (add_vid -> .)
    MULT            reduce using rule 110 (add_vid -> .)
    EXP             reduce using rule 110 (add_vid -> .)
    SUB             reduce using rule 110 (add_vid -> .)
    ADD             reduce using rule 110 (add_vid -> .)
    GTEQ            reduce using rule 110 (add_vid -> .)
    LTEQ            reduce using rule 110 (add_vid -> .)
    NOTEQ           reduce using rule 110 (add_vid -> .)
    EQ              reduce using rule 110 (add_vid -> .)
    GT              reduce using rule 110 (add_vid -> .)
    LT              reduce using rule 110 (add_vid -> .)
    OR              reduce using rule 110 (add_vid -> .)
    AND             reduce using rule 110 (add_vid -> .)
    SCOLON          reduce using rule 110 (add_vid -> .)
    RPAREN          reduce using rule 110 (add_vid -> .)
    RBRCKT          reduce using rule 110 (add_vid -> .)
    MAIN            reduce using rule 110 (add_vid -> .)
    FUNCTION        reduce using rule 110 (add_vid -> .)
    VAR             reduce using rule 110 (add_vid -> .)
    RETURN          reduce using rule 110 (add_vid -> .)
    WHILE           reduce using rule 110 (add_vid -> .)
    IF              reduce using rule 110 (add_vid -> .)
    PRINT           reduce using rule 110 (add_vid -> .)
    READ            reduce using rule 110 (add_vid -> .)
    ID              reduce using rule 110 (add_vid -> .)
    LPAREN          reduce using rule 110 (add_vid -> .)
    CTESTR          reduce using rule 110 (add_vid -> .)
    CTEINT          reduce using rule 110 (add_vid -> .)
    CTEFLT          reduce using rule 110 (add_vid -> .)
    FALSE           reduce using rule 110 (add_vid -> .)
    TRUE            reduce using rule 110 (add_vid -> .)
    $end            reduce using rule 110 (add_vid -> .)
    RCURL           reduce using rule 110 (add_vid -> .)
    COMMA           reduce using rule 110 (add_vid -> .)

    add_vid                        shift and go to state 46

state 74

    (89) wwhile -> WHILE add_wpquad . LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    LPAREN          shift and go to state 107


state 75

    (84) cond -> IF LPAREN . expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> IF LPAREN . expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 108
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 76

    (77) pprint -> PRINT LPAREN . printlist RPAREN gen_print_quads
    (78) printlist -> . printerm printlistdv
    (81) printerm -> . CTESTR push_printct
    (82) printerm -> . varidx add_vidx push_printidl
    (83) printerm -> . ID push_printid
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    CTESTR          shift and go to state 111
    ID              shift and go to state 113

    printlist                      shift and go to state 109
    printerm                       shift and go to state 110
    varidx                         shift and go to state 112

state 77

    (75) read -> READ LPAREN . varidx add_vidx gen_idxread RPAREN
    (76) read -> READ LPAREN . ID RPAREN gen_read
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    ID              shift and go to state 115

    varidx                         shift and go to state 114

state 78

    (66) assign -> varidx add_vidx . ASGN expr gen_idx_assign
    (62) pexp -> varidx add_vidx .
    ASGN            shift and go to state 116
    DIV             reduce using rule 62 (pexp -> varidx add_vidx .)
    MULT            reduce using rule 62 (pexp -> varidx add_vidx .)
    EXP             reduce using rule 62 (pexp -> varidx add_vidx .)
    SUB             reduce using rule 62 (pexp -> varidx add_vidx .)
    ADD             reduce using rule 62 (pexp -> varidx add_vidx .)
    GTEQ            reduce using rule 62 (pexp -> varidx add_vidx .)
    LTEQ            reduce using rule 62 (pexp -> varidx add_vidx .)
    NOTEQ           reduce using rule 62 (pexp -> varidx add_vidx .)
    EQ              reduce using rule 62 (pexp -> varidx add_vidx .)
    GT              reduce using rule 62 (pexp -> varidx add_vidx .)
    LT              reduce using rule 62 (pexp -> varidx add_vidx .)
    OR              reduce using rule 62 (pexp -> varidx add_vidx .)
    AND             reduce using rule 62 (pexp -> varidx add_vidx .)
    MAIN            reduce using rule 62 (pexp -> varidx add_vidx .)
    FUNCTION        reduce using rule 62 (pexp -> varidx add_vidx .)
    VAR             reduce using rule 62 (pexp -> varidx add_vidx .)
    RETURN          reduce using rule 62 (pexp -> varidx add_vidx .)
    WHILE           reduce using rule 62 (pexp -> varidx add_vidx .)
    IF              reduce using rule 62 (pexp -> varidx add_vidx .)
    PRINT           reduce using rule 62 (pexp -> varidx add_vidx .)
    READ            reduce using rule 62 (pexp -> varidx add_vidx .)
    ID              reduce using rule 62 (pexp -> varidx add_vidx .)
    LPAREN          reduce using rule 62 (pexp -> varidx add_vidx .)
    CTESTR          reduce using rule 62 (pexp -> varidx add_vidx .)
    CTEINT          reduce using rule 62 (pexp -> varidx add_vidx .)
    CTEFLT          reduce using rule 62 (pexp -> varidx add_vidx .)
    FALSE           reduce using rule 62 (pexp -> varidx add_vidx .)
    TRUE            reduce using rule 62 (pexp -> varidx add_vidx .)
    $end            reduce using rule 62 (pexp -> varidx add_vidx .)
    RCURL           reduce using rule 62 (pexp -> varidx add_vidx .)


state 79

    (44) exprdv -> bexp check_expr_st .
    MAIN            reduce using rule 44 (exprdv -> bexp check_expr_st .)
    FUNCTION        reduce using rule 44 (exprdv -> bexp check_expr_st .)
    VAR             reduce using rule 44 (exprdv -> bexp check_expr_st .)
    RETURN          reduce using rule 44 (exprdv -> bexp check_expr_st .)
    WHILE           reduce using rule 44 (exprdv -> bexp check_expr_st .)
    IF              reduce using rule 44 (exprdv -> bexp check_expr_st .)
    PRINT           reduce using rule 44 (exprdv -> bexp check_expr_st .)
    READ            reduce using rule 44 (exprdv -> bexp check_expr_st .)
    ID              reduce using rule 44 (exprdv -> bexp check_expr_st .)
    LPAREN          reduce using rule 44 (exprdv -> bexp check_expr_st .)
    CTESTR          reduce using rule 44 (exprdv -> bexp check_expr_st .)
    CTEINT          reduce using rule 44 (exprdv -> bexp check_expr_st .)
    CTEFLT          reduce using rule 44 (exprdv -> bexp check_expr_st .)
    FALSE           reduce using rule 44 (exprdv -> bexp check_expr_st .)
    TRUE            reduce using rule 44 (exprdv -> bexp check_expr_st .)
    $end            reduce using rule 44 (exprdv -> bexp check_expr_st .)
    SCOLON          reduce using rule 44 (exprdv -> bexp check_expr_st .)
    RPAREN          reduce using rule 44 (exprdv -> bexp check_expr_st .)
    RBRCKT          reduce using rule 44 (exprdv -> bexp check_expr_st .)
    RCURL           reduce using rule 44 (exprdv -> bexp check_expr_st .)
    COMMA           reduce using rule 44 (exprdv -> bexp check_expr_st .)


state 80

    (45) exprdv -> bexp OR . add_oper exprdv check_expr_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 117

state 81

    (46) exprdv -> bexp AND . add_oper exprdv check_expr_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 118

state 82

    (47) bexp -> asexp check_bexp_st .
    OR              reduce using rule 47 (bexp -> asexp check_bexp_st .)
    AND             reduce using rule 47 (bexp -> asexp check_bexp_st .)
    MAIN            reduce using rule 47 (bexp -> asexp check_bexp_st .)
    FUNCTION        reduce using rule 47 (bexp -> asexp check_bexp_st .)
    VAR             reduce using rule 47 (bexp -> asexp check_bexp_st .)
    RETURN          reduce using rule 47 (bexp -> asexp check_bexp_st .)
    WHILE           reduce using rule 47 (bexp -> asexp check_bexp_st .)
    IF              reduce using rule 47 (bexp -> asexp check_bexp_st .)
    PRINT           reduce using rule 47 (bexp -> asexp check_bexp_st .)
    READ            reduce using rule 47 (bexp -> asexp check_bexp_st .)
    ID              reduce using rule 47 (bexp -> asexp check_bexp_st .)
    LPAREN          reduce using rule 47 (bexp -> asexp check_bexp_st .)
    CTESTR          reduce using rule 47 (bexp -> asexp check_bexp_st .)
    CTEINT          reduce using rule 47 (bexp -> asexp check_bexp_st .)
    CTEFLT          reduce using rule 47 (bexp -> asexp check_bexp_st .)
    FALSE           reduce using rule 47 (bexp -> asexp check_bexp_st .)
    TRUE            reduce using rule 47 (bexp -> asexp check_bexp_st .)
    $end            reduce using rule 47 (bexp -> asexp check_bexp_st .)
    SCOLON          reduce using rule 47 (bexp -> asexp check_bexp_st .)
    RPAREN          reduce using rule 47 (bexp -> asexp check_bexp_st .)
    RBRCKT          reduce using rule 47 (bexp -> asexp check_bexp_st .)
    RCURL           reduce using rule 47 (bexp -> asexp check_bexp_st .)
    COMMA           reduce using rule 47 (bexp -> asexp check_bexp_st .)


state 83

    (48) bexp -> asexp GTEQ . add_oper bexp check_bexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 119

state 84

    (49) bexp -> asexp LTEQ . add_oper bexp check_bexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 120

state 85

    (50) bexp -> asexp NOTEQ . add_oper bexp check_bexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 121

state 86

    (51) bexp -> asexp EQ . add_oper bexp check_bexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 122

state 87

    (52) bexp -> asexp GT . add_oper bexp check_bexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 123

state 88

    (53) bexp -> asexp LT . add_oper bexp check_bexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 124

state 89

    (54) asexp -> emdexp check_asexp_st .
    GTEQ            reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    LTEQ            reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    NOTEQ           reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    EQ              reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    GT              reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    LT              reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    OR              reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    AND             reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    MAIN            reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    FUNCTION        reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    VAR             reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    RETURN          reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    WHILE           reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    IF              reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    PRINT           reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    READ            reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    ID              reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    LPAREN          reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    CTESTR          reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    CTEINT          reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    CTEFLT          reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    FALSE           reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    TRUE            reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    $end            reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    SCOLON          reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    RPAREN          reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    RBRCKT          reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    RCURL           reduce using rule 54 (asexp -> emdexp check_asexp_st .)
    COMMA           reduce using rule 54 (asexp -> emdexp check_asexp_st .)


state 90

    (55) asexp -> emdexp SUB . add_oper asexp check_asexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 125

state 91

    (56) asexp -> emdexp ADD . add_oper asexp check_asexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 126

state 92

    (57) emdexp -> pexp check_emdexp_st .
    SUB             reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    ADD             reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    GTEQ            reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    LTEQ            reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    NOTEQ           reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    EQ              reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    GT              reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    LT              reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    OR              reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    AND             reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    MAIN            reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    FUNCTION        reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    VAR             reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    RETURN          reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    WHILE           reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    IF              reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    PRINT           reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    READ            reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    ID              reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    LPAREN          reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    CTESTR          reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    CTEINT          reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    CTEFLT          reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    FALSE           reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    TRUE            reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    $end            reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    SCOLON          reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    RPAREN          reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    RBRCKT          reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    RCURL           reduce using rule 57 (emdexp -> pexp check_emdexp_st .)
    COMMA           reduce using rule 57 (emdexp -> pexp check_emdexp_st .)


state 93

    (58) emdexp -> pexp DIV . add_oper emdexp check_emdexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 127

state 94

    (59) emdexp -> pexp MULT . add_oper emdexp check_emdexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 128

state 95

    (60) emdexp -> pexp EXP . add_oper emdexp check_emdexp_st
    (114) add_oper -> .
    ID              reduce using rule 114 (add_oper -> .)
    LPAREN          reduce using rule 114 (add_oper -> .)
    CTESTR          reduce using rule 114 (add_oper -> .)
    CTEINT          reduce using rule 114 (add_oper -> .)
    CTEFLT          reduce using rule 114 (add_oper -> .)
    FALSE           reduce using rule 114 (add_oper -> .)
    TRUE            reduce using rule 114 (add_oper -> .)

    add_oper                       shift and go to state 129

state 96

    (64) pexp -> const save_const .
    DIV             reduce using rule 64 (pexp -> const save_const .)
    MULT            reduce using rule 64 (pexp -> const save_const .)
    EXP             reduce using rule 64 (pexp -> const save_const .)
    SUB             reduce using rule 64 (pexp -> const save_const .)
    ADD             reduce using rule 64 (pexp -> const save_const .)
    GTEQ            reduce using rule 64 (pexp -> const save_const .)
    LTEQ            reduce using rule 64 (pexp -> const save_const .)
    NOTEQ           reduce using rule 64 (pexp -> const save_const .)
    EQ              reduce using rule 64 (pexp -> const save_const .)
    GT              reduce using rule 64 (pexp -> const save_const .)
    LT              reduce using rule 64 (pexp -> const save_const .)
    OR              reduce using rule 64 (pexp -> const save_const .)
    AND             reduce using rule 64 (pexp -> const save_const .)
    MAIN            reduce using rule 64 (pexp -> const save_const .)
    FUNCTION        reduce using rule 64 (pexp -> const save_const .)
    VAR             reduce using rule 64 (pexp -> const save_const .)
    RETURN          reduce using rule 64 (pexp -> const save_const .)
    WHILE           reduce using rule 64 (pexp -> const save_const .)
    IF              reduce using rule 64 (pexp -> const save_const .)
    PRINT           reduce using rule 64 (pexp -> const save_const .)
    READ            reduce using rule 64 (pexp -> const save_const .)
    ID              reduce using rule 64 (pexp -> const save_const .)
    LPAREN          reduce using rule 64 (pexp -> const save_const .)
    CTESTR          reduce using rule 64 (pexp -> const save_const .)
    CTEINT          reduce using rule 64 (pexp -> const save_const .)
    CTEFLT          reduce using rule 64 (pexp -> const save_const .)
    FALSE           reduce using rule 64 (pexp -> const save_const .)
    TRUE            reduce using rule 64 (pexp -> const save_const .)
    $end            reduce using rule 64 (pexp -> const save_const .)
    SCOLON          reduce using rule 64 (pexp -> const save_const .)
    RPAREN          reduce using rule 64 (pexp -> const save_const .)
    RBRCKT          reduce using rule 64 (pexp -> const save_const .)
    RCURL           reduce using rule 64 (pexp -> const save_const .)
    COMMA           reduce using rule 64 (pexp -> const save_const .)


state 97

    (69) funccall -> ID FCALL LPAREN . validate_fid fcallparams RPAREN add_curr_pquad
    (141) validate_fid -> .
    ID              reduce using rule 141 (validate_fid -> .)
    RPAREN          reduce using rule 141 (validate_fid -> .)

    validate_fid                   shift and go to state 130

state 98

    (68) shrtassgn -> ID SHRT expr . gen_shrt_assign
    (123) gen_shrt_assign -> .
    SCOLON          reduce using rule 123 (gen_shrt_assign -> .)

    gen_shrt_assign                shift and go to state 131

state 99

    (67) assign -> ID ASGN expr . gen_assign
    (121) gen_assign -> .
    SCOLON          reduce using rule 121 (gen_assign -> .)

    gen_assign                     shift and go to state 132

state 100

    (98) varidx -> ID LBRCKT validate_arr . expr RBRCKT gen_vdim arrindex
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 133
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 101

    (8) main -> MAIN LPAREN RPAREN . LCURL maindv
    LCURL           shift and go to state 134


state 102

    (65) pexp -> LPAREN push_oper_ctx exprdv . RPAREN pop_oper_ctx
    RPAREN          shift and go to state 135


state 103

    (23) function -> FUNCTION typefunc ID . save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (136) save_func -> .
    LPAREN          reduce using rule 136 (save_func -> .)

    save_func                      shift and go to state 136

state 104

    (12) vars -> VAR vtype add_cvtype . COLON listids SCOLON reset_vtype
    COLON           shift and go to state 137


state 105

    (92) rreturn -> RETURN expr check_return .
    SCOLON          reduce using rule 92 (rreturn -> RETURN expr check_return .)


state 106

    (62) pexp -> varidx add_vidx .
    DIV             reduce using rule 62 (pexp -> varidx add_vidx .)
    MULT            reduce using rule 62 (pexp -> varidx add_vidx .)
    EXP             reduce using rule 62 (pexp -> varidx add_vidx .)
    SUB             reduce using rule 62 (pexp -> varidx add_vidx .)
    ADD             reduce using rule 62 (pexp -> varidx add_vidx .)
    GTEQ            reduce using rule 62 (pexp -> varidx add_vidx .)
    LTEQ            reduce using rule 62 (pexp -> varidx add_vidx .)
    NOTEQ           reduce using rule 62 (pexp -> varidx add_vidx .)
    EQ              reduce using rule 62 (pexp -> varidx add_vidx .)
    GT              reduce using rule 62 (pexp -> varidx add_vidx .)
    LT              reduce using rule 62 (pexp -> varidx add_vidx .)
    OR              reduce using rule 62 (pexp -> varidx add_vidx .)
    AND             reduce using rule 62 (pexp -> varidx add_vidx .)
    SCOLON          reduce using rule 62 (pexp -> varidx add_vidx .)
    RPAREN          reduce using rule 62 (pexp -> varidx add_vidx .)
    RBRCKT          reduce using rule 62 (pexp -> varidx add_vidx .)
    MAIN            reduce using rule 62 (pexp -> varidx add_vidx .)
    FUNCTION        reduce using rule 62 (pexp -> varidx add_vidx .)
    VAR             reduce using rule 62 (pexp -> varidx add_vidx .)
    RETURN          reduce using rule 62 (pexp -> varidx add_vidx .)
    WHILE           reduce using rule 62 (pexp -> varidx add_vidx .)
    IF              reduce using rule 62 (pexp -> varidx add_vidx .)
    PRINT           reduce using rule 62 (pexp -> varidx add_vidx .)
    READ            reduce using rule 62 (pexp -> varidx add_vidx .)
    ID              reduce using rule 62 (pexp -> varidx add_vidx .)
    LPAREN          reduce using rule 62 (pexp -> varidx add_vidx .)
    CTESTR          reduce using rule 62 (pexp -> varidx add_vidx .)
    CTEINT          reduce using rule 62 (pexp -> varidx add_vidx .)
    CTEFLT          reduce using rule 62 (pexp -> varidx add_vidx .)
    FALSE           reduce using rule 62 (pexp -> varidx add_vidx .)
    TRUE            reduce using rule 62 (pexp -> varidx add_vidx .)
    $end            reduce using rule 62 (pexp -> varidx add_vidx .)
    RCURL           reduce using rule 62 (pexp -> varidx add_vidx .)
    COMMA           reduce using rule 62 (pexp -> varidx add_vidx .)


state 107

    (89) wwhile -> WHILE add_wpquad LPAREN . expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 138
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 108

    (84) cond -> IF LPAREN expr . RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> IF LPAREN expr . RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    RPAREN          shift and go to state 139


state 109

    (77) pprint -> PRINT LPAREN printlist . RPAREN gen_print_quads
    RPAREN          shift and go to state 140


state 110

    (78) printlist -> printerm . printlistdv
    (79) printlistdv -> . empty
    (80) printlistdv -> . COMMA printerm
    (101) empty -> .
    COMMA           shift and go to state 143
    RPAREN          reduce using rule 101 (empty -> .)

    printlistdv                    shift and go to state 141
    empty                          shift and go to state 142

state 111

    (81) printerm -> CTESTR . push_printct
    (128) push_printct -> .
    COMMA           reduce using rule 128 (push_printct -> .)
    RPAREN          reduce using rule 128 (push_printct -> .)

    push_printct                   shift and go to state 144

state 112

    (82) printerm -> varidx . add_vidx push_printidl
    (113) add_vidx -> .
    COMMA           reduce using rule 113 (add_vidx -> .)
    RPAREN          reduce using rule 113 (add_vidx -> .)

    add_vidx                       shift and go to state 145

state 113

    (83) printerm -> ID . push_printid
    (98) varidx -> ID . LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (126) push_printid -> .
    LBRCKT          shift and go to state 45
    COMMA           reduce using rule 126 (push_printid -> .)
    RPAREN          reduce using rule 126 (push_printid -> .)

    push_printid                   shift and go to state 146

state 114

    (75) read -> READ LPAREN varidx . add_vidx gen_idxread RPAREN
    (113) add_vidx -> .
    RPAREN          reduce using rule 113 (add_vidx -> .)

    add_vidx                       shift and go to state 147

state 115

    (76) read -> READ LPAREN ID . RPAREN gen_read
    (98) varidx -> ID . LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    RPAREN          shift and go to state 148
    LBRCKT          shift and go to state 45


state 116

    (66) assign -> varidx add_vidx ASGN . expr gen_idx_assign
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    varidx                         shift and go to state 72
    expr                           shift and go to state 149
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    const                          shift and go to state 36

state 117

    (45) exprdv -> bexp OR add_oper . exprdv check_expr_st
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    bexp                           shift and go to state 32
    exprdv                         shift and go to state 150
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 118

    (46) exprdv -> bexp AND add_oper . exprdv check_expr_st
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    bexp                           shift and go to state 32
    exprdv                         shift and go to state 151
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 119

    (48) bexp -> asexp GTEQ add_oper . bexp check_bexp_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    asexp                          shift and go to state 33
    bexp                           shift and go to state 152
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 120

    (49) bexp -> asexp LTEQ add_oper . bexp check_bexp_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    asexp                          shift and go to state 33
    bexp                           shift and go to state 153
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 121

    (50) bexp -> asexp NOTEQ add_oper . bexp check_bexp_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    asexp                          shift and go to state 33
    bexp                           shift and go to state 154
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 122

    (51) bexp -> asexp EQ add_oper . bexp check_bexp_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    asexp                          shift and go to state 33
    bexp                           shift and go to state 155
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 123

    (52) bexp -> asexp GT add_oper . bexp check_bexp_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    asexp                          shift and go to state 33
    bexp                           shift and go to state 156
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 124

    (53) bexp -> asexp LT add_oper . bexp check_bexp_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    asexp                          shift and go to state 33
    bexp                           shift and go to state 157
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 125

    (55) asexp -> emdexp SUB add_oper . asexp check_asexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    emdexp                         shift and go to state 34
    asexp                          shift and go to state 158
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 126

    (56) asexp -> emdexp ADD add_oper . asexp check_asexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    emdexp                         shift and go to state 34
    asexp                          shift and go to state 159
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 127

    (58) emdexp -> pexp DIV add_oper . emdexp check_emdexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    pexp                           shift and go to state 35
    emdexp                         shift and go to state 160
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 128

    (59) emdexp -> pexp MULT add_oper . emdexp check_emdexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    pexp                           shift and go to state 35
    emdexp                         shift and go to state 161
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 129

    (60) emdexp -> pexp EXP add_oper . emdexp check_emdexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    pexp                           shift and go to state 35
    emdexp                         shift and go to state 162
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 130

    (69) funccall -> ID FCALL LPAREN validate_fid . fcallparams RPAREN add_curr_pquad
    (70) fcallparams -> . empty
    (71) fcallparams -> . fcallterm fcallparamdv
    (101) empty -> .
    (74) fcallterm -> . ID ASGN expr add_params
    RPAREN          reduce using rule 101 (empty -> .)
    ID              shift and go to state 163

    fcallparams                    shift and go to state 164
    empty                          shift and go to state 165
    fcallterm                      shift and go to state 166

state 131

    (68) shrtassgn -> ID SHRT expr gen_shrt_assign .
    SCOLON          reduce using rule 68 (shrtassgn -> ID SHRT expr gen_shrt_assign .)


state 132

    (67) assign -> ID ASGN expr gen_assign .
    SCOLON          reduce using rule 67 (assign -> ID ASGN expr gen_assign .)


state 133

    (98) varidx -> ID LBRCKT validate_arr expr . RBRCKT gen_vdim arrindex
    RBRCKT          shift and go to state 167


state 134

    (8) main -> MAIN LPAREN RPAREN LCURL . maindv
    (9) maindv -> . RCURL
    (10) maindv -> . statement maindv
    (11) maindv -> . vars maindv
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           shift and go to state 169
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    maindv                         shift and go to state 168
    statement                      shift and go to state 170
    vars                           shift and go to state 171
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 135

    (65) pexp -> LPAREN push_oper_ctx exprdv RPAREN . pop_oper_ctx
    (120) pop_oper_ctx -> .
    DIV             reduce using rule 120 (pop_oper_ctx -> .)
    MULT            reduce using rule 120 (pop_oper_ctx -> .)
    EXP             reduce using rule 120 (pop_oper_ctx -> .)
    SUB             reduce using rule 120 (pop_oper_ctx -> .)
    ADD             reduce using rule 120 (pop_oper_ctx -> .)
    GTEQ            reduce using rule 120 (pop_oper_ctx -> .)
    LTEQ            reduce using rule 120 (pop_oper_ctx -> .)
    NOTEQ           reduce using rule 120 (pop_oper_ctx -> .)
    EQ              reduce using rule 120 (pop_oper_ctx -> .)
    GT              reduce using rule 120 (pop_oper_ctx -> .)
    LT              reduce using rule 120 (pop_oper_ctx -> .)
    OR              reduce using rule 120 (pop_oper_ctx -> .)
    AND             reduce using rule 120 (pop_oper_ctx -> .)
    MAIN            reduce using rule 120 (pop_oper_ctx -> .)
    FUNCTION        reduce using rule 120 (pop_oper_ctx -> .)
    VAR             reduce using rule 120 (pop_oper_ctx -> .)
    RETURN          reduce using rule 120 (pop_oper_ctx -> .)
    WHILE           reduce using rule 120 (pop_oper_ctx -> .)
    IF              reduce using rule 120 (pop_oper_ctx -> .)
    PRINT           reduce using rule 120 (pop_oper_ctx -> .)
    READ            reduce using rule 120 (pop_oper_ctx -> .)
    ID              reduce using rule 120 (pop_oper_ctx -> .)
    LPAREN          reduce using rule 120 (pop_oper_ctx -> .)
    CTESTR          reduce using rule 120 (pop_oper_ctx -> .)
    CTEINT          reduce using rule 120 (pop_oper_ctx -> .)
    CTEFLT          reduce using rule 120 (pop_oper_ctx -> .)
    FALSE           reduce using rule 120 (pop_oper_ctx -> .)
    TRUE            reduce using rule 120 (pop_oper_ctx -> .)
    $end            reduce using rule 120 (pop_oper_ctx -> .)
    SCOLON          reduce using rule 120 (pop_oper_ctx -> .)
    RPAREN          reduce using rule 120 (pop_oper_ctx -> .)
    RBRCKT          reduce using rule 120 (pop_oper_ctx -> .)
    RCURL           reduce using rule 120 (pop_oper_ctx -> .)
    COMMA           reduce using rule 120 (pop_oper_ctx -> .)

    pop_oper_ctx                   shift and go to state 172

state 136

    (23) function -> FUNCTION typefunc ID save_func . LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    LPAREN          shift and go to state 173


state 137

    (12) vars -> VAR vtype add_cvtype COLON . listids SCOLON reset_vtype
    (17) listids -> . ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv
    (18) listids -> . ID store_varid listdv
    ID              shift and go to state 175

    listids                        shift and go to state 174

state 138

    (89) wwhile -> WHILE add_wpquad LPAREN expr . RPAREN gen_wquad DO LCURL whiledv add_wquad
    RPAREN          shift and go to state 176


state 139

    (84) cond -> IF LPAREN expr RPAREN . LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> IF LPAREN expr RPAREN . LCURL gen_cond_quad condst RCURL add_jquad
    LCURL           shift and go to state 177


state 140

    (77) pprint -> PRINT LPAREN printlist RPAREN . gen_print_quads
    (129) gen_print_quads -> .
    SCOLON          reduce using rule 129 (gen_print_quads -> .)

    gen_print_quads                shift and go to state 178

state 141

    (78) printlist -> printerm printlistdv .
    RPAREN          reduce using rule 78 (printlist -> printerm printlistdv .)


state 142

    (79) printlistdv -> empty .
    RPAREN          reduce using rule 79 (printlistdv -> empty .)


state 143

    (80) printlistdv -> COMMA . printerm
    (81) printerm -> . CTESTR push_printct
    (82) printerm -> . varidx add_vidx push_printidl
    (83) printerm -> . ID push_printid
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    CTESTR          shift and go to state 111
    ID              shift and go to state 113

    printerm                       shift and go to state 179
    varidx                         shift and go to state 112

state 144

    (81) printerm -> CTESTR push_printct .
    COMMA           reduce using rule 81 (printerm -> CTESTR push_printct .)
    RPAREN          reduce using rule 81 (printerm -> CTESTR push_printct .)


state 145

    (82) printerm -> varidx add_vidx . push_printidl
    (127) push_printidl -> .
    COMMA           reduce using rule 127 (push_printidl -> .)
    RPAREN          reduce using rule 127 (push_printidl -> .)

    push_printidl                  shift and go to state 180

state 146

    (83) printerm -> ID push_printid .
    COMMA           reduce using rule 83 (printerm -> ID push_printid .)
    RPAREN          reduce using rule 83 (printerm -> ID push_printid .)


state 147

    (75) read -> READ LPAREN varidx add_vidx . gen_idxread RPAREN
    (125) gen_idxread -> .
    RPAREN          reduce using rule 125 (gen_idxread -> .)

    gen_idxread                    shift and go to state 181

state 148

    (76) read -> READ LPAREN ID RPAREN . gen_read
    (124) gen_read -> .
    SCOLON          reduce using rule 124 (gen_read -> .)

    gen_read                       shift and go to state 182

state 149

    (66) assign -> varidx add_vidx ASGN expr . gen_idx_assign
    (122) gen_idx_assign -> .
    SCOLON          reduce using rule 122 (gen_idx_assign -> .)

    gen_idx_assign                 shift and go to state 183

state 150

    (45) exprdv -> bexp OR add_oper exprdv . check_expr_st
    (115) check_expr_st -> .
    MAIN            reduce using rule 115 (check_expr_st -> .)
    FUNCTION        reduce using rule 115 (check_expr_st -> .)
    VAR             reduce using rule 115 (check_expr_st -> .)
    RETURN          reduce using rule 115 (check_expr_st -> .)
    WHILE           reduce using rule 115 (check_expr_st -> .)
    IF              reduce using rule 115 (check_expr_st -> .)
    PRINT           reduce using rule 115 (check_expr_st -> .)
    READ            reduce using rule 115 (check_expr_st -> .)
    ID              reduce using rule 115 (check_expr_st -> .)
    LPAREN          reduce using rule 115 (check_expr_st -> .)
    CTESTR          reduce using rule 115 (check_expr_st -> .)
    CTEINT          reduce using rule 115 (check_expr_st -> .)
    CTEFLT          reduce using rule 115 (check_expr_st -> .)
    FALSE           reduce using rule 115 (check_expr_st -> .)
    TRUE            reduce using rule 115 (check_expr_st -> .)
    $end            reduce using rule 115 (check_expr_st -> .)
    SCOLON          reduce using rule 115 (check_expr_st -> .)
    RPAREN          reduce using rule 115 (check_expr_st -> .)
    RBRCKT          reduce using rule 115 (check_expr_st -> .)
    RCURL           reduce using rule 115 (check_expr_st -> .)
    COMMA           reduce using rule 115 (check_expr_st -> .)

    check_expr_st                  shift and go to state 184

state 151

    (46) exprdv -> bexp AND add_oper exprdv . check_expr_st
    (115) check_expr_st -> .
    MAIN            reduce using rule 115 (check_expr_st -> .)
    FUNCTION        reduce using rule 115 (check_expr_st -> .)
    VAR             reduce using rule 115 (check_expr_st -> .)
    RETURN          reduce using rule 115 (check_expr_st -> .)
    WHILE           reduce using rule 115 (check_expr_st -> .)
    IF              reduce using rule 115 (check_expr_st -> .)
    PRINT           reduce using rule 115 (check_expr_st -> .)
    READ            reduce using rule 115 (check_expr_st -> .)
    ID              reduce using rule 115 (check_expr_st -> .)
    LPAREN          reduce using rule 115 (check_expr_st -> .)
    CTESTR          reduce using rule 115 (check_expr_st -> .)
    CTEINT          reduce using rule 115 (check_expr_st -> .)
    CTEFLT          reduce using rule 115 (check_expr_st -> .)
    FALSE           reduce using rule 115 (check_expr_st -> .)
    TRUE            reduce using rule 115 (check_expr_st -> .)
    $end            reduce using rule 115 (check_expr_st -> .)
    SCOLON          reduce using rule 115 (check_expr_st -> .)
    RPAREN          reduce using rule 115 (check_expr_st -> .)
    RBRCKT          reduce using rule 115 (check_expr_st -> .)
    RCURL           reduce using rule 115 (check_expr_st -> .)
    COMMA           reduce using rule 115 (check_expr_st -> .)

    check_expr_st                  shift and go to state 185

state 152

    (48) bexp -> asexp GTEQ add_oper bexp . check_bexp_st
    (116) check_bexp_st -> .
    OR              reduce using rule 116 (check_bexp_st -> .)
    AND             reduce using rule 116 (check_bexp_st -> .)
    MAIN            reduce using rule 116 (check_bexp_st -> .)
    FUNCTION        reduce using rule 116 (check_bexp_st -> .)
    VAR             reduce using rule 116 (check_bexp_st -> .)
    RETURN          reduce using rule 116 (check_bexp_st -> .)
    WHILE           reduce using rule 116 (check_bexp_st -> .)
    IF              reduce using rule 116 (check_bexp_st -> .)
    PRINT           reduce using rule 116 (check_bexp_st -> .)
    READ            reduce using rule 116 (check_bexp_st -> .)
    ID              reduce using rule 116 (check_bexp_st -> .)
    LPAREN          reduce using rule 116 (check_bexp_st -> .)
    CTESTR          reduce using rule 116 (check_bexp_st -> .)
    CTEINT          reduce using rule 116 (check_bexp_st -> .)
    CTEFLT          reduce using rule 116 (check_bexp_st -> .)
    FALSE           reduce using rule 116 (check_bexp_st -> .)
    TRUE            reduce using rule 116 (check_bexp_st -> .)
    $end            reduce using rule 116 (check_bexp_st -> .)
    SCOLON          reduce using rule 116 (check_bexp_st -> .)
    RPAREN          reduce using rule 116 (check_bexp_st -> .)
    RBRCKT          reduce using rule 116 (check_bexp_st -> .)
    RCURL           reduce using rule 116 (check_bexp_st -> .)
    COMMA           reduce using rule 116 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 186

state 153

    (49) bexp -> asexp LTEQ add_oper bexp . check_bexp_st
    (116) check_bexp_st -> .
    OR              reduce using rule 116 (check_bexp_st -> .)
    AND             reduce using rule 116 (check_bexp_st -> .)
    MAIN            reduce using rule 116 (check_bexp_st -> .)
    FUNCTION        reduce using rule 116 (check_bexp_st -> .)
    VAR             reduce using rule 116 (check_bexp_st -> .)
    RETURN          reduce using rule 116 (check_bexp_st -> .)
    WHILE           reduce using rule 116 (check_bexp_st -> .)
    IF              reduce using rule 116 (check_bexp_st -> .)
    PRINT           reduce using rule 116 (check_bexp_st -> .)
    READ            reduce using rule 116 (check_bexp_st -> .)
    ID              reduce using rule 116 (check_bexp_st -> .)
    LPAREN          reduce using rule 116 (check_bexp_st -> .)
    CTESTR          reduce using rule 116 (check_bexp_st -> .)
    CTEINT          reduce using rule 116 (check_bexp_st -> .)
    CTEFLT          reduce using rule 116 (check_bexp_st -> .)
    FALSE           reduce using rule 116 (check_bexp_st -> .)
    TRUE            reduce using rule 116 (check_bexp_st -> .)
    $end            reduce using rule 116 (check_bexp_st -> .)
    SCOLON          reduce using rule 116 (check_bexp_st -> .)
    RPAREN          reduce using rule 116 (check_bexp_st -> .)
    RBRCKT          reduce using rule 116 (check_bexp_st -> .)
    RCURL           reduce using rule 116 (check_bexp_st -> .)
    COMMA           reduce using rule 116 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 187

state 154

    (50) bexp -> asexp NOTEQ add_oper bexp . check_bexp_st
    (116) check_bexp_st -> .
    OR              reduce using rule 116 (check_bexp_st -> .)
    AND             reduce using rule 116 (check_bexp_st -> .)
    MAIN            reduce using rule 116 (check_bexp_st -> .)
    FUNCTION        reduce using rule 116 (check_bexp_st -> .)
    VAR             reduce using rule 116 (check_bexp_st -> .)
    RETURN          reduce using rule 116 (check_bexp_st -> .)
    WHILE           reduce using rule 116 (check_bexp_st -> .)
    IF              reduce using rule 116 (check_bexp_st -> .)
    PRINT           reduce using rule 116 (check_bexp_st -> .)
    READ            reduce using rule 116 (check_bexp_st -> .)
    ID              reduce using rule 116 (check_bexp_st -> .)
    LPAREN          reduce using rule 116 (check_bexp_st -> .)
    CTESTR          reduce using rule 116 (check_bexp_st -> .)
    CTEINT          reduce using rule 116 (check_bexp_st -> .)
    CTEFLT          reduce using rule 116 (check_bexp_st -> .)
    FALSE           reduce using rule 116 (check_bexp_st -> .)
    TRUE            reduce using rule 116 (check_bexp_st -> .)
    $end            reduce using rule 116 (check_bexp_st -> .)
    SCOLON          reduce using rule 116 (check_bexp_st -> .)
    RPAREN          reduce using rule 116 (check_bexp_st -> .)
    RBRCKT          reduce using rule 116 (check_bexp_st -> .)
    RCURL           reduce using rule 116 (check_bexp_st -> .)
    COMMA           reduce using rule 116 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 188

state 155

    (51) bexp -> asexp EQ add_oper bexp . check_bexp_st
    (116) check_bexp_st -> .
    OR              reduce using rule 116 (check_bexp_st -> .)
    AND             reduce using rule 116 (check_bexp_st -> .)
    MAIN            reduce using rule 116 (check_bexp_st -> .)
    FUNCTION        reduce using rule 116 (check_bexp_st -> .)
    VAR             reduce using rule 116 (check_bexp_st -> .)
    RETURN          reduce using rule 116 (check_bexp_st -> .)
    WHILE           reduce using rule 116 (check_bexp_st -> .)
    IF              reduce using rule 116 (check_bexp_st -> .)
    PRINT           reduce using rule 116 (check_bexp_st -> .)
    READ            reduce using rule 116 (check_bexp_st -> .)
    ID              reduce using rule 116 (check_bexp_st -> .)
    LPAREN          reduce using rule 116 (check_bexp_st -> .)
    CTESTR          reduce using rule 116 (check_bexp_st -> .)
    CTEINT          reduce using rule 116 (check_bexp_st -> .)
    CTEFLT          reduce using rule 116 (check_bexp_st -> .)
    FALSE           reduce using rule 116 (check_bexp_st -> .)
    TRUE            reduce using rule 116 (check_bexp_st -> .)
    $end            reduce using rule 116 (check_bexp_st -> .)
    SCOLON          reduce using rule 116 (check_bexp_st -> .)
    RPAREN          reduce using rule 116 (check_bexp_st -> .)
    RBRCKT          reduce using rule 116 (check_bexp_st -> .)
    RCURL           reduce using rule 116 (check_bexp_st -> .)
    COMMA           reduce using rule 116 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 189

state 156

    (52) bexp -> asexp GT add_oper bexp . check_bexp_st
    (116) check_bexp_st -> .
    OR              reduce using rule 116 (check_bexp_st -> .)
    AND             reduce using rule 116 (check_bexp_st -> .)
    MAIN            reduce using rule 116 (check_bexp_st -> .)
    FUNCTION        reduce using rule 116 (check_bexp_st -> .)
    VAR             reduce using rule 116 (check_bexp_st -> .)
    RETURN          reduce using rule 116 (check_bexp_st -> .)
    WHILE           reduce using rule 116 (check_bexp_st -> .)
    IF              reduce using rule 116 (check_bexp_st -> .)
    PRINT           reduce using rule 116 (check_bexp_st -> .)
    READ            reduce using rule 116 (check_bexp_st -> .)
    ID              reduce using rule 116 (check_bexp_st -> .)
    LPAREN          reduce using rule 116 (check_bexp_st -> .)
    CTESTR          reduce using rule 116 (check_bexp_st -> .)
    CTEINT          reduce using rule 116 (check_bexp_st -> .)
    CTEFLT          reduce using rule 116 (check_bexp_st -> .)
    FALSE           reduce using rule 116 (check_bexp_st -> .)
    TRUE            reduce using rule 116 (check_bexp_st -> .)
    $end            reduce using rule 116 (check_bexp_st -> .)
    SCOLON          reduce using rule 116 (check_bexp_st -> .)
    RPAREN          reduce using rule 116 (check_bexp_st -> .)
    RBRCKT          reduce using rule 116 (check_bexp_st -> .)
    RCURL           reduce using rule 116 (check_bexp_st -> .)
    COMMA           reduce using rule 116 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 190

state 157

    (53) bexp -> asexp LT add_oper bexp . check_bexp_st
    (116) check_bexp_st -> .
    OR              reduce using rule 116 (check_bexp_st -> .)
    AND             reduce using rule 116 (check_bexp_st -> .)
    MAIN            reduce using rule 116 (check_bexp_st -> .)
    FUNCTION        reduce using rule 116 (check_bexp_st -> .)
    VAR             reduce using rule 116 (check_bexp_st -> .)
    RETURN          reduce using rule 116 (check_bexp_st -> .)
    WHILE           reduce using rule 116 (check_bexp_st -> .)
    IF              reduce using rule 116 (check_bexp_st -> .)
    PRINT           reduce using rule 116 (check_bexp_st -> .)
    READ            reduce using rule 116 (check_bexp_st -> .)
    ID              reduce using rule 116 (check_bexp_st -> .)
    LPAREN          reduce using rule 116 (check_bexp_st -> .)
    CTESTR          reduce using rule 116 (check_bexp_st -> .)
    CTEINT          reduce using rule 116 (check_bexp_st -> .)
    CTEFLT          reduce using rule 116 (check_bexp_st -> .)
    FALSE           reduce using rule 116 (check_bexp_st -> .)
    TRUE            reduce using rule 116 (check_bexp_st -> .)
    $end            reduce using rule 116 (check_bexp_st -> .)
    SCOLON          reduce using rule 116 (check_bexp_st -> .)
    RPAREN          reduce using rule 116 (check_bexp_st -> .)
    RBRCKT          reduce using rule 116 (check_bexp_st -> .)
    RCURL           reduce using rule 116 (check_bexp_st -> .)
    COMMA           reduce using rule 116 (check_bexp_st -> .)

    check_bexp_st                  shift and go to state 191

state 158

    (55) asexp -> emdexp SUB add_oper asexp . check_asexp_st
    (117) check_asexp_st -> .
    GTEQ            reduce using rule 117 (check_asexp_st -> .)
    LTEQ            reduce using rule 117 (check_asexp_st -> .)
    NOTEQ           reduce using rule 117 (check_asexp_st -> .)
    EQ              reduce using rule 117 (check_asexp_st -> .)
    GT              reduce using rule 117 (check_asexp_st -> .)
    LT              reduce using rule 117 (check_asexp_st -> .)
    OR              reduce using rule 117 (check_asexp_st -> .)
    AND             reduce using rule 117 (check_asexp_st -> .)
    MAIN            reduce using rule 117 (check_asexp_st -> .)
    FUNCTION        reduce using rule 117 (check_asexp_st -> .)
    VAR             reduce using rule 117 (check_asexp_st -> .)
    RETURN          reduce using rule 117 (check_asexp_st -> .)
    WHILE           reduce using rule 117 (check_asexp_st -> .)
    IF              reduce using rule 117 (check_asexp_st -> .)
    PRINT           reduce using rule 117 (check_asexp_st -> .)
    READ            reduce using rule 117 (check_asexp_st -> .)
    ID              reduce using rule 117 (check_asexp_st -> .)
    LPAREN          reduce using rule 117 (check_asexp_st -> .)
    CTESTR          reduce using rule 117 (check_asexp_st -> .)
    CTEINT          reduce using rule 117 (check_asexp_st -> .)
    CTEFLT          reduce using rule 117 (check_asexp_st -> .)
    FALSE           reduce using rule 117 (check_asexp_st -> .)
    TRUE            reduce using rule 117 (check_asexp_st -> .)
    $end            reduce using rule 117 (check_asexp_st -> .)
    SCOLON          reduce using rule 117 (check_asexp_st -> .)
    RPAREN          reduce using rule 117 (check_asexp_st -> .)
    RBRCKT          reduce using rule 117 (check_asexp_st -> .)
    RCURL           reduce using rule 117 (check_asexp_st -> .)
    COMMA           reduce using rule 117 (check_asexp_st -> .)

    check_asexp_st                 shift and go to state 192

state 159

    (56) asexp -> emdexp ADD add_oper asexp . check_asexp_st
    (117) check_asexp_st -> .
    GTEQ            reduce using rule 117 (check_asexp_st -> .)
    LTEQ            reduce using rule 117 (check_asexp_st -> .)
    NOTEQ           reduce using rule 117 (check_asexp_st -> .)
    EQ              reduce using rule 117 (check_asexp_st -> .)
    GT              reduce using rule 117 (check_asexp_st -> .)
    LT              reduce using rule 117 (check_asexp_st -> .)
    OR              reduce using rule 117 (check_asexp_st -> .)
    AND             reduce using rule 117 (check_asexp_st -> .)
    MAIN            reduce using rule 117 (check_asexp_st -> .)
    FUNCTION        reduce using rule 117 (check_asexp_st -> .)
    VAR             reduce using rule 117 (check_asexp_st -> .)
    RETURN          reduce using rule 117 (check_asexp_st -> .)
    WHILE           reduce using rule 117 (check_asexp_st -> .)
    IF              reduce using rule 117 (check_asexp_st -> .)
    PRINT           reduce using rule 117 (check_asexp_st -> .)
    READ            reduce using rule 117 (check_asexp_st -> .)
    ID              reduce using rule 117 (check_asexp_st -> .)
    LPAREN          reduce using rule 117 (check_asexp_st -> .)
    CTESTR          reduce using rule 117 (check_asexp_st -> .)
    CTEINT          reduce using rule 117 (check_asexp_st -> .)
    CTEFLT          reduce using rule 117 (check_asexp_st -> .)
    FALSE           reduce using rule 117 (check_asexp_st -> .)
    TRUE            reduce using rule 117 (check_asexp_st -> .)
    $end            reduce using rule 117 (check_asexp_st -> .)
    SCOLON          reduce using rule 117 (check_asexp_st -> .)
    RPAREN          reduce using rule 117 (check_asexp_st -> .)
    RBRCKT          reduce using rule 117 (check_asexp_st -> .)
    RCURL           reduce using rule 117 (check_asexp_st -> .)
    COMMA           reduce using rule 117 (check_asexp_st -> .)

    check_asexp_st                 shift and go to state 193

state 160

    (58) emdexp -> pexp DIV add_oper emdexp . check_emdexp_st
    (118) check_emdexp_st -> .
    SUB             reduce using rule 118 (check_emdexp_st -> .)
    ADD             reduce using rule 118 (check_emdexp_st -> .)
    GTEQ            reduce using rule 118 (check_emdexp_st -> .)
    LTEQ            reduce using rule 118 (check_emdexp_st -> .)
    NOTEQ           reduce using rule 118 (check_emdexp_st -> .)
    EQ              reduce using rule 118 (check_emdexp_st -> .)
    GT              reduce using rule 118 (check_emdexp_st -> .)
    LT              reduce using rule 118 (check_emdexp_st -> .)
    OR              reduce using rule 118 (check_emdexp_st -> .)
    AND             reduce using rule 118 (check_emdexp_st -> .)
    MAIN            reduce using rule 118 (check_emdexp_st -> .)
    FUNCTION        reduce using rule 118 (check_emdexp_st -> .)
    VAR             reduce using rule 118 (check_emdexp_st -> .)
    RETURN          reduce using rule 118 (check_emdexp_st -> .)
    WHILE           reduce using rule 118 (check_emdexp_st -> .)
    IF              reduce using rule 118 (check_emdexp_st -> .)
    PRINT           reduce using rule 118 (check_emdexp_st -> .)
    READ            reduce using rule 118 (check_emdexp_st -> .)
    ID              reduce using rule 118 (check_emdexp_st -> .)
    LPAREN          reduce using rule 118 (check_emdexp_st -> .)
    CTESTR          reduce using rule 118 (check_emdexp_st -> .)
    CTEINT          reduce using rule 118 (check_emdexp_st -> .)
    CTEFLT          reduce using rule 118 (check_emdexp_st -> .)
    FALSE           reduce using rule 118 (check_emdexp_st -> .)
    TRUE            reduce using rule 118 (check_emdexp_st -> .)
    $end            reduce using rule 118 (check_emdexp_st -> .)
    SCOLON          reduce using rule 118 (check_emdexp_st -> .)
    RPAREN          reduce using rule 118 (check_emdexp_st -> .)
    RBRCKT          reduce using rule 118 (check_emdexp_st -> .)
    RCURL           reduce using rule 118 (check_emdexp_st -> .)
    COMMA           reduce using rule 118 (check_emdexp_st -> .)

    check_emdexp_st                shift and go to state 194

state 161

    (59) emdexp -> pexp MULT add_oper emdexp . check_emdexp_st
    (118) check_emdexp_st -> .
    SUB             reduce using rule 118 (check_emdexp_st -> .)
    ADD             reduce using rule 118 (check_emdexp_st -> .)
    GTEQ            reduce using rule 118 (check_emdexp_st -> .)
    LTEQ            reduce using rule 118 (check_emdexp_st -> .)
    NOTEQ           reduce using rule 118 (check_emdexp_st -> .)
    EQ              reduce using rule 118 (check_emdexp_st -> .)
    GT              reduce using rule 118 (check_emdexp_st -> .)
    LT              reduce using rule 118 (check_emdexp_st -> .)
    OR              reduce using rule 118 (check_emdexp_st -> .)
    AND             reduce using rule 118 (check_emdexp_st -> .)
    MAIN            reduce using rule 118 (check_emdexp_st -> .)
    FUNCTION        reduce using rule 118 (check_emdexp_st -> .)
    VAR             reduce using rule 118 (check_emdexp_st -> .)
    RETURN          reduce using rule 118 (check_emdexp_st -> .)
    WHILE           reduce using rule 118 (check_emdexp_st -> .)
    IF              reduce using rule 118 (check_emdexp_st -> .)
    PRINT           reduce using rule 118 (check_emdexp_st -> .)
    READ            reduce using rule 118 (check_emdexp_st -> .)
    ID              reduce using rule 118 (check_emdexp_st -> .)
    LPAREN          reduce using rule 118 (check_emdexp_st -> .)
    CTESTR          reduce using rule 118 (check_emdexp_st -> .)
    CTEINT          reduce using rule 118 (check_emdexp_st -> .)
    CTEFLT          reduce using rule 118 (check_emdexp_st -> .)
    FALSE           reduce using rule 118 (check_emdexp_st -> .)
    TRUE            reduce using rule 118 (check_emdexp_st -> .)
    $end            reduce using rule 118 (check_emdexp_st -> .)
    SCOLON          reduce using rule 118 (check_emdexp_st -> .)
    RPAREN          reduce using rule 118 (check_emdexp_st -> .)
    RBRCKT          reduce using rule 118 (check_emdexp_st -> .)
    RCURL           reduce using rule 118 (check_emdexp_st -> .)
    COMMA           reduce using rule 118 (check_emdexp_st -> .)

    check_emdexp_st                shift and go to state 195

state 162

    (60) emdexp -> pexp EXP add_oper emdexp . check_emdexp_st
    (118) check_emdexp_st -> .
    SUB             reduce using rule 118 (check_emdexp_st -> .)
    ADD             reduce using rule 118 (check_emdexp_st -> .)
    GTEQ            reduce using rule 118 (check_emdexp_st -> .)
    LTEQ            reduce using rule 118 (check_emdexp_st -> .)
    NOTEQ           reduce using rule 118 (check_emdexp_st -> .)
    EQ              reduce using rule 118 (check_emdexp_st -> .)
    GT              reduce using rule 118 (check_emdexp_st -> .)
    LT              reduce using rule 118 (check_emdexp_st -> .)
    OR              reduce using rule 118 (check_emdexp_st -> .)
    AND             reduce using rule 118 (check_emdexp_st -> .)
    MAIN            reduce using rule 118 (check_emdexp_st -> .)
    FUNCTION        reduce using rule 118 (check_emdexp_st -> .)
    VAR             reduce using rule 118 (check_emdexp_st -> .)
    RETURN          reduce using rule 118 (check_emdexp_st -> .)
    WHILE           reduce using rule 118 (check_emdexp_st -> .)
    IF              reduce using rule 118 (check_emdexp_st -> .)
    PRINT           reduce using rule 118 (check_emdexp_st -> .)
    READ            reduce using rule 118 (check_emdexp_st -> .)
    ID              reduce using rule 118 (check_emdexp_st -> .)
    LPAREN          reduce using rule 118 (check_emdexp_st -> .)
    CTESTR          reduce using rule 118 (check_emdexp_st -> .)
    CTEINT          reduce using rule 118 (check_emdexp_st -> .)
    CTEFLT          reduce using rule 118 (check_emdexp_st -> .)
    FALSE           reduce using rule 118 (check_emdexp_st -> .)
    TRUE            reduce using rule 118 (check_emdexp_st -> .)
    $end            reduce using rule 118 (check_emdexp_st -> .)
    SCOLON          reduce using rule 118 (check_emdexp_st -> .)
    RPAREN          reduce using rule 118 (check_emdexp_st -> .)
    RBRCKT          reduce using rule 118 (check_emdexp_st -> .)
    RCURL           reduce using rule 118 (check_emdexp_st -> .)
    COMMA           reduce using rule 118 (check_emdexp_st -> .)

    check_emdexp_st                shift and go to state 196

state 163

    (74) fcallterm -> ID . ASGN expr add_params
    ASGN            shift and go to state 197


state 164

    (69) funccall -> ID FCALL LPAREN validate_fid fcallparams . RPAREN add_curr_pquad
    RPAREN          shift and go to state 198


state 165

    (70) fcallparams -> empty .
    RPAREN          reduce using rule 70 (fcallparams -> empty .)


state 166

    (71) fcallparams -> fcallterm . fcallparamdv
    (72) fcallparamdv -> . empty
    (73) fcallparamdv -> . COMMA fcallparams
    (101) empty -> .
    COMMA           shift and go to state 201
    RPAREN          reduce using rule 101 (empty -> .)

    fcallparamdv                   shift and go to state 199
    empty                          shift and go to state 200

state 167

    (98) varidx -> ID LBRCKT validate_arr expr RBRCKT . gen_vdim arrindex
    (112) gen_vdim -> .
    LBRCKT          reduce using rule 112 (gen_vdim -> .)
    ASGN            reduce using rule 112 (gen_vdim -> .)
    DIV             reduce using rule 112 (gen_vdim -> .)
    MULT            reduce using rule 112 (gen_vdim -> .)
    EXP             reduce using rule 112 (gen_vdim -> .)
    SUB             reduce using rule 112 (gen_vdim -> .)
    ADD             reduce using rule 112 (gen_vdim -> .)
    GTEQ            reduce using rule 112 (gen_vdim -> .)
    LTEQ            reduce using rule 112 (gen_vdim -> .)
    NOTEQ           reduce using rule 112 (gen_vdim -> .)
    EQ              reduce using rule 112 (gen_vdim -> .)
    GT              reduce using rule 112 (gen_vdim -> .)
    LT              reduce using rule 112 (gen_vdim -> .)
    OR              reduce using rule 112 (gen_vdim -> .)
    AND             reduce using rule 112 (gen_vdim -> .)
    MAIN            reduce using rule 112 (gen_vdim -> .)
    FUNCTION        reduce using rule 112 (gen_vdim -> .)
    VAR             reduce using rule 112 (gen_vdim -> .)
    RETURN          reduce using rule 112 (gen_vdim -> .)
    WHILE           reduce using rule 112 (gen_vdim -> .)
    IF              reduce using rule 112 (gen_vdim -> .)
    PRINT           reduce using rule 112 (gen_vdim -> .)
    READ            reduce using rule 112 (gen_vdim -> .)
    ID              reduce using rule 112 (gen_vdim -> .)
    LPAREN          reduce using rule 112 (gen_vdim -> .)
    CTESTR          reduce using rule 112 (gen_vdim -> .)
    CTEINT          reduce using rule 112 (gen_vdim -> .)
    CTEFLT          reduce using rule 112 (gen_vdim -> .)
    FALSE           reduce using rule 112 (gen_vdim -> .)
    TRUE            reduce using rule 112 (gen_vdim -> .)
    $end            reduce using rule 112 (gen_vdim -> .)
    SCOLON          reduce using rule 112 (gen_vdim -> .)
    RPAREN          reduce using rule 112 (gen_vdim -> .)
    COMMA           reduce using rule 112 (gen_vdim -> .)
    RBRCKT          reduce using rule 112 (gen_vdim -> .)
    RCURL           reduce using rule 112 (gen_vdim -> .)

    gen_vdim                       shift and go to state 202

state 168

    (8) main -> MAIN LPAREN RPAREN LCURL maindv .
    MAIN            reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    FUNCTION        reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    VAR             reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    RETURN          reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    WHILE           reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    IF              reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    PRINT           reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    READ            reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    ID              reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    LPAREN          reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    CTESTR          reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    CTEINT          reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    CTEFLT          reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    FALSE           reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    TRUE            reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)
    $end            reduce using rule 8 (main -> MAIN LPAREN RPAREN LCURL maindv .)


state 169

    (9) maindv -> RCURL .
    MAIN            reduce using rule 9 (maindv -> RCURL .)
    FUNCTION        reduce using rule 9 (maindv -> RCURL .)
    VAR             reduce using rule 9 (maindv -> RCURL .)
    RETURN          reduce using rule 9 (maindv -> RCURL .)
    WHILE           reduce using rule 9 (maindv -> RCURL .)
    IF              reduce using rule 9 (maindv -> RCURL .)
    PRINT           reduce using rule 9 (maindv -> RCURL .)
    READ            reduce using rule 9 (maindv -> RCURL .)
    ID              reduce using rule 9 (maindv -> RCURL .)
    LPAREN          reduce using rule 9 (maindv -> RCURL .)
    CTESTR          reduce using rule 9 (maindv -> RCURL .)
    CTEINT          reduce using rule 9 (maindv -> RCURL .)
    CTEFLT          reduce using rule 9 (maindv -> RCURL .)
    FALSE           reduce using rule 9 (maindv -> RCURL .)
    TRUE            reduce using rule 9 (maindv -> RCURL .)
    $end            reduce using rule 9 (maindv -> RCURL .)


state 170

    (10) maindv -> statement . maindv
    (9) maindv -> . RCURL
    (10) maindv -> . statement maindv
    (11) maindv -> . vars maindv
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           shift and go to state 169
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    statement                      shift and go to state 170
    maindv                         shift and go to state 203
    vars                           shift and go to state 171
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 171

    (11) maindv -> vars . maindv
    (9) maindv -> . RCURL
    (10) maindv -> . statement maindv
    (11) maindv -> . vars maindv
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           shift and go to state 169
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    vars                           shift and go to state 171
    maindv                         shift and go to state 204
    statement                      shift and go to state 170
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 172

    (65) pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .
    DIV             reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    MULT            reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    EXP             reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    SUB             reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    ADD             reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    GTEQ            reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    LTEQ            reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    NOTEQ           reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    EQ              reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    GT              reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    LT              reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    OR              reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    AND             reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    MAIN            reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    FUNCTION        reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    VAR             reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    RETURN          reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    WHILE           reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    IF              reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    PRINT           reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    READ            reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    ID              reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    LPAREN          reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    CTESTR          reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    CTEINT          reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    CTEFLT          reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    FALSE           reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    TRUE            reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    $end            reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    SCOLON          reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    RPAREN          reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    RBRCKT          reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    RCURL           reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)
    COMMA           reduce using rule 65 (pexp -> LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx .)


state 173

    (23) function -> FUNCTION typefunc ID save_func LPAREN . funcparams RPAREN LCURL add_fqid funcstat remove_fscope
    (26) funcparams -> . empty
    (27) funcparams -> . params
    (101) empty -> .
    (28) params -> . vtype ID save_param paramsdv
    (13) vtype -> . TSTR
    (14) vtype -> . TFLT
    (15) vtype -> . TINT
    (16) vtype -> . TBOOL
    RPAREN          reduce using rule 101 (empty -> .)
    TSTR            shift and go to state 58
    TFLT            shift and go to state 59
    TINT            shift and go to state 60
    TBOOL           shift and go to state 61

    funcparams                     shift and go to state 205
    empty                          shift and go to state 206
    params                         shift and go to state 207
    vtype                          shift and go to state 208

state 174

    (12) vars -> VAR vtype add_cvtype COLON listids . SCOLON reset_vtype
    SCOLON          shift and go to state 209


state 175

    (17) listids -> ID . LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv
    (18) listids -> ID . store_varid listdv
    (105) store_varid -> .
    LBRCKT          shift and go to state 210
    COMMA           reduce using rule 105 (store_varid -> .)
    SCOLON          reduce using rule 105 (store_varid -> .)

    store_varid                    shift and go to state 211

state 176

    (89) wwhile -> WHILE add_wpquad LPAREN expr RPAREN . gen_wquad DO LCURL whiledv add_wquad
    (134) gen_wquad -> .
    DO              reduce using rule 134 (gen_wquad -> .)

    gen_wquad                      shift and go to state 212

state 177

    (84) cond -> IF LPAREN expr RPAREN LCURL . gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> IF LPAREN expr RPAREN LCURL . gen_cond_quad condst RCURL add_jquad
    (130) gen_cond_quad -> .
    RETURN          reduce using rule 130 (gen_cond_quad -> .)
    WHILE           reduce using rule 130 (gen_cond_quad -> .)
    IF              reduce using rule 130 (gen_cond_quad -> .)
    PRINT           reduce using rule 130 (gen_cond_quad -> .)
    READ            reduce using rule 130 (gen_cond_quad -> .)
    ID              reduce using rule 130 (gen_cond_quad -> .)
    LPAREN          reduce using rule 130 (gen_cond_quad -> .)
    CTESTR          reduce using rule 130 (gen_cond_quad -> .)
    CTEINT          reduce using rule 130 (gen_cond_quad -> .)
    CTEFLT          reduce using rule 130 (gen_cond_quad -> .)
    FALSE           reduce using rule 130 (gen_cond_quad -> .)
    TRUE            reduce using rule 130 (gen_cond_quad -> .)

    gen_cond_quad                  shift and go to state 213

state 178

    (77) pprint -> PRINT LPAREN printlist RPAREN gen_print_quads .
    SCOLON          reduce using rule 77 (pprint -> PRINT LPAREN printlist RPAREN gen_print_quads .)


state 179

    (80) printlistdv -> COMMA printerm .
    RPAREN          reduce using rule 80 (printlistdv -> COMMA printerm .)


state 180

    (82) printerm -> varidx add_vidx push_printidl .
    COMMA           reduce using rule 82 (printerm -> varidx add_vidx push_printidl .)
    RPAREN          reduce using rule 82 (printerm -> varidx add_vidx push_printidl .)


state 181

    (75) read -> READ LPAREN varidx add_vidx gen_idxread . RPAREN
    RPAREN          shift and go to state 214


state 182

    (76) read -> READ LPAREN ID RPAREN gen_read .
    SCOLON          reduce using rule 76 (read -> READ LPAREN ID RPAREN gen_read .)


state 183

    (66) assign -> varidx add_vidx ASGN expr gen_idx_assign .
    SCOLON          reduce using rule 66 (assign -> varidx add_vidx ASGN expr gen_idx_assign .)


state 184

    (45) exprdv -> bexp OR add_oper exprdv check_expr_st .
    MAIN            reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    FUNCTION        reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    VAR             reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    RETURN          reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    WHILE           reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    IF              reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    PRINT           reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    READ            reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    ID              reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    LPAREN          reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    CTESTR          reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    CTEINT          reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    CTEFLT          reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    FALSE           reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    TRUE            reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    $end            reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    SCOLON          reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    RPAREN          reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    RBRCKT          reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    RCURL           reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)
    COMMA           reduce using rule 45 (exprdv -> bexp OR add_oper exprdv check_expr_st .)


state 185

    (46) exprdv -> bexp AND add_oper exprdv check_expr_st .
    MAIN            reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    FUNCTION        reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    VAR             reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    RETURN          reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    WHILE           reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    IF              reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    PRINT           reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    READ            reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    ID              reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    LPAREN          reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    CTESTR          reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    CTEINT          reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    CTEFLT          reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    FALSE           reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    TRUE            reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    $end            reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    SCOLON          reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    RPAREN          reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    RBRCKT          reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    RCURL           reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)
    COMMA           reduce using rule 46 (exprdv -> bexp AND add_oper exprdv check_expr_st .)


state 186

    (48) bexp -> asexp GTEQ add_oper bexp check_bexp_st .
    OR              reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    AND             reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    MAIN            reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    FUNCTION        reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    VAR             reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    IF              reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    READ            reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    ID              reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    $end            reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 48 (bexp -> asexp GTEQ add_oper bexp check_bexp_st .)


state 187

    (49) bexp -> asexp LTEQ add_oper bexp check_bexp_st .
    OR              reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    AND             reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    MAIN            reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    FUNCTION        reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    VAR             reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    IF              reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    READ            reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    ID              reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    $end            reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 49 (bexp -> asexp LTEQ add_oper bexp check_bexp_st .)


state 188

    (50) bexp -> asexp NOTEQ add_oper bexp check_bexp_st .
    OR              reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    AND             reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    MAIN            reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    FUNCTION        reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    VAR             reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    IF              reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    READ            reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    ID              reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    $end            reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 50 (bexp -> asexp NOTEQ add_oper bexp check_bexp_st .)


state 189

    (51) bexp -> asexp EQ add_oper bexp check_bexp_st .
    OR              reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    AND             reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    MAIN            reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    FUNCTION        reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    VAR             reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    IF              reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    READ            reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    ID              reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    $end            reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 51 (bexp -> asexp EQ add_oper bexp check_bexp_st .)


state 190

    (52) bexp -> asexp GT add_oper bexp check_bexp_st .
    OR              reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    AND             reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    MAIN            reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    FUNCTION        reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    VAR             reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    IF              reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    READ            reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    ID              reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    $end            reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 52 (bexp -> asexp GT add_oper bexp check_bexp_st .)


state 191

    (53) bexp -> asexp LT add_oper bexp check_bexp_st .
    OR              reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    AND             reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    MAIN            reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    FUNCTION        reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    VAR             reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    RETURN          reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    WHILE           reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    IF              reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    PRINT           reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    READ            reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    ID              reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    LPAREN          reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    CTESTR          reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    CTEINT          reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    CTEFLT          reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    FALSE           reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    TRUE            reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    $end            reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    SCOLON          reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    RPAREN          reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    RBRCKT          reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    RCURL           reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)
    COMMA           reduce using rule 53 (bexp -> asexp LT add_oper bexp check_bexp_st .)


state 192

    (55) asexp -> emdexp SUB add_oper asexp check_asexp_st .
    GTEQ            reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    LTEQ            reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    NOTEQ           reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    EQ              reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    GT              reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    LT              reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    OR              reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    AND             reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    MAIN            reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    FUNCTION        reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    VAR             reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    RETURN          reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    WHILE           reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    IF              reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    PRINT           reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    READ            reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    ID              reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    LPAREN          reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    CTESTR          reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    CTEINT          reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    CTEFLT          reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    FALSE           reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    TRUE            reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    $end            reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    SCOLON          reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    RPAREN          reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    RBRCKT          reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    RCURL           reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)
    COMMA           reduce using rule 55 (asexp -> emdexp SUB add_oper asexp check_asexp_st .)


state 193

    (56) asexp -> emdexp ADD add_oper asexp check_asexp_st .
    GTEQ            reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    LTEQ            reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    NOTEQ           reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    EQ              reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    GT              reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    LT              reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    OR              reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    AND             reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    MAIN            reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    FUNCTION        reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    VAR             reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    RETURN          reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    WHILE           reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    IF              reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    PRINT           reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    READ            reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    ID              reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    LPAREN          reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    CTESTR          reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    CTEINT          reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    CTEFLT          reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    FALSE           reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    TRUE            reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    $end            reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    SCOLON          reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    RPAREN          reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    RBRCKT          reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    RCURL           reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)
    COMMA           reduce using rule 56 (asexp -> emdexp ADD add_oper asexp check_asexp_st .)


state 194

    (58) emdexp -> pexp DIV add_oper emdexp check_emdexp_st .
    SUB             reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    ADD             reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    GTEQ            reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    LTEQ            reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    NOTEQ           reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    EQ              reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    GT              reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    LT              reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    OR              reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    AND             reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    MAIN            reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    FUNCTION        reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    VAR             reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    RETURN          reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    WHILE           reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    IF              reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    PRINT           reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    READ            reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    ID              reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    LPAREN          reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    CTESTR          reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    CTEINT          reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    CTEFLT          reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    FALSE           reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    TRUE            reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    $end            reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    SCOLON          reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    RPAREN          reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    RBRCKT          reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    RCURL           reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)
    COMMA           reduce using rule 58 (emdexp -> pexp DIV add_oper emdexp check_emdexp_st .)


state 195

    (59) emdexp -> pexp MULT add_oper emdexp check_emdexp_st .
    SUB             reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    ADD             reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    GTEQ            reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    LTEQ            reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    NOTEQ           reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    EQ              reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    GT              reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    LT              reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    OR              reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    AND             reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    MAIN            reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    FUNCTION        reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    VAR             reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    RETURN          reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    WHILE           reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    IF              reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    PRINT           reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    READ            reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    ID              reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    LPAREN          reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    CTESTR          reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    CTEINT          reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    CTEFLT          reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    FALSE           reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    TRUE            reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    $end            reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    SCOLON          reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    RPAREN          reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    RBRCKT          reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    RCURL           reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)
    COMMA           reduce using rule 59 (emdexp -> pexp MULT add_oper emdexp check_emdexp_st .)


state 196

    (60) emdexp -> pexp EXP add_oper emdexp check_emdexp_st .
    SUB             reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    ADD             reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    GTEQ            reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    LTEQ            reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    NOTEQ           reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    EQ              reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    GT              reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    LT              reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    OR              reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    AND             reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    MAIN            reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    FUNCTION        reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    VAR             reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    RETURN          reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    WHILE           reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    IF              reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    PRINT           reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    READ            reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    ID              reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    LPAREN          reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    CTESTR          reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    CTEINT          reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    CTEFLT          reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    FALSE           reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    TRUE            reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    $end            reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    SCOLON          reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    RPAREN          reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    RBRCKT          reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    RCURL           reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)
    COMMA           reduce using rule 60 (emdexp -> pexp EXP add_oper emdexp check_emdexp_st .)


state 197

    (74) fcallterm -> ID ASGN . expr add_params
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 215
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 198

    (69) funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN . add_curr_pquad
    (144) add_curr_pquad -> .
    SCOLON          reduce using rule 144 (add_curr_pquad -> .)
    DIV             reduce using rule 144 (add_curr_pquad -> .)
    MULT            reduce using rule 144 (add_curr_pquad -> .)
    EXP             reduce using rule 144 (add_curr_pquad -> .)
    SUB             reduce using rule 144 (add_curr_pquad -> .)
    ADD             reduce using rule 144 (add_curr_pquad -> .)
    GTEQ            reduce using rule 144 (add_curr_pquad -> .)
    LTEQ            reduce using rule 144 (add_curr_pquad -> .)
    NOTEQ           reduce using rule 144 (add_curr_pquad -> .)
    EQ              reduce using rule 144 (add_curr_pquad -> .)
    GT              reduce using rule 144 (add_curr_pquad -> .)
    LT              reduce using rule 144 (add_curr_pquad -> .)
    OR              reduce using rule 144 (add_curr_pquad -> .)
    AND             reduce using rule 144 (add_curr_pquad -> .)
    MAIN            reduce using rule 144 (add_curr_pquad -> .)
    FUNCTION        reduce using rule 144 (add_curr_pquad -> .)
    VAR             reduce using rule 144 (add_curr_pquad -> .)
    RETURN          reduce using rule 144 (add_curr_pquad -> .)
    WHILE           reduce using rule 144 (add_curr_pquad -> .)
    IF              reduce using rule 144 (add_curr_pquad -> .)
    PRINT           reduce using rule 144 (add_curr_pquad -> .)
    READ            reduce using rule 144 (add_curr_pquad -> .)
    ID              reduce using rule 144 (add_curr_pquad -> .)
    LPAREN          reduce using rule 144 (add_curr_pquad -> .)
    CTESTR          reduce using rule 144 (add_curr_pquad -> .)
    CTEINT          reduce using rule 144 (add_curr_pquad -> .)
    CTEFLT          reduce using rule 144 (add_curr_pquad -> .)
    FALSE           reduce using rule 144 (add_curr_pquad -> .)
    TRUE            reduce using rule 144 (add_curr_pquad -> .)
    $end            reduce using rule 144 (add_curr_pquad -> .)
    RPAREN          reduce using rule 144 (add_curr_pquad -> .)
    RBRCKT          reduce using rule 144 (add_curr_pquad -> .)
    RCURL           reduce using rule 144 (add_curr_pquad -> .)
    COMMA           reduce using rule 144 (add_curr_pquad -> .)

    add_curr_pquad                 shift and go to state 216

state 199

    (71) fcallparams -> fcallterm fcallparamdv .
    RPAREN          reduce using rule 71 (fcallparams -> fcallterm fcallparamdv .)


state 200

    (72) fcallparamdv -> empty .
    RPAREN          reduce using rule 72 (fcallparamdv -> empty .)


state 201

    (73) fcallparamdv -> COMMA . fcallparams
    (70) fcallparams -> . empty
    (71) fcallparams -> . fcallterm fcallparamdv
    (101) empty -> .
    (74) fcallterm -> . ID ASGN expr add_params
    RPAREN          reduce using rule 101 (empty -> .)
    ID              shift and go to state 163

    fcallparams                    shift and go to state 217
    empty                          shift and go to state 165
    fcallterm                      shift and go to state 166

state 202

    (98) varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim . arrindex
    (99) arrindex -> . empty
    (100) arrindex -> . LBRCKT expr RBRCKT gen_vdim arrindex
    (101) empty -> .
    LBRCKT          shift and go to state 218
    ASGN            reduce using rule 101 (empty -> .)
    DIV             reduce using rule 101 (empty -> .)
    MULT            reduce using rule 101 (empty -> .)
    EXP             reduce using rule 101 (empty -> .)
    SUB             reduce using rule 101 (empty -> .)
    ADD             reduce using rule 101 (empty -> .)
    GTEQ            reduce using rule 101 (empty -> .)
    LTEQ            reduce using rule 101 (empty -> .)
    NOTEQ           reduce using rule 101 (empty -> .)
    EQ              reduce using rule 101 (empty -> .)
    GT              reduce using rule 101 (empty -> .)
    LT              reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    MAIN            reduce using rule 101 (empty -> .)
    FUNCTION        reduce using rule 101 (empty -> .)
    VAR             reduce using rule 101 (empty -> .)
    RETURN          reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    ID              reduce using rule 101 (empty -> .)
    LPAREN          reduce using rule 101 (empty -> .)
    CTESTR          reduce using rule 101 (empty -> .)
    CTEINT          reduce using rule 101 (empty -> .)
    CTEFLT          reduce using rule 101 (empty -> .)
    FALSE           reduce using rule 101 (empty -> .)
    TRUE            reduce using rule 101 (empty -> .)
    $end            reduce using rule 101 (empty -> .)
    SCOLON          reduce using rule 101 (empty -> .)
    RPAREN          reduce using rule 101 (empty -> .)
    COMMA           reduce using rule 101 (empty -> .)
    RBRCKT          reduce using rule 101 (empty -> .)
    RCURL           reduce using rule 101 (empty -> .)

    arrindex                       shift and go to state 219
    empty                          shift and go to state 220

state 203

    (10) maindv -> statement maindv .
    MAIN            reduce using rule 10 (maindv -> statement maindv .)
    FUNCTION        reduce using rule 10 (maindv -> statement maindv .)
    VAR             reduce using rule 10 (maindv -> statement maindv .)
    RETURN          reduce using rule 10 (maindv -> statement maindv .)
    WHILE           reduce using rule 10 (maindv -> statement maindv .)
    IF              reduce using rule 10 (maindv -> statement maindv .)
    PRINT           reduce using rule 10 (maindv -> statement maindv .)
    READ            reduce using rule 10 (maindv -> statement maindv .)
    ID              reduce using rule 10 (maindv -> statement maindv .)
    LPAREN          reduce using rule 10 (maindv -> statement maindv .)
    CTESTR          reduce using rule 10 (maindv -> statement maindv .)
    CTEINT          reduce using rule 10 (maindv -> statement maindv .)
    CTEFLT          reduce using rule 10 (maindv -> statement maindv .)
    FALSE           reduce using rule 10 (maindv -> statement maindv .)
    TRUE            reduce using rule 10 (maindv -> statement maindv .)
    $end            reduce using rule 10 (maindv -> statement maindv .)


state 204

    (11) maindv -> vars maindv .
    MAIN            reduce using rule 11 (maindv -> vars maindv .)
    FUNCTION        reduce using rule 11 (maindv -> vars maindv .)
    VAR             reduce using rule 11 (maindv -> vars maindv .)
    RETURN          reduce using rule 11 (maindv -> vars maindv .)
    WHILE           reduce using rule 11 (maindv -> vars maindv .)
    IF              reduce using rule 11 (maindv -> vars maindv .)
    PRINT           reduce using rule 11 (maindv -> vars maindv .)
    READ            reduce using rule 11 (maindv -> vars maindv .)
    ID              reduce using rule 11 (maindv -> vars maindv .)
    LPAREN          reduce using rule 11 (maindv -> vars maindv .)
    CTESTR          reduce using rule 11 (maindv -> vars maindv .)
    CTEINT          reduce using rule 11 (maindv -> vars maindv .)
    CTEFLT          reduce using rule 11 (maindv -> vars maindv .)
    FALSE           reduce using rule 11 (maindv -> vars maindv .)
    TRUE            reduce using rule 11 (maindv -> vars maindv .)
    $end            reduce using rule 11 (maindv -> vars maindv .)


state 205

    (23) function -> FUNCTION typefunc ID save_func LPAREN funcparams . RPAREN LCURL add_fqid funcstat remove_fscope
    RPAREN          shift and go to state 221


state 206

    (26) funcparams -> empty .
    RPAREN          reduce using rule 26 (funcparams -> empty .)


state 207

    (27) funcparams -> params .
    RPAREN          reduce using rule 27 (funcparams -> params .)


state 208

    (28) params -> vtype . ID save_param paramsdv
    ID              shift and go to state 222


state 209

    (12) vars -> VAR vtype add_cvtype COLON listids SCOLON . reset_vtype
    (104) reset_vtype -> .
    MAIN            reduce using rule 104 (reset_vtype -> .)
    FUNCTION        reduce using rule 104 (reset_vtype -> .)
    VAR             reduce using rule 104 (reset_vtype -> .)
    RETURN          reduce using rule 104 (reset_vtype -> .)
    WHILE           reduce using rule 104 (reset_vtype -> .)
    IF              reduce using rule 104 (reset_vtype -> .)
    PRINT           reduce using rule 104 (reset_vtype -> .)
    READ            reduce using rule 104 (reset_vtype -> .)
    ID              reduce using rule 104 (reset_vtype -> .)
    LPAREN          reduce using rule 104 (reset_vtype -> .)
    CTESTR          reduce using rule 104 (reset_vtype -> .)
    CTEINT          reduce using rule 104 (reset_vtype -> .)
    CTEFLT          reduce using rule 104 (reset_vtype -> .)
    FALSE           reduce using rule 104 (reset_vtype -> .)
    TRUE            reduce using rule 104 (reset_vtype -> .)
    $end            reduce using rule 104 (reset_vtype -> .)
    RCURL           reduce using rule 104 (reset_vtype -> .)

    reset_vtype                    shift and go to state 223

state 210

    (17) listids -> ID LBRCKT . CTEINT RBRCKT store_arrid dimlist def_dims listdv
    CTEINT          shift and go to state 224


state 211

    (18) listids -> ID store_varid . listdv
    (21) listdv -> . empty
    (22) listdv -> . COMMA listids
    (101) empty -> .
    COMMA           shift and go to state 227
    SCOLON          reduce using rule 101 (empty -> .)

    listdv                         shift and go to state 225
    empty                          shift and go to state 226

state 212

    (89) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad . DO LCURL whiledv add_wquad
    DO              shift and go to state 228


state 213

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad . condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad . condst RCURL add_jquad
    (86) condst -> . statement condstdv
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 24
    condst                         shift and go to state 229
    statement                      shift and go to state 230
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 214

    (75) read -> READ LPAREN varidx add_vidx gen_idxread RPAREN .
    SCOLON          reduce using rule 75 (read -> READ LPAREN varidx add_vidx gen_idxread RPAREN .)


state 215

    (74) fcallterm -> ID ASGN expr . add_params
    (143) add_params -> .
    COMMA           reduce using rule 143 (add_params -> .)
    RPAREN          reduce using rule 143 (add_params -> .)

    add_params                     shift and go to state 231

state 216

    (69) funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .
    SCOLON          reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    DIV             reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    MULT            reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    EXP             reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    SUB             reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    ADD             reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    GTEQ            reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    LTEQ            reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    NOTEQ           reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    EQ              reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    GT              reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    LT              reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    OR              reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    AND             reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    MAIN            reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    FUNCTION        reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    VAR             reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    RETURN          reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    WHILE           reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    IF              reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    PRINT           reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    READ            reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    ID              reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    LPAREN          reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    CTESTR          reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    CTEINT          reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    CTEFLT          reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    FALSE           reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    TRUE            reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    $end            reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    RPAREN          reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    RBRCKT          reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    RCURL           reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)
    COMMA           reduce using rule 69 (funccall -> ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad .)


state 217

    (73) fcallparamdv -> COMMA fcallparams .
    RPAREN          reduce using rule 73 (fcallparamdv -> COMMA fcallparams .)


state 218

    (100) arrindex -> LBRCKT . expr RBRCKT gen_vdim arrindex
    (43) expr -> . exprdv
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    ID              shift and go to state 73
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 232
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    funccall                       shift and go to state 71
    varidx                         shift and go to state 72
    const                          shift and go to state 36

state 219

    (98) varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .
    ASGN            reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    DIV             reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    MULT            reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    EXP             reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    SUB             reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    ADD             reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    GTEQ            reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    LTEQ            reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    NOTEQ           reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    EQ              reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    GT              reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    LT              reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    OR              reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    AND             reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    MAIN            reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    FUNCTION        reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    VAR             reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    RETURN          reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    WHILE           reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    IF              reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    PRINT           reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    READ            reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    ID              reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    LPAREN          reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    CTESTR          reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    CTEINT          reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    CTEFLT          reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    FALSE           reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    TRUE            reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    $end            reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    SCOLON          reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    RPAREN          reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    COMMA           reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    RBRCKT          reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)
    RCURL           reduce using rule 98 (varidx -> ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex .)


state 220

    (99) arrindex -> empty .
    ASGN            reduce using rule 99 (arrindex -> empty .)
    DIV             reduce using rule 99 (arrindex -> empty .)
    MULT            reduce using rule 99 (arrindex -> empty .)
    EXP             reduce using rule 99 (arrindex -> empty .)
    SUB             reduce using rule 99 (arrindex -> empty .)
    ADD             reduce using rule 99 (arrindex -> empty .)
    GTEQ            reduce using rule 99 (arrindex -> empty .)
    LTEQ            reduce using rule 99 (arrindex -> empty .)
    NOTEQ           reduce using rule 99 (arrindex -> empty .)
    EQ              reduce using rule 99 (arrindex -> empty .)
    GT              reduce using rule 99 (arrindex -> empty .)
    LT              reduce using rule 99 (arrindex -> empty .)
    OR              reduce using rule 99 (arrindex -> empty .)
    AND             reduce using rule 99 (arrindex -> empty .)
    MAIN            reduce using rule 99 (arrindex -> empty .)
    FUNCTION        reduce using rule 99 (arrindex -> empty .)
    VAR             reduce using rule 99 (arrindex -> empty .)
    RETURN          reduce using rule 99 (arrindex -> empty .)
    WHILE           reduce using rule 99 (arrindex -> empty .)
    IF              reduce using rule 99 (arrindex -> empty .)
    PRINT           reduce using rule 99 (arrindex -> empty .)
    READ            reduce using rule 99 (arrindex -> empty .)
    ID              reduce using rule 99 (arrindex -> empty .)
    LPAREN          reduce using rule 99 (arrindex -> empty .)
    CTESTR          reduce using rule 99 (arrindex -> empty .)
    CTEINT          reduce using rule 99 (arrindex -> empty .)
    CTEFLT          reduce using rule 99 (arrindex -> empty .)
    FALSE           reduce using rule 99 (arrindex -> empty .)
    TRUE            reduce using rule 99 (arrindex -> empty .)
    $end            reduce using rule 99 (arrindex -> empty .)
    SCOLON          reduce using rule 99 (arrindex -> empty .)
    RPAREN          reduce using rule 99 (arrindex -> empty .)
    COMMA           reduce using rule 99 (arrindex -> empty .)
    RBRCKT          reduce using rule 99 (arrindex -> empty .)
    RCURL           reduce using rule 99 (arrindex -> empty .)


state 221

    (23) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN . LCURL add_fqid funcstat remove_fscope
    LCURL           shift and go to state 233


state 222

    (28) params -> vtype ID . save_param paramsdv
    (137) save_param -> .
    COMMA           reduce using rule 137 (save_param -> .)
    RPAREN          reduce using rule 137 (save_param -> .)

    save_param                     shift and go to state 234

state 223

    (12) vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .
    MAIN            reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    FUNCTION        reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    VAR             reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    RETURN          reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    WHILE           reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    IF              reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    PRINT           reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    READ            reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    ID              reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    LPAREN          reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    CTESTR          reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    CTEINT          reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    CTEFLT          reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    FALSE           reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    TRUE            reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    $end            reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)
    RCURL           reduce using rule 12 (vars -> VAR vtype add_cvtype COLON listids SCOLON reset_vtype .)


state 224

    (17) listids -> ID LBRCKT CTEINT . RBRCKT store_arrid dimlist def_dims listdv
    RBRCKT          shift and go to state 235


state 225

    (18) listids -> ID store_varid listdv .
    SCOLON          reduce using rule 18 (listids -> ID store_varid listdv .)


state 226

    (21) listdv -> empty .
    SCOLON          reduce using rule 21 (listdv -> empty .)


state 227

    (22) listdv -> COMMA . listids
    (17) listids -> . ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv
    (18) listids -> . ID store_varid listdv
    ID              shift and go to state 175

    listids                        shift and go to state 236

state 228

    (89) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO . LCURL whiledv add_wquad
    LCURL           shift and go to state 237


state 229

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst . RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst . RCURL add_jquad
    RCURL           shift and go to state 238


state 230

    (86) condst -> statement . condstdv
    (87) condstdv -> . empty
    (88) condstdv -> . condst
    (101) empty -> .
    (86) condst -> . statement condstdv
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           reduce using rule 101 (empty -> .)
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    statement                      shift and go to state 230
    condstdv                       shift and go to state 239
    empty                          shift and go to state 240
    condst                         shift and go to state 241
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 231

    (74) fcallterm -> ID ASGN expr add_params .
    COMMA           reduce using rule 74 (fcallterm -> ID ASGN expr add_params .)
    RPAREN          reduce using rule 74 (fcallterm -> ID ASGN expr add_params .)


state 232

    (100) arrindex -> LBRCKT expr . RBRCKT gen_vdim arrindex
    RBRCKT          shift and go to state 242


state 233

    (23) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL . add_fqid funcstat remove_fscope
    (138) add_fqid -> .
    RCURL           reduce using rule 138 (add_fqid -> .)
    VAR             reduce using rule 138 (add_fqid -> .)
    RETURN          reduce using rule 138 (add_fqid -> .)
    WHILE           reduce using rule 138 (add_fqid -> .)
    IF              reduce using rule 138 (add_fqid -> .)
    PRINT           reduce using rule 138 (add_fqid -> .)
    READ            reduce using rule 138 (add_fqid -> .)
    ID              reduce using rule 138 (add_fqid -> .)
    LPAREN          reduce using rule 138 (add_fqid -> .)
    CTESTR          reduce using rule 138 (add_fqid -> .)
    CTEINT          reduce using rule 138 (add_fqid -> .)
    CTEFLT          reduce using rule 138 (add_fqid -> .)
    FALSE           reduce using rule 138 (add_fqid -> .)
    TRUE            reduce using rule 138 (add_fqid -> .)

    add_fqid                       shift and go to state 243

state 234

    (28) params -> vtype ID save_param . paramsdv
    (29) paramsdv -> . empty
    (30) paramsdv -> . COMMA params
    (101) empty -> .
    COMMA           shift and go to state 246
    RPAREN          reduce using rule 101 (empty -> .)

    paramsdv                       shift and go to state 244
    empty                          shift and go to state 245

state 235

    (17) listids -> ID LBRCKT CTEINT RBRCKT . store_arrid dimlist def_dims listdv
    (106) store_arrid -> .
    LBRCKT          reduce using rule 106 (store_arrid -> .)
    COMMA           reduce using rule 106 (store_arrid -> .)
    SCOLON          reduce using rule 106 (store_arrid -> .)

    store_arrid                    shift and go to state 247

state 236

    (22) listdv -> COMMA listids .
    SCOLON          reduce using rule 22 (listdv -> COMMA listids .)


state 237

    (89) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL . whiledv add_wquad
    (90) whiledv -> . RCURL
    (91) whiledv -> . statement whiledv
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           shift and go to state 249
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 24
    whiledv                        shift and go to state 248
    statement                      shift and go to state 250
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 238

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL . gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL . add_jquad
    (132) gen_egoto -> .
    (131) add_jquad -> .
    ELSE            reduce using rule 132 (gen_egoto -> .)
    MAIN            reduce using rule 131 (add_jquad -> .)
    FUNCTION        reduce using rule 131 (add_jquad -> .)
    VAR             reduce using rule 131 (add_jquad -> .)
    RETURN          reduce using rule 131 (add_jquad -> .)
    WHILE           reduce using rule 131 (add_jquad -> .)
    IF              reduce using rule 131 (add_jquad -> .)
    PRINT           reduce using rule 131 (add_jquad -> .)
    READ            reduce using rule 131 (add_jquad -> .)
    ID              reduce using rule 131 (add_jquad -> .)
    LPAREN          reduce using rule 131 (add_jquad -> .)
    CTESTR          reduce using rule 131 (add_jquad -> .)
    CTEINT          reduce using rule 131 (add_jquad -> .)
    CTEFLT          reduce using rule 131 (add_jquad -> .)
    FALSE           reduce using rule 131 (add_jquad -> .)
    TRUE            reduce using rule 131 (add_jquad -> .)
    $end            reduce using rule 131 (add_jquad -> .)
    RCURL           reduce using rule 131 (add_jquad -> .)

    gen_egoto                      shift and go to state 251
    add_jquad                      shift and go to state 252

state 239

    (86) condst -> statement condstdv .
    RCURL           reduce using rule 86 (condst -> statement condstdv .)


state 240

    (87) condstdv -> empty .
    RCURL           reduce using rule 87 (condstdv -> empty .)


state 241

    (88) condstdv -> condst .
    RCURL           reduce using rule 88 (condstdv -> condst .)


state 242

    (100) arrindex -> LBRCKT expr RBRCKT . gen_vdim arrindex
    (112) gen_vdim -> .
    LBRCKT          reduce using rule 112 (gen_vdim -> .)
    ASGN            reduce using rule 112 (gen_vdim -> .)
    DIV             reduce using rule 112 (gen_vdim -> .)
    MULT            reduce using rule 112 (gen_vdim -> .)
    EXP             reduce using rule 112 (gen_vdim -> .)
    SUB             reduce using rule 112 (gen_vdim -> .)
    ADD             reduce using rule 112 (gen_vdim -> .)
    GTEQ            reduce using rule 112 (gen_vdim -> .)
    LTEQ            reduce using rule 112 (gen_vdim -> .)
    NOTEQ           reduce using rule 112 (gen_vdim -> .)
    EQ              reduce using rule 112 (gen_vdim -> .)
    GT              reduce using rule 112 (gen_vdim -> .)
    LT              reduce using rule 112 (gen_vdim -> .)
    OR              reduce using rule 112 (gen_vdim -> .)
    AND             reduce using rule 112 (gen_vdim -> .)
    MAIN            reduce using rule 112 (gen_vdim -> .)
    FUNCTION        reduce using rule 112 (gen_vdim -> .)
    VAR             reduce using rule 112 (gen_vdim -> .)
    RETURN          reduce using rule 112 (gen_vdim -> .)
    WHILE           reduce using rule 112 (gen_vdim -> .)
    IF              reduce using rule 112 (gen_vdim -> .)
    PRINT           reduce using rule 112 (gen_vdim -> .)
    READ            reduce using rule 112 (gen_vdim -> .)
    ID              reduce using rule 112 (gen_vdim -> .)
    LPAREN          reduce using rule 112 (gen_vdim -> .)
    CTESTR          reduce using rule 112 (gen_vdim -> .)
    CTEINT          reduce using rule 112 (gen_vdim -> .)
    CTEFLT          reduce using rule 112 (gen_vdim -> .)
    FALSE           reduce using rule 112 (gen_vdim -> .)
    TRUE            reduce using rule 112 (gen_vdim -> .)
    $end            reduce using rule 112 (gen_vdim -> .)
    SCOLON          reduce using rule 112 (gen_vdim -> .)
    RPAREN          reduce using rule 112 (gen_vdim -> .)
    COMMA           reduce using rule 112 (gen_vdim -> .)
    RBRCKT          reduce using rule 112 (gen_vdim -> .)
    RCURL           reduce using rule 112 (gen_vdim -> .)

    gen_vdim                       shift and go to state 253

state 243

    (23) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid . funcstat remove_fscope
    (31) funcstat -> . RCURL
    (32) funcstat -> . statement funcstat
    (33) funcstat -> . vars funcstat
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           shift and go to state 255
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    funcstat                       shift and go to state 254
    statement                      shift and go to state 256
    vars                           shift and go to state 257
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 244

    (28) params -> vtype ID save_param paramsdv .
    RPAREN          reduce using rule 28 (params -> vtype ID save_param paramsdv .)


state 245

    (29) paramsdv -> empty .
    RPAREN          reduce using rule 29 (paramsdv -> empty .)


state 246

    (30) paramsdv -> COMMA . params
    (28) params -> . vtype ID save_param paramsdv
    (13) vtype -> . TSTR
    (14) vtype -> . TFLT
    (15) vtype -> . TINT
    (16) vtype -> . TBOOL
    TSTR            shift and go to state 58
    TFLT            shift and go to state 59
    TINT            shift and go to state 60
    TBOOL           shift and go to state 61

    params                         shift and go to state 258
    vtype                          shift and go to state 208

state 247

    (17) listids -> ID LBRCKT CTEINT RBRCKT store_arrid . dimlist def_dims listdv
    (19) dimlist -> . empty
    (20) dimlist -> . LBRCKT CTEINT RBRCKT append_dim dimlist
    (101) empty -> .
    LBRCKT          shift and go to state 259
    COMMA           reduce using rule 101 (empty -> .)
    SCOLON          reduce using rule 101 (empty -> .)

    dimlist                        shift and go to state 260
    empty                          shift and go to state 261

state 248

    (89) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv . add_wquad
    (135) add_wquad -> .
    MAIN            reduce using rule 135 (add_wquad -> .)
    FUNCTION        reduce using rule 135 (add_wquad -> .)
    VAR             reduce using rule 135 (add_wquad -> .)
    RETURN          reduce using rule 135 (add_wquad -> .)
    WHILE           reduce using rule 135 (add_wquad -> .)
    IF              reduce using rule 135 (add_wquad -> .)
    PRINT           reduce using rule 135 (add_wquad -> .)
    READ            reduce using rule 135 (add_wquad -> .)
    ID              reduce using rule 135 (add_wquad -> .)
    LPAREN          reduce using rule 135 (add_wquad -> .)
    CTESTR          reduce using rule 135 (add_wquad -> .)
    CTEINT          reduce using rule 135 (add_wquad -> .)
    CTEFLT          reduce using rule 135 (add_wquad -> .)
    FALSE           reduce using rule 135 (add_wquad -> .)
    TRUE            reduce using rule 135 (add_wquad -> .)
    $end            reduce using rule 135 (add_wquad -> .)
    RCURL           reduce using rule 135 (add_wquad -> .)

    add_wquad                      shift and go to state 262

state 249

    (90) whiledv -> RCURL .
    MAIN            reduce using rule 90 (whiledv -> RCURL .)
    FUNCTION        reduce using rule 90 (whiledv -> RCURL .)
    VAR             reduce using rule 90 (whiledv -> RCURL .)
    RETURN          reduce using rule 90 (whiledv -> RCURL .)
    WHILE           reduce using rule 90 (whiledv -> RCURL .)
    IF              reduce using rule 90 (whiledv -> RCURL .)
    PRINT           reduce using rule 90 (whiledv -> RCURL .)
    READ            reduce using rule 90 (whiledv -> RCURL .)
    ID              reduce using rule 90 (whiledv -> RCURL .)
    LPAREN          reduce using rule 90 (whiledv -> RCURL .)
    CTESTR          reduce using rule 90 (whiledv -> RCURL .)
    CTEINT          reduce using rule 90 (whiledv -> RCURL .)
    CTEFLT          reduce using rule 90 (whiledv -> RCURL .)
    FALSE           reduce using rule 90 (whiledv -> RCURL .)
    TRUE            reduce using rule 90 (whiledv -> RCURL .)
    $end            reduce using rule 90 (whiledv -> RCURL .)
    RCURL           reduce using rule 90 (whiledv -> RCURL .)


state 250

    (91) whiledv -> statement . whiledv
    (90) whiledv -> . RCURL
    (91) whiledv -> . statement whiledv
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           shift and go to state 249
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    statement                      shift and go to state 250
    whiledv                        shift and go to state 263
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 251

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto . ELSE LCURL condst RCURL add_jquad
    ELSE            shift and go to state 264


state 252

    (85) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .
    MAIN            reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    FUNCTION        reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    VAR             reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    RETURN          reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    WHILE           reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    IF              reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    PRINT           reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    READ            reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    ID              reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    LPAREN          reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    CTESTR          reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    CTEINT          reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    CTEFLT          reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    FALSE           reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    TRUE            reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    $end            reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)
    RCURL           reduce using rule 85 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad .)


state 253

    (100) arrindex -> LBRCKT expr RBRCKT gen_vdim . arrindex
    (99) arrindex -> . empty
    (100) arrindex -> . LBRCKT expr RBRCKT gen_vdim arrindex
    (101) empty -> .
    LBRCKT          shift and go to state 218
    ASGN            reduce using rule 101 (empty -> .)
    DIV             reduce using rule 101 (empty -> .)
    MULT            reduce using rule 101 (empty -> .)
    EXP             reduce using rule 101 (empty -> .)
    SUB             reduce using rule 101 (empty -> .)
    ADD             reduce using rule 101 (empty -> .)
    GTEQ            reduce using rule 101 (empty -> .)
    LTEQ            reduce using rule 101 (empty -> .)
    NOTEQ           reduce using rule 101 (empty -> .)
    EQ              reduce using rule 101 (empty -> .)
    GT              reduce using rule 101 (empty -> .)
    LT              reduce using rule 101 (empty -> .)
    OR              reduce using rule 101 (empty -> .)
    AND             reduce using rule 101 (empty -> .)
    MAIN            reduce using rule 101 (empty -> .)
    FUNCTION        reduce using rule 101 (empty -> .)
    VAR             reduce using rule 101 (empty -> .)
    RETURN          reduce using rule 101 (empty -> .)
    WHILE           reduce using rule 101 (empty -> .)
    IF              reduce using rule 101 (empty -> .)
    PRINT           reduce using rule 101 (empty -> .)
    READ            reduce using rule 101 (empty -> .)
    ID              reduce using rule 101 (empty -> .)
    LPAREN          reduce using rule 101 (empty -> .)
    CTESTR          reduce using rule 101 (empty -> .)
    CTEINT          reduce using rule 101 (empty -> .)
    CTEFLT          reduce using rule 101 (empty -> .)
    FALSE           reduce using rule 101 (empty -> .)
    TRUE            reduce using rule 101 (empty -> .)
    $end            reduce using rule 101 (empty -> .)
    SCOLON          reduce using rule 101 (empty -> .)
    RPAREN          reduce using rule 101 (empty -> .)
    COMMA           reduce using rule 101 (empty -> .)
    RBRCKT          reduce using rule 101 (empty -> .)
    RCURL           reduce using rule 101 (empty -> .)

    arrindex                       shift and go to state 265
    empty                          shift and go to state 220

state 254

    (23) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat . remove_fscope
    (140) remove_fscope -> .
    MAIN            reduce using rule 140 (remove_fscope -> .)
    FUNCTION        reduce using rule 140 (remove_fscope -> .)
    VAR             reduce using rule 140 (remove_fscope -> .)
    RETURN          reduce using rule 140 (remove_fscope -> .)
    WHILE           reduce using rule 140 (remove_fscope -> .)
    IF              reduce using rule 140 (remove_fscope -> .)
    PRINT           reduce using rule 140 (remove_fscope -> .)
    READ            reduce using rule 140 (remove_fscope -> .)
    ID              reduce using rule 140 (remove_fscope -> .)
    LPAREN          reduce using rule 140 (remove_fscope -> .)
    CTESTR          reduce using rule 140 (remove_fscope -> .)
    CTEINT          reduce using rule 140 (remove_fscope -> .)
    CTEFLT          reduce using rule 140 (remove_fscope -> .)
    FALSE           reduce using rule 140 (remove_fscope -> .)
    TRUE            reduce using rule 140 (remove_fscope -> .)
    $end            reduce using rule 140 (remove_fscope -> .)

    remove_fscope                  shift and go to state 266

state 255

    (31) funcstat -> RCURL .
    MAIN            reduce using rule 31 (funcstat -> RCURL .)
    FUNCTION        reduce using rule 31 (funcstat -> RCURL .)
    VAR             reduce using rule 31 (funcstat -> RCURL .)
    RETURN          reduce using rule 31 (funcstat -> RCURL .)
    WHILE           reduce using rule 31 (funcstat -> RCURL .)
    IF              reduce using rule 31 (funcstat -> RCURL .)
    PRINT           reduce using rule 31 (funcstat -> RCURL .)
    READ            reduce using rule 31 (funcstat -> RCURL .)
    ID              reduce using rule 31 (funcstat -> RCURL .)
    LPAREN          reduce using rule 31 (funcstat -> RCURL .)
    CTESTR          reduce using rule 31 (funcstat -> RCURL .)
    CTEINT          reduce using rule 31 (funcstat -> RCURL .)
    CTEFLT          reduce using rule 31 (funcstat -> RCURL .)
    FALSE           reduce using rule 31 (funcstat -> RCURL .)
    TRUE            reduce using rule 31 (funcstat -> RCURL .)
    $end            reduce using rule 31 (funcstat -> RCURL .)


state 256

    (32) funcstat -> statement . funcstat
    (31) funcstat -> . RCURL
    (32) funcstat -> . statement funcstat
    (33) funcstat -> . vars funcstat
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           shift and go to state 255
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    statement                      shift and go to state 256
    funcstat                       shift and go to state 267
    vars                           shift and go to state 257
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 257

    (33) funcstat -> vars . funcstat
    (31) funcstat -> . RCURL
    (32) funcstat -> . statement funcstat
    (33) funcstat -> . vars funcstat
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (12) vars -> . VAR vtype add_cvtype COLON listids SCOLON reset_vtype
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RCURL           shift and go to state 255
    VAR             shift and go to state 15
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    vars                           shift and go to state 257
    funcstat                       shift and go to state 268
    statement                      shift and go to state 256
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    expr                           shift and go to state 24
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 258

    (30) paramsdv -> COMMA params .
    RPAREN          reduce using rule 30 (paramsdv -> COMMA params .)


state 259

    (20) dimlist -> LBRCKT . CTEINT RBRCKT append_dim dimlist
    CTEINT          shift and go to state 269


state 260

    (17) listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist . def_dims listdv
    (108) def_dims -> .
    COMMA           reduce using rule 108 (def_dims -> .)
    SCOLON          reduce using rule 108 (def_dims -> .)

    def_dims                       shift and go to state 270

state 261

    (19) dimlist -> empty .
    COMMA           reduce using rule 19 (dimlist -> empty .)
    SCOLON          reduce using rule 19 (dimlist -> empty .)


state 262

    (89) wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .
    MAIN            reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    FUNCTION        reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    VAR             reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    RETURN          reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    WHILE           reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    IF              reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    PRINT           reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    READ            reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    ID              reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    LPAREN          reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    CTESTR          reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    CTEINT          reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    CTEFLT          reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    FALSE           reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    TRUE            reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    $end            reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)
    RCURL           reduce using rule 89 (wwhile -> WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad .)


state 263

    (91) whiledv -> statement whiledv .
    MAIN            reduce using rule 91 (whiledv -> statement whiledv .)
    FUNCTION        reduce using rule 91 (whiledv -> statement whiledv .)
    VAR             reduce using rule 91 (whiledv -> statement whiledv .)
    RETURN          reduce using rule 91 (whiledv -> statement whiledv .)
    WHILE           reduce using rule 91 (whiledv -> statement whiledv .)
    IF              reduce using rule 91 (whiledv -> statement whiledv .)
    PRINT           reduce using rule 91 (whiledv -> statement whiledv .)
    READ            reduce using rule 91 (whiledv -> statement whiledv .)
    ID              reduce using rule 91 (whiledv -> statement whiledv .)
    LPAREN          reduce using rule 91 (whiledv -> statement whiledv .)
    CTESTR          reduce using rule 91 (whiledv -> statement whiledv .)
    CTEINT          reduce using rule 91 (whiledv -> statement whiledv .)
    CTEFLT          reduce using rule 91 (whiledv -> statement whiledv .)
    FALSE           reduce using rule 91 (whiledv -> statement whiledv .)
    TRUE            reduce using rule 91 (whiledv -> statement whiledv .)
    $end            reduce using rule 91 (whiledv -> statement whiledv .)
    RCURL           reduce using rule 91 (whiledv -> statement whiledv .)


state 264

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE . LCURL condst RCURL add_jquad
    LCURL           shift and go to state 271


state 265

    (100) arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .
    ASGN            reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    DIV             reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    MULT            reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    EXP             reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    SUB             reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    ADD             reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    GTEQ            reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    LTEQ            reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    NOTEQ           reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    EQ              reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    GT              reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    LT              reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    OR              reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    AND             reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    MAIN            reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    FUNCTION        reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    VAR             reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    RETURN          reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    WHILE           reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    IF              reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    PRINT           reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    READ            reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    ID              reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    LPAREN          reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    CTESTR          reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    CTEINT          reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    CTEFLT          reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    FALSE           reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    TRUE            reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    $end            reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    SCOLON          reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    RPAREN          reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    COMMA           reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    RBRCKT          reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)
    RCURL           reduce using rule 100 (arrindex -> LBRCKT expr RBRCKT gen_vdim arrindex .)


state 266

    (23) function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .
    MAIN            reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    FUNCTION        reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    VAR             reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    RETURN          reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    WHILE           reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    IF              reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    PRINT           reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    READ            reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    ID              reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    LPAREN          reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    CTESTR          reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    CTEINT          reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    CTEFLT          reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    FALSE           reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    TRUE            reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)
    $end            reduce using rule 23 (function -> FUNCTION typefunc ID save_func LPAREN funcparams RPAREN LCURL add_fqid funcstat remove_fscope .)


state 267

    (32) funcstat -> statement funcstat .
    MAIN            reduce using rule 32 (funcstat -> statement funcstat .)
    FUNCTION        reduce using rule 32 (funcstat -> statement funcstat .)
    VAR             reduce using rule 32 (funcstat -> statement funcstat .)
    RETURN          reduce using rule 32 (funcstat -> statement funcstat .)
    WHILE           reduce using rule 32 (funcstat -> statement funcstat .)
    IF              reduce using rule 32 (funcstat -> statement funcstat .)
    PRINT           reduce using rule 32 (funcstat -> statement funcstat .)
    READ            reduce using rule 32 (funcstat -> statement funcstat .)
    ID              reduce using rule 32 (funcstat -> statement funcstat .)
    LPAREN          reduce using rule 32 (funcstat -> statement funcstat .)
    CTESTR          reduce using rule 32 (funcstat -> statement funcstat .)
    CTEINT          reduce using rule 32 (funcstat -> statement funcstat .)
    CTEFLT          reduce using rule 32 (funcstat -> statement funcstat .)
    FALSE           reduce using rule 32 (funcstat -> statement funcstat .)
    TRUE            reduce using rule 32 (funcstat -> statement funcstat .)
    $end            reduce using rule 32 (funcstat -> statement funcstat .)


state 268

    (33) funcstat -> vars funcstat .
    MAIN            reduce using rule 33 (funcstat -> vars funcstat .)
    FUNCTION        reduce using rule 33 (funcstat -> vars funcstat .)
    VAR             reduce using rule 33 (funcstat -> vars funcstat .)
    RETURN          reduce using rule 33 (funcstat -> vars funcstat .)
    WHILE           reduce using rule 33 (funcstat -> vars funcstat .)
    IF              reduce using rule 33 (funcstat -> vars funcstat .)
    PRINT           reduce using rule 33 (funcstat -> vars funcstat .)
    READ            reduce using rule 33 (funcstat -> vars funcstat .)
    ID              reduce using rule 33 (funcstat -> vars funcstat .)
    LPAREN          reduce using rule 33 (funcstat -> vars funcstat .)
    CTESTR          reduce using rule 33 (funcstat -> vars funcstat .)
    CTEINT          reduce using rule 33 (funcstat -> vars funcstat .)
    CTEFLT          reduce using rule 33 (funcstat -> vars funcstat .)
    FALSE           reduce using rule 33 (funcstat -> vars funcstat .)
    TRUE            reduce using rule 33 (funcstat -> vars funcstat .)
    $end            reduce using rule 33 (funcstat -> vars funcstat .)


state 269

    (20) dimlist -> LBRCKT CTEINT . RBRCKT append_dim dimlist
    RBRCKT          shift and go to state 272


state 270

    (17) listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims . listdv
    (21) listdv -> . empty
    (22) listdv -> . COMMA listids
    (101) empty -> .
    COMMA           shift and go to state 227
    SCOLON          reduce using rule 101 (empty -> .)

    listdv                         shift and go to state 273
    empty                          shift and go to state 226

state 271

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL . condst RCURL add_jquad
    (86) condst -> . statement condstdv
    (34) statement -> . rreturn SCOLON
    (35) statement -> . wwhile
    (36) statement -> . cond
    (37) statement -> . pprint SCOLON
    (38) statement -> . read SCOLON
    (39) statement -> . funccall SCOLON
    (40) statement -> . shrtassgn SCOLON
    (41) statement -> . assign SCOLON
    (42) statement -> . expr
    (92) rreturn -> . RETURN expr check_return
    (89) wwhile -> . WHILE add_wpquad LPAREN expr RPAREN gen_wquad DO LCURL whiledv add_wquad
    (84) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad
    (85) cond -> . IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL add_jquad
    (77) pprint -> . PRINT LPAREN printlist RPAREN gen_print_quads
    (75) read -> . READ LPAREN varidx add_vidx gen_idxread RPAREN
    (76) read -> . READ LPAREN ID RPAREN gen_read
    (69) funccall -> . ID FCALL LPAREN validate_fid fcallparams RPAREN add_curr_pquad
    (68) shrtassgn -> . ID SHRT expr gen_shrt_assign
    (66) assign -> . varidx add_vidx ASGN expr gen_idx_assign
    (67) assign -> . ID ASGN expr gen_assign
    (43) expr -> . exprdv
    (98) varidx -> . ID LBRCKT validate_arr expr RBRCKT gen_vdim arrindex
    (44) exprdv -> . bexp check_expr_st
    (45) exprdv -> . bexp OR add_oper exprdv check_expr_st
    (46) exprdv -> . bexp AND add_oper exprdv check_expr_st
    (47) bexp -> . asexp check_bexp_st
    (48) bexp -> . asexp GTEQ add_oper bexp check_bexp_st
    (49) bexp -> . asexp LTEQ add_oper bexp check_bexp_st
    (50) bexp -> . asexp NOTEQ add_oper bexp check_bexp_st
    (51) bexp -> . asexp EQ add_oper bexp check_bexp_st
    (52) bexp -> . asexp GT add_oper bexp check_bexp_st
    (53) bexp -> . asexp LT add_oper bexp check_bexp_st
    (54) asexp -> . emdexp check_asexp_st
    (55) asexp -> . emdexp SUB add_oper asexp check_asexp_st
    (56) asexp -> . emdexp ADD add_oper asexp check_asexp_st
    (57) emdexp -> . pexp check_emdexp_st
    (58) emdexp -> . pexp DIV add_oper emdexp check_emdexp_st
    (59) emdexp -> . pexp MULT add_oper emdexp check_emdexp_st
    (60) emdexp -> . pexp EXP add_oper emdexp check_emdexp_st
    (61) pexp -> . funccall add_funcv
    (62) pexp -> . varidx add_vidx
    (63) pexp -> . ID add_vid
    (64) pexp -> . const save_const
    (65) pexp -> . LPAREN push_oper_ctx exprdv RPAREN pop_oper_ctx
    (93) const -> . CTESTR
    (94) const -> . CTEINT
    (95) const -> . CTEFLT
    (96) const -> . FALSE
    (97) const -> . TRUE
    RETURN          shift and go to state 25
    WHILE           shift and go to state 26
    IF              shift and go to state 27
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    ID              shift and go to state 6
    LPAREN          shift and go to state 13
    CTESTR          shift and go to state 37
    CTEINT          shift and go to state 38
    CTEFLT          shift and go to state 39
    FALSE           shift and go to state 40
    TRUE            shift and go to state 41

    expr                           shift and go to state 24
    condst                         shift and go to state 274
    statement                      shift and go to state 230
    rreturn                        shift and go to state 16
    wwhile                         shift and go to state 17
    cond                           shift and go to state 18
    pprint                         shift and go to state 19
    read                           shift and go to state 20
    funccall                       shift and go to state 21
    shrtassgn                      shift and go to state 22
    assign                         shift and go to state 23
    varidx                         shift and go to state 30
    exprdv                         shift and go to state 31
    bexp                           shift and go to state 32
    asexp                          shift and go to state 33
    emdexp                         shift and go to state 34
    pexp                           shift and go to state 35
    const                          shift and go to state 36

state 272

    (20) dimlist -> LBRCKT CTEINT RBRCKT . append_dim dimlist
    (107) append_dim -> .
    LBRCKT          reduce using rule 107 (append_dim -> .)
    COMMA           reduce using rule 107 (append_dim -> .)
    SCOLON          reduce using rule 107 (append_dim -> .)

    append_dim                     shift and go to state 275

state 273

    (17) listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv .
    SCOLON          reduce using rule 17 (listids -> ID LBRCKT CTEINT RBRCKT store_arrid dimlist def_dims listdv .)


state 274

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst . RCURL add_jquad
    RCURL           shift and go to state 276


state 275

    (20) dimlist -> LBRCKT CTEINT RBRCKT append_dim . dimlist
    (19) dimlist -> . empty
    (20) dimlist -> . LBRCKT CTEINT RBRCKT append_dim dimlist
    (101) empty -> .
    LBRCKT          shift and go to state 259
    COMMA           reduce using rule 101 (empty -> .)
    SCOLON          reduce using rule 101 (empty -> .)

    dimlist                        shift and go to state 277
    empty                          shift and go to state 261

state 276

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL . add_jquad
    (131) add_jquad -> .
    MAIN            reduce using rule 131 (add_jquad -> .)
    FUNCTION        reduce using rule 131 (add_jquad -> .)
    VAR             reduce using rule 131 (add_jquad -> .)
    RETURN          reduce using rule 131 (add_jquad -> .)
    WHILE           reduce using rule 131 (add_jquad -> .)
    IF              reduce using rule 131 (add_jquad -> .)
    PRINT           reduce using rule 131 (add_jquad -> .)
    READ            reduce using rule 131 (add_jquad -> .)
    ID              reduce using rule 131 (add_jquad -> .)
    LPAREN          reduce using rule 131 (add_jquad -> .)
    CTESTR          reduce using rule 131 (add_jquad -> .)
    CTEINT          reduce using rule 131 (add_jquad -> .)
    CTEFLT          reduce using rule 131 (add_jquad -> .)
    FALSE           reduce using rule 131 (add_jquad -> .)
    TRUE            reduce using rule 131 (add_jquad -> .)
    $end            reduce using rule 131 (add_jquad -> .)
    RCURL           reduce using rule 131 (add_jquad -> .)

    add_jquad                      shift and go to state 278

state 277

    (20) dimlist -> LBRCKT CTEINT RBRCKT append_dim dimlist .
    COMMA           reduce using rule 20 (dimlist -> LBRCKT CTEINT RBRCKT append_dim dimlist .)
    SCOLON          reduce using rule 20 (dimlist -> LBRCKT CTEINT RBRCKT append_dim dimlist .)


state 278

    (84) cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .
    MAIN            reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    FUNCTION        reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    VAR             reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    RETURN          reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    WHILE           reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    IF              reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    PRINT           reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    READ            reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    ID              reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    LPAREN          reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    CTESTR          reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    CTEINT          reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    CTEFLT          reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    FALSE           reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    TRUE            reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    $end            reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
    RCURL           reduce using rule 84 (cond -> IF LPAREN expr RPAREN LCURL gen_cond_quad condst RCURL gen_egoto ELSE LCURL condst RCURL add_jquad .)
